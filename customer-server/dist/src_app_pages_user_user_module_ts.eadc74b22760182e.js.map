{"version":3,"file":"src_app_pages_user_user_module_ts.eadc74b22760182e.js","mappings":"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","sources":["./src/app/pages/user/change-password/change-password.component.ts","./src/app/pages/user/change-password/change-password.component.html","./src/app/pages/user/notification/notification.component.ts","./src/app/pages/user/profile/profile.component.ts","./src/app/pages/user/profile/profile.component.html","./src/app/pages/user/user.module.ts","./src/app/theme/layout/index.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/core/services/user/user.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss'],\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  myForm: FormGroup;\r\n  submitted = false;\r\n  passMisMatch = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private userService: UserService,\r\n    private router: Router\r\n  ) {\r\n    this.myForm = this.formBuilder.group({\r\n      oldPassword: ['', Validators.required],\r\n      newPassword: [\r\n        '',\r\n        Validators.compose([Validators.required, Validators.minLength(6)]),\r\n      ],\r\n      confirmNewPassword: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  get f() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // console.log(this.myForm.value);\r\n    if (this.myForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.myForm.value.newPassword !== this.myForm.value.confirmNewPassword\r\n    ) {\r\n      this.passMisMatch = true;\r\n      return;\r\n    } else {\r\n      this.passMisMatch = false;\r\n    }\r\n\r\n    const payload = {\r\n      fkAdminId: localStorage.getItem('userId'),\r\n      strOldPaswd: this.myForm.value.oldPassword,\r\n      strNewPaswd: this.myForm.value.newPassword,\r\n    };\r\n    this.userService.updatePassword(payload).subscribe((res) => {\r\n      if (res.success) {\r\n        Swal.fire('Success', res.message, 'success');\r\n        this.router.navigate(['/user/profile']);\r\n      } else {\r\n        Swal.fire('Error', res.message, 'error');\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"w-full\">\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <div class=\"card-title\">\r\n        <h4 class=\"mb-0\">Change Password</h4>\r\n      </div>\r\n\r\n      <form [formGroup]=\"myForm\">\r\n        <table>\r\n          <tr>\r\n            <td>\r\n              <label for=\"oldPassword\">Old Password</label>\r\n            </td>\r\n            <td class=\"w-2/3 p-2\">\r\n              <input\r\n                id=\"oldPassword\"\r\n                type=\"text\"\r\n                class=\"form-control form-control-solid\"\r\n                formControlName=\"oldPassword\"\r\n                placeholder=\"Old Password\"\r\n              />\r\n              <div\r\n                *ngIf=\"submitted && f.oldPassword.errors\"\r\n                class=\"text-red-500\"\r\n              >\r\n                <small *ngIf=\"f.oldPassword.errors.required\">\r\n                  Old Password is required\r\n                </small>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <label for=\"newPassword\">New Password</label>\r\n            </td>\r\n            <td class=\"w-2/3 p-2\">\r\n              <input\r\n                id=\"newPassword\"\r\n                type=\"text\"\r\n                class=\"form-control form-control-solid\"\r\n                formControlName=\"newPassword\"\r\n                placeholder=\"New Password\"\r\n              />\r\n              <div\r\n                *ngIf=\"submitted && f.newPassword.errors\"\r\n                class=\"text-red-500\"\r\n              >\r\n                <small *ngIf=\"f.newPassword.errors.required\">\r\n                  New Password is required\r\n                </small>\r\n                <small *ngIf=\"f.newPassword.errors.minlength\">\r\n                  Password length should be at least 6 characters\r\n                </small>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <label for=\"confirmNewPassword\">Confirm New Password</label>\r\n            </td>\r\n            <td class=\"w-2/3 p-2\">\r\n              <input\r\n                id=\"confirmNewPassword\"\r\n                type=\"text\"\r\n                class=\"form-control form-control-solid\"\r\n                placeholder=\"Confirm New Password\"\r\n                formControlName=\"confirmNewPassword\"\r\n              />\r\n              <div\r\n                *ngIf=\"submitted && f.confirmNewPassword.errors\"\r\n                class=\"text-red-500\"\r\n              >\r\n                <small *ngIf=\"f.confirmNewPassword.errors.required\">\r\n                  Confirm New Password is required\r\n                </small>\r\n              </div>\r\n              <div class=\"text-red-500\" *ngIf=\"submitted && passMisMatch\">\r\n                <small> Passwords do not match </small>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </form>\r\n\r\n      <div class=\"text-right\">\r\n        <button class=\"btn btn-primary btn-sm\" (click)=\"onSubmit()\">\r\n          Change Password\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.scss'],\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n  arrNotifications: any = [];\r\n\r\n  // constructor(private userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    // this.getPushNotification();\r\n  }\r\n\r\n  // getPushNotification() {\r\n  //   const obj = {\r\n  //     fkAdminId: localStorage.getItem('userId'),\r\n  //     intSkipCount: '0',\r\n  //     intLimitCount: '100',\r\n  //   };\r\n\r\n  //   this.userService.getPushNotification(obj).subscribe((res) => {\r\n  //     if (res.success) {\r\n  //       this.arrNotifications = res.data;\r\n  //     } else {\r\n  //       this.arrNotifications = [];\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  redirectTo(link) {\r\n    if (link) {\r\n      window.open(link, '_blank');\r\n    }\r\n  }\r\n\r\n  // markAllAsRead() {\r\n  //   const arr = this.arrNotifications.map((item) => {\r\n  //     return item._id;\r\n  //   });\r\n  //   console.log('arr', arr);\r\n  //   const obj = {\r\n  //     fkPushArray: arr,\r\n  //   };\r\n\r\n  //   this.userService.pushStatusChange(obj).subscribe((res) => {\r\n  //     if (res.success) {\r\n  //       this.getPushNotification();\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // markAsRead(id) {\r\n  //   console.log('id', id);\r\n\r\n  //   const obj = {\r\n  //     fkPushArray: [id],\r\n  //   };\r\n\r\n  //   this.userService.pushStatusChange(obj).subscribe((res) => {\r\n  //     if (res.success) {\r\n  //       this.getPushNotification();\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // clearAll() {\r\n  //   console.log('clearAll');\r\n\r\n  //   const obj = {\r\n  //     fkAdminId: localStorage.getItem('userId'),\r\n  //   };\r\n\r\n  //   this.userService.clearAllPush(obj).subscribe((res) => {\r\n  //     if (res.success) {\r\n  //       this.getPushNotification();\r\n  //     }\r\n  //   });\r\n  // }\r\n}\r\n","import { AfterViewChecked, Component } from '@angular/core';\r\nimport { PageInfoService } from 'src/app/theme/layout';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss'],\r\n})\r\nexport class ProfileComponent implements AfterViewChecked {\r\n  username: string = '';\r\n  email: string = '';\r\n  role: string = '';\r\n  level: string = '';\r\n  suppliers: any[] = [];\r\n  supType: string = '';\r\n\r\n  constructor(private pageInfoService: PageInfoService) {\r\n    this.username = localStorage.getItem('userName') || '';\r\n    this.email = localStorage.getItem('email') || '';\r\n    this.role = localStorage.getItem('role') || '';\r\n    this.level = localStorage.getItem('userLevel') || '';\r\n    this.supType = localStorage.getItem('supType') || '';\r\n    this.suppliers = JSON.parse(localStorage.getItem('supList') || '[]');\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.pageInfoService.updateTitle('Profile');\r\n  }\r\n}\r\n","<div class=\"card w-full\">\r\n  <div class=\"card-body\">\r\n    <div class=\"flex max-md:flex-col gap-4\">\r\n      <div\r\n        class=\"h-24 w-24 rounded bg-primary font-semibold text-4xl flex justify-center items-center text-white flex-shrink-0\"\r\n      >\r\n        {{ username.charAt(0) }}\r\n      </div>\r\n      <div class=\"flex-1\">\r\n        <p class=\"card-text\">\r\n          <b>Name:</b>\r\n          {{ username }}\r\n        </p>\r\n        <p class=\"card-text\">\r\n          <b>Email:</b>\r\n          {{ email }}\r\n        </p>\r\n        <p class=\"card-text\">\r\n          <b>Role:</b>\r\n\r\n          <span class=\"badge badge-light-info fw-bolder fs-8 px-2 py-1 ms-2\">\r\n            {{ role }}\r\n          </span>\r\n        </p>\r\n        <p class=\"card-text\" *ngIf=\"role === 'INTERNAL'\">\r\n          <b>Level:</b>\r\n          <span class=\"badge badge-light-success fw-bolder fs-8 px-2 py-1 ms-2\">\r\n            Level {{ level }}\r\n          </span>\r\n        </p>\r\n        <p class=\"card-text\" *ngIf=\"role === 'INTERNAL'\">\r\n          <b>Suppliers:</b>\r\n          <span\r\n            class=\"badge badge-light-primary fw-bolder fs-8 px-2 py-1 ms-2\"\r\n            *ngIf=\"supType === 'ALL'\"\r\n          >\r\n            ACCESS TO ALL SUPPLIERS\r\n          </span>\r\n          <span\r\n            class=\"badge badge-light-primary fw-bolder fs-8 px-2 py-1 mx-2 my-1\"\r\n            *ngFor=\"let sup of suppliers\"\r\n          >\r\n            {{ sup.supp_No }} - {{ sup.Vendor_Name }}\r\n          </span>\r\n        </p>\r\n        <div class=\"text-right\">\r\n          <a class=\"btn btn-primary btn-sm\" [routerLink]=\"['change-password']\">\r\n            Change Password\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NotificationComponent } from './notification/notification.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProfileComponent,\r\n    ChangePasswordComponent,\r\n    NotificationComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        redirectTo: 'profile',\r\n        pathMatch: 'full',\r\n      },\r\n      {\r\n        path: 'profile',\r\n        component: ProfileComponent,\r\n      },\r\n      {\r\n        path: 'notification',\r\n        component: NotificationComponent,\r\n      },\r\n      {\r\n        path: 'profile/change-password',\r\n        component: ChangePasswordComponent,\r\n      },\r\n    ]),\r\n  ],\r\n})\r\nexport class UserModule {}\r\n","export * from './layout.module';\r\nexport * from './core/layout.service';\r\nexport * from './core/page-info.service';\r\n"],"names":[],"sourceRoot":"webpack:///"}