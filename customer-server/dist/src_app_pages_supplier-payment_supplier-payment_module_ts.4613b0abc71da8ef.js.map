{"version":3,"file":"src_app_pages_supplier-payment_supplier-payment_module_ts.4613b0abc71da8ef.js","mappings":"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","sources":["./src/app/pages/supplier-payment/create-supplier-payment/create-supplier-payment.component.ts","./src/app/pages/supplier-payment/create-supplier-payment/create-supplier-payment.component.html","./src/app/pages/supplier-payment/manage-supplier-payment/manage-supplier-payment.component.ts","./src/app/pages/supplier-payment/manage-supplier-payment/manage-supplier-payment.component.html","./src/app/pages/supplier-payment/supplier-payment.module.ts","./src/app/pages/supplier-payment/update-supplier-payment/update-supplier-payment.component.ts","./src/app/pages/supplier-payment/update-supplier-payment/update-supplier-payment.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { SupplierService } from 'src/app/core/services/supplier/supplier.service';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-create-supplier-payment',\n  templateUrl: './create-supplier-payment.component.html',\n  styleUrls: ['./create-supplier-payment.component.scss'],\n})\nexport class CreateSupplierPaymentComponent {\n  arrAllSuppliers: any = [];\n  arrTransferMode: any = [];\n  arrBanks: any = [];\n  arrPaymentType: any = [\n    {\n      type: 'G-Voucher (Credit)',\n      sentType: 'SERVICE',\n      mode: 'Credit',\n    },\n    {\n      type: 'G-Voucher (Debit)',\n      sentType: 'SERVICE',\n      mode: 'Debit',\n    },\n    {\n      type: 'PAID',\n      sentType: 'PAID',\n      mode: '',\n    },\n    // {\n    //   type: 'REFUND',\n    // },\n  ];\n  myForm: FormGroup;\n  submitted: boolean = false;\n  isLoading = false;\n\n  constructor(\n    private supplierService: SupplierService,\n    private toastr: ToastrService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) {\n    this.myForm = this.formBuilder.group({\n      supplier: [null, Validators.required],\n      customer: ['', Validators.required],\n      totalAmount: [0, Validators.required],\n      paidAmount: [0, Validators.required],\n      Service_Credit_Amount: ['0', Validators.required],\n      Service_Debit_Amount: ['0', Validators.required],\n      paymentDetails: this.formBuilder.array([]),\n    });\n\n    this.getAllSupplierAll();\n    this.getMetaData();\n    this.getMetaDataBank();\n  }\n\n  get f() {\n    return this.myForm.controls;\n  }\n\n  get paymentDetails(): FormArray {\n    return this.myForm.get('paymentDetails') as FormArray;\n  }\n\n  newPaymentDetails(): FormGroup {\n    return this.formBuilder.group({\n      type: [null, Validators.required],\n      mode: [''],\n      transferMode: [null, Validators.required],\n      transferPercent: [''],\n      transferPercentage: [''],\n      bank: [null],\n      amount: ['', Validators.required],\n      date: ['', Validators.required],\n      description: [''],\n    });\n  }\n\n  removeItem(i: number) {\n    Swal.fire({\n      title: 'Do you want to remove?',\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n      reverseButtons: true,\n      confirmButtonColor: '#dc3741',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.paymentDetails.removeAt(i);\n      }\n    });\n  }\n\n  addItem() {\n    if (this.f.supplier.value === '' || this.f.supplier.value === null) {\n      this.toastr.warning('', 'Choose a supplier');\n      return;\n    }\n    this.paymentDetails.push(this.newPaymentDetails());\n  }\n\n  getAllSupplierAll() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      fkSupplierId: '',\n      strName: '',\n      cust_Code: '',\n      fromDate: '',\n      endDate: '',\n      intSkipCount: '0',\n      intPageLimit: '1000000',\n    };\n    this.supplierService.getAllSupplier(obj).subscribe((res) => {\n      if (res.success) {\n        this.arrAllSuppliers = res.data.map((d) => {\n          return {\n            ...d,\n            displayName: d.sup_Code + ' - ' + d.strName,\n          };\n        });\n      } else {\n        this.arrAllSuppliers = [];\n      }\n    });\n  }\n\n  onTransferChange(val, i) {\n    this.paymentDetails.at(i).patchValue({ transferPercent: val.percentage });\n  }\n\n  onChangeSupplier() {\n    this.myForm.patchValue({\n      totalAmount: this.myForm.value.supplier.Amount,\n      customer: this.myForm.value.supplier.customer_Name,\n      paidAmount: this.myForm.value.supplier?.Total_Paid_Amount || 0,\n      Service_Credit_Amount:\n        this.myForm.value.supplier?.Service_Credit_Amount || 0,\n      Service_Debit_Amount:\n        this.myForm.value.supplier?.Service_Debit_Amount || 0,\n    });\n  }\n\n  onPaymentChange(event, i) {\n    this.paymentDetails.at(i).patchValue({ mode: event.mode });\n  }\n\n  resetForm() {\n    this.myForm.reset();\n    this.submitted = false;\n  }\n\n  getMetaData() {\n    const obj = {\n      metaType: 'transfermod', // Amentities transfermod\n    };\n\n    this.supplierService.metaData(obj).subscribe((data) => {\n      if (data.success) {\n        this.arrTransferMode = data.data;\n      } else {\n        this.arrTransferMode = [];\n      }\n    });\n  }\n  getMetaDataBank() {\n    const obj = {\n      metaType: 'BANK', // Amentities transfermod\n    };\n\n    this.supplierService.metaData(obj).subscribe((data) => {\n      if (data.success) {\n        this.arrBanks = data.data;\n      } else {\n        this.arrBanks = [];\n      }\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.myForm.invalid) {\n      return;\n    }\n\n    const paymentDetails = this.myForm.value.paymentDetails.map(\n      (paymentDetails) => {\n        const obj: any = {\n          actualAmount: paymentDetails.amount,\n          mode: paymentDetails.mode,\n          bank: paymentDetails.bank,\n          date: paymentDetails.date,\n          description: paymentDetails.description,\n          transferMode: paymentDetails.transferMode,\n          transferPercent: paymentDetails.transferPercent,\n          transferPercentage: paymentDetails.transferPercentage,\n          type: paymentDetails.type,\n        };\n\n        // if (paymentDetails.transferPercent > 0) {\n        //   obj.amount =\n        //     paymentDetails.amount -\n        //     paymentDetails.amount * (paymentDetails.transferPercent / 100);\n        // } else {\n        obj.amount = paymentDetails.amount;\n        // }\n\n        return obj;\n      }\n    );\n\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      fkSupplierId: this.myForm.value.supplier.fkSupplierId,\n      fkCustomerId: this.myForm.value.supplier.fkCustomerId,\n      Total_Amount: this.myForm.value.supplier.Amount,\n      // cust_Code: '',\n      sup_Code: this.myForm.value.supplier.sup_Code,\n      payment_Details: paymentDetails,\n    };\n\n    this.isLoading = true;\n    this.supplierService.addPaymentToSupplier(obj).subscribe((res) => {\n      this.isLoading = false;\n      if (res.success) {\n        Swal.fire({\n          title: 'Success',\n          text: 'Successfully Created Supplier Payment',\n          icon: 'success',\n        }).then((value) => {\n          if (value) {\n            this.myForm.reset();\n            this.submitted = false;\n            this.router.navigate(['/supplier-payment']);\n          }\n        });\n      } else {\n        Swal.fire({\n          title: 'Error',\n          text: res.message,\n          icon: 'error',\n        });\n      }\n    });\n  }\n}\n","<!--begin::Col-->\n<div class=\"col-md-12 col-lg-12 md-m-5\">\n  <div class=\"card\">\n    <!-- begin::Header -->\n    <div class=\"card-header border-0\">\n      <h3 class=\"card-title fw-bold text-dark\">Create Supplier Payment</h3>\n    </div>\n    <!-- end::Header -->\n    <!-- begin::Body -->\n    <div class=\"card-body pt-2\">\n      <!-- begin::Item -->\n      <form [formGroup]=\"myForm\">\n        <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\n          <div>\n            <label for=\"name\">\n              <span class=\"required\"> Supplier Name </span>\n            </label>\n            <ng-select\n              [items]=\"arrAllSuppliers\"\n              bindLabel=\"displayName\"\n              id=\"name\"\n              formControlName=\"supplier\"\n              (change)=\"onChangeSupplier()\"\n              placeholder=\"Start Typing...\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.supplier.errors\n              }\"\n            >\n            </ng-select>\n            <div *ngIf=\"submitted && f.supplier.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.supplier.errors.required\">\n                Supplier Name required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"customer\">\n              <span class=\"\"> Customer </span>\n            </label>\n            <div class=\"form-control form-control-solid min-h-[43.5px]\">\n              {{ myForm.value.customer }}\n            </div>\n          </div>\n\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> Total Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.totalAmount.value }}\n            </div>\n          </div>\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> Paid Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.paidAmount.value }}\n            </div>\n            <div\n              class=\"text-green-600 text-sm mt-1.5\"\n              *ngIf=\"\n                f.totalAmount.value === f.paidAmount.value &&\n                f.totalAmount.value !== 0\n              \"\n            >\n              Fully Paid. No Balance Payment\n            </div>\n          </div>\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> Balance Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.totalAmount.value - f.paidAmount.value }}\n            </div>\n            <div\n              class=\"text-green-600 text-sm mt-1.5\"\n              *ngIf=\"\n                f.totalAmount.value - f.paidAmount.value === 0 &&\n                f.totalAmount.value > 0\n              \"\n            >\n              Payment Completed\n            </div>\n          </div>\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> G-Voucher Credit Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Service_Credit_Amount.value }}\n            </div>\n          </div>\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> G-Voucher Debit Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Service_Debit_Amount.value }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-12 text-right my-3\">\n          <button class=\"btn btn-primary btn-sm\" (click)=\"addItem()\">\n            <i class=\"bi bi-plus\"></i>\n            Add Payment\n          </button>\n        </div>\n\n        <div *ngIf=\"paymentDetails.controls.length\" class=\"mt-5\">\n          <div formArrayName=\"paymentDetails\" class=\"divide-y\">\n            <div\n              *ngFor=\"let skill of paymentDetails.controls; let i = index\"\n              [formGroupName]=\"i\"\n              class=\"grid grid-cols-6 max-xl:grid-cols-4 max-lg:grid-cols-4 max-md:grid-cols-2 max-sm:grid-cols-1 gap-3 py-3 mb-5\"\n            >\n              <!-- class=\"flex gap-3 mb-3 justify-between overflow-scroll\" -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Payment Type </span>\n                </label>\n                <ng-select\n                  [items]=\"arrPaymentType\"\n                  bindLabel=\"type\"\n                  bindValue=\"sentType\"\n                  dropdownPosition=\"bottom\"\n                  (change)=\"onPaymentChange($event, i)\"\n                  placeholder=\"Choose a Payment Type\"\n                  formControlName=\"type\"\n                >\n                </ng-select>\n                <div\n                  *ngIf=\"paymentDetails.get(i + '.mode')?.value\"\n                  class=\"mt-1 text-{{\n                    paymentDetails.get(i + '.mode')?.value === 'Credit'\n                      ? 'green'\n                      : 'red'\n                  }}-600\"\n                >\n                  {{\n                    paymentDetails.get(i + \".mode\")?.value === \"Credit\"\n                      ? \"Pay from Supplier\"\n                      : paymentDetails.get(i + \".mode\")?.value === \"Debit\"\n                      ? \"Pay to Supplier\"\n                      : \"\"\n                  }}\n                </div>\n\n                <div\n                  *ngIf=\"submitted && paymentDetails.get(i + '.type')?.errors\"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"paymentDetails.get(i + '.type')?.errors?.required\"\n                    >Payment Type Required\n                  </small>\n                </div>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Transfer Mode </span>\n                </label>\n                <ng-select\n                  [items]=\"arrTransferMode\"\n                  bindLabel=\"payment_mode\"\n                  bindValue=\"payment_mode\"\n                  (change)=\"onTransferChange($event, i)\"\n                  dropdownPosition=\"bottom\"\n                  placeholder=\"Choose a Transfer Mode\"\n                  formControlName=\"transferMode\"\n                >\n                </ng-select>\n                <!-- <div\n                class=\"text-sm text-gray-700 mt-1\"\n                *ngIf=\"\n                  paymentDetails.get(i + '.transferPercent')?.value > 0\n                \"\n              >\n                <span class=\"font-bold\"\n                  >{{\n                    paymentDetails.get(i + \".transferPercent\")?.value\n                  }}%</span\n                >\n                will be deducted\n              </div> -->\n\n                <div\n                  *ngIf=\"\n                    submitted && paymentDetails.get(i + '.transferMode')?.errors\n                  \"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"\n                      paymentDetails.get(i + '.transferMode')?.errors?.required\n                    \"\n                    >Transfer Mode Required\n                  </small>\n                </div>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Transfer %</span>\n                </label>\n                <ng-container\n                  *ngIf=\"\n                    paymentDetails.get(i + '.transferPercent')?.value > 0;\n                    else elseTemplate\n                  \"\n                >\n                  <input\n                    type=\"number\"\n                    class=\"form-control form-control-solid\"\n                    formControlName=\"transferPercentage\"\n                    placeholder=\"Percentage %\"\n                  />\n                </ng-container>\n                <ng-template #elseTemplate>\n                  <div class=\"form-control form-control-solid\">0</div>\n                </ng-template>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Bank </span>\n                </label>\n                <ng-select\n                  [items]=\"arrBanks\"\n                  bindLabel=\"bankName\"\n                  bindValue=\"bankName\"\n                  dropdownPosition=\"bottom\"\n                  placeholder=\"Choose a Bank\"\n                  formControlName=\"bank\"\n                >\n                </ng-select>\n\n                <div\n                  *ngIf=\"submitted && paymentDetails.get(i + '.bank')?.errors\"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"paymentDetails.get(i + '.bank')?.errors?.required\"\n                    >Bank Required\n                  </small>\n                </div>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Amount </span>\n                </label>\n                <input\n                  type=\"number\"\n                  class=\"form-control form-control-solid\"\n                  placeholder=\"Amount\"\n                  formControlName=\"amount\"\n                />\n                <!-- <div\n                class=\"text-sm text-gray-700 mt-1\"\n                *ngIf=\"\n                  paymentDetails.get(i + '.transferPercent')?.value > 0\n                \"\n              >\n                <span class=\"font-bold\">\n                  {{\n                    paymentDetails.get(i + \".amount\")?.value *\n                      (paymentDetails.get(i + \".transferPercent\")?.value /\n                        100)\n                  }}\n                </span>\n                will be deducted.\n              </div> -->\n                <div\n                  class=\"text-sm text-orange-600\"\n                  *ngIf=\"\n                    paymentDetails.get(i + '.amount')?.value >\n                    f.totalAmount.value - f.paidAmount.value\n                  \"\n                >\n                  Amount is greater than Balance Amount\n                </div>\n\n                <div\n                  *ngIf=\"submitted && paymentDetails.get(i + '.amount')?.errors\"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"paymentDetails.get(i + '.amount')?.errors?.required\"\n                    >Amount Required\n                  </small>\n                </div>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Date </span>\n                </label>\n                <input\n                  type=\"date\"\n                  class=\"form-control form-control-solid\"\n                  placeholder=\"Date\"\n                  formControlName=\"date\"\n                />\n\n                <div\n                  *ngIf=\"submitted && paymentDetails.get(i + '.date')?.errors\"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"paymentDetails.get(i + '.date')?.errors?.required\"\n                    >Date Required\n                  </small>\n                </div>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Description </span>\n                </label>\n                <input\n                  type=\"text\"\n                  class=\"form-control form-control-solid\"\n                  placeholder=\"Description\"\n                  formControlName=\"description\"\n                />\n\n                <div\n                  *ngIf=\"\n                    submitted && paymentDetails.get(i + '.description')?.errors\n                  \"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"\n                      paymentDetails.get(i + '.description')?.errors?.required\n                    \"\n                  >\n                    Description Required\n                  </small>\n                </div>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> ACTION </span>\n                </label>\n                <div>\n                  <a\n                    class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm\"\n                    (click)=\"removeItem(i)\"\n                  >\n                    <span\n                      [inlineSVG]=\"\n                        './assets/media/icons/duotune/general/gen027.svg'\n                      \"\n                      class=\"svg-icon svg-icon-3 svg-icon-danger\"\n                    ></span>\n                  </a>\n                </div>\n              </div>\n              <!--  -->\n            </div>\n          </div>\n        </div>\n        <!-- <div\n          class=\"table-responsive mb-3 overflow-visible max-h-[50vh]\"\n          [ngClass]=\"{ 'overflow-scroll': paymentDetails.controls.length >= 5 }\"\n          *ngIf=\"paymentDetails.controls.length\"\n        >\n          <table\n            class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\"\n          >\n            <thead>\n              <tr class=\"fw-bold text-muted\">\n                <th class=\"min-w-[200px]\">Payment Type</th>\n                <th class=\"min-w-[200px]\">Transfer Mode</th>\n                <th class=\"min-w-[200px]\">Transfer %</th>\n                <th class=\"min-w-[200px]\">Bank</th>\n                <th class=\"min-w-[120px]\">Amount</th>\n                <th class=\"min-w-[120px]\">Date</th>\n                <th class=\"min-w-[120px]\">Description</th>\n                <th class=\"min-w-[120px]\">ACTION</th>\n              </tr>\n            </thead>\n            <tbody formArrayName=\"paymentDetails\">\n              <tr\n                *ngFor=\"let skill of paymentDetails.controls; let i = index\"\n                [formGroupName]=\"i\"\n              >\n                <td>\n                  <ng-select\n                    [items]=\"arrPaymentType\"\n                    bindLabel=\"type\"\n                    bindValue=\"sentType\"\n                    dropdownPosition=\"bottom\"\n                    (change)=\"onPaymentChange($event, i)\"\n                    placeholder=\"Choose a Payment Type\"\n                    formControlName=\"type\"\n                  >\n                  </ng-select>\n                  <div\n                    *ngIf=\"paymentDetails.get(i + '.mode')?.value\"\n                    class=\"mt-1 text-{{\n                      paymentDetails.get(i + '.mode')?.value === 'Credit'\n                        ? 'green'\n                        : 'red'\n                    }}-600\"\n                  >\n                    {{\n                      paymentDetails.get(i + \".mode\")?.value === \"Credit\"\n                        ? \"Pay from Supplier\"\n                        : paymentDetails.get(i + \".mode\")?.value === \"Debit\"\n                        ? \"Pay to Supplier\"\n                        : \"\"\n                    }}\n                  </div>\n\n                  <div\n                    *ngIf=\"submitted && paymentDetails.get(i + '.type')?.errors\"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"paymentDetails.get(i + '.type')?.errors?.required\"\n                      >Payment Type Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <ng-select\n                    [items]=\"arrTransferMode\"\n                    bindLabel=\"payment_mode\"\n                    bindValue=\"payment_mode\"\n                    (change)=\"onTransferChange($event, i)\"\n                    dropdownPosition=\"bottom\"\n                    placeholder=\"Choose a Transfer Mode\"\n                    formControlName=\"transferMode\"\n                  >\n                  </ng-select>\n\n                  <div\n                    *ngIf=\"\n                      submitted &&\n                      paymentDetails.get(i + '.transferMode')?.errors\n                    \"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"\n                        paymentDetails.get(i + '.transferMode')?.errors\n                          ?.required\n                      \"\n                      >Transfer Mode Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <ng-container\n                    *ngIf=\"\n                      paymentDetails.get(i + '.transferPercent')?.value > 0;\n                      else elseTemplate\n                    \"\n                  >\n                    <input\n                      type=\"number\"\n                      class=\"form-control form-control-solid\"\n                      formControlName=\"transferPercentage\"\n                      placeholder=\"Percentage %\"\n                    />\n                  </ng-container>\n                  <ng-template #elseTemplate>\n                    <div class=\"form-control form-control-solid\">0</div>\n                  </ng-template>\n                </td>\n                <td>\n                  <ng-select\n                    [items]=\"arrBanks\"\n                    bindLabel=\"bankName\"\n                    bindValue=\"bankName\"\n                    dropdownPosition=\"bottom\"\n                    placeholder=\"Choose a Bank\"\n                    formControlName=\"bank\"\n                  >\n                  </ng-select>\n\n                  <div\n                    *ngIf=\"submitted && paymentDetails.get(i + '.bank')?.errors\"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"paymentDetails.get(i + '.bank')?.errors?.required\"\n                      >Bank Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <input\n                    type=\"number\"\n                    class=\"form-control form-control-solid\"\n                    placeholder=\"Amount\"\n                    formControlName=\"amount\"\n                  />\n                  <div\n                    class=\"text-sm text-orange-600\"\n                    *ngIf=\"\n                      paymentDetails.get(i + '.amount')?.value >\n                      f.totalAmount.value - f.paidAmount.value\n                    \"\n                  >\n                    Amount is greater than Balance Amount\n                  </div>\n\n                  <div\n                    *ngIf=\"\n                      submitted && paymentDetails.get(i + '.amount')?.errors\n                    \"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"\n                        paymentDetails.get(i + '.amount')?.errors?.required\n                      \"\n                      >Amount Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <input\n                    type=\"date\"\n                    class=\"form-control form-control-solid\"\n                    placeholder=\"Date\"\n                    formControlName=\"date\"\n                  />\n\n                  <div\n                    *ngIf=\"submitted && paymentDetails.get(i + '.date')?.errors\"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"paymentDetails.get(i + '.date')?.errors?.required\"\n                      >Date Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    class=\"form-control form-control-solid\"\n                    placeholder=\"Description\"\n                    formControlName=\"description\"\n                  />\n\n                  <div\n                    *ngIf=\"\n                      submitted &&\n                      paymentDetails.get(i + '.description')?.errors\n                    \"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"\n                        paymentDetails.get(i + '.description')?.errors?.required\n                      \"\n                    >\n                      Description Required\n                    </small>\n                  </div>\n                </td>\n\n                <td>\n                  <a\n                    class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm\"\n                    (click)=\"removeItem(i)\"\n                  >\n                    <span\n                      [inlineSVG]=\"\n                        './assets/media/icons/duotune/general/gen027.svg'\n                      \"\n                      class=\"svg-icon svg-icon-3 svg-icon-danger\"\n                    ></span>\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div> -->\n\n        <div\n          class=\"grid grid-cols-2 md:grid-cols-6 gap-2 mt-4\"\n          *ngIf=\"paymentDetails.controls.length\"\n        >\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <button class=\"btn btn-light-primary\" (click)=\"resetForm()\">\n            Clear\n          </button>\n          <button\n            class=\"btn btn-primary\"\n            [disabled]=\"isLoading\"\n            (click)=\"onSubmit()\"\n          >\n            Create\n          </button>\n        </div>\n      </form>\n    </div>\n    <!-- end::Body -->\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport * as moment from 'moment';\nimport { ExportToExcelService } from 'src/app/core/services/common/export-to-excel.service';\nimport { CustomerService } from 'src/app/core/services/customer/customer.service';\nimport { PagerService } from 'src/app/core/services/pagination/pager.service';\nimport { SupplierService } from 'src/app/core/services/supplier/supplier.service';\n\n@Component({\n  selector: 'app-manage-supplier-payment',\n  templateUrl: './manage-supplier-payment.component.html',\n  styleUrls: ['./manage-supplier-payment.component.scss'],\n})\nexport class ManageSupplierPaymentComponent implements OnInit {\n  arrSupplier: any = [];\n  arrAllCustomers: any = [];\n  // arrAllSuppliers: any = [];\n  // pagination\n  pager: any = {};\n  intTotalCount = 0;\n  intPageLimit = 50;\n  intSkipCount = 0;\n  fetchLoading = false;\n\n  myForm: FormGroup;\n\n  constructor(\n    private supplierService: SupplierService,\n    private customerService: CustomerService,\n    private exportToExcelService: ExportToExcelService,\n    private formBuilder: FormBuilder,\n    private pageServiceObj: PagerService\n  ) {\n    this.myForm = this.formBuilder.group({\n      supplier: [''],\n      customer: [null],\n      phone: [''],\n      supplierCode: [''],\n      paymentStatus: ['PENDING'],\n    });\n  }\n\n  ngOnInit() {\n    this.getSupplierPayments();\n    this.getAllCustomerAll();\n  }\n\n  setPage(page) {\n    if (page < 1 || page > this.pager.totalPages) {\n      return;\n    }\n    this.pager = this.pageServiceObj.getPager(\n      this.intTotalCount,\n      page,\n      this.intPageLimit\n    );\n    this.getSupplierPayments();\n  }\n  getAllCustomerAll() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      fkCustomerId: '',\n      strName: '',\n      cust_Code: '',\n      fromDate: '',\n      endDate: '',\n      intSkipCount: '0',\n      intPageLimit: '1000000',\n    };\n    this.customerService.getAllCustomer(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        this.arrAllCustomers = res.data.map((d) => {\n          return {\n            ...d,\n            displayName: d.cust_Code + ' - ' + d.strName,\n          };\n        });\n      } else {\n        this.arrAllCustomers = [];\n      }\n    });\n  }\n  // getAllSupplierAll() {\n  //   const obj = {\n  //     strLoginUserId: localStorage.getItem('userId'),\n  //     fkSupplierId: '',\n  //     strName: '',\n  //     sup_Code: '',\n  //     fromDate: '',\n  //     endDate: '',\n  //     intSkipCount: '0',\n  //     intPageLimit: '1000000',\n  //   };\n  //   this.supplierService.getAllSupplier(obj).subscribe((res) => {\n  //     this.fetchLoading = false;\n  //     if (res.success) {\n  //       this.arrAllSuppliers = res.data.map((d) => {\n  //         return {\n  //           ...d,\n  //           displayName: d.sup_Code + ' - ' + d.strName,\n  //         };\n  //       });\n  //     } else {\n  //       this.arrAllSuppliers = [];\n  //     }\n  //   });\n  // }\n\n  onCustomerChange() {\n    const supplier = this.arrAllCustomers.find((e) => {\n      return e.cust_Code === this.myForm.value.customer;\n    });\n\n    this.myForm.patchValue({\n      supplier: supplier.supplier_Name,\n      supplierCode: supplier.sup_Code,\n    });\n  }\n\n  getFromCount() {\n    return this.intPageLimit * (this.pager.currentPage - 1) + 1;\n  }\n\n  getToCount() {\n    return (\n      this.intPageLimit * (this.pager.currentPage - 1) + this.arrSupplier.length\n    );\n  }\n  getSupplierPayments() {\n    let skipCount = this.intSkipCount;\n    if (this.pager.intSkipCount) {\n      skipCount = this.pager.intSkipCount;\n    }\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: skipCount,\n      intPageLimit: this.intPageLimit,\n      fkSupplierId: '',\n      sup_Code: this.myForm.value.supplierCode,\n      cust_Code: this.myForm.value.customer,\n      strPhone: this.myForm.value.phone,\n      strName: '',\n      payment_Status: this.myForm.value.paymentStatus,\n      strCountry: '',\n    };\n\n    this.fetchLoading = true;\n    this.supplierService.getPaymentSupplier(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        this.arrSupplier = res.data;\n\n        this.intTotalCount = res.count;\n\n        this.pager = this.pageServiceObj.getPager(\n          this.intTotalCount,\n          this.pager.currentPage,\n          this.intPageLimit\n        );\n      } else {\n        this.arrSupplier = [];\n        // alert(res.message);\n      }\n    });\n  }\n\n  downloadExcel() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: 0,\n      intPageLimit: 1000000,\n      fkSupplierId: '',\n      sup_Code: this.myForm.value.supplierCode,\n      cust_Code: this.myForm.value.customer,\n      strPhone: this.myForm.value.phone,\n      strName: '',\n      payment_Status: this.myForm.value.paymentStatus,\n      strCountry: '',\n    };\n\n    this.fetchLoading = true;\n    this.supplierService.getPaymentSupplier(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        let jsonData: any = [];\n\n        res.data.forEach((e) => {\n          e.paymentDetails.forEach((payment, i) => {\n            let obj: any = {};\n            if (i === 0)\n              obj = {\n                'Supplier Code': e.sup_Code,\n                'Supplier Name': e.supplierName,\n                Phone: e.supplierPhone,\n                Country: e.supplierCountry,\n                Refund: e.Refund_Amount,\n                'Paid Amount': e.Total_Paid_Amount,\n                'G-Voucher Credit': e.Service_Credit_Amount,\n                'G-Voucher Debit': e.Service_Debit_Amount,\n                'Total Amount': e.Total_Amount,\n                Balance: e.Total_Amount - e.Total_Paid_Amount,\n              };\n            else\n              obj = {\n                'Supplier Code': '',\n                'Supplier Name': '',\n                Phone: '',\n                Country: '',\n                Refund: '',\n                'Paid Amount': '',\n                'G-Voucher Credit': '',\n                'G-Voucher Debit': '',\n                'Total Amount': '',\n                Balance: '',\n              };\n            obj['Payment Code'] = payment.payment_Code;\n            obj['Payment Type'] = payment.type;\n            obj['Transfer Mode'] = payment.transferMode;\n            obj['Bank'] = payment.bank;\n            obj['Payment Status'] = payment.paymentStatus;\n            obj['Amount'] = payment.amount;\n            obj['Date'] = moment(payment.date).format('DD-MM-YYYY');\n            obj['Description'] = payment.description;\n            jsonData.push(obj);\n          });\n        });\n\n        // console.log('jsonData', jsonData);\n        this.exportToExcelService.exportAsExcelFile(\n          jsonData,\n          'Supplier Payments '\n        );\n      }\n    });\n  }\n}\n","<div class=\"text-right mb-3\">\n  <button class=\"btn btn-primary btn-sm\" routerLink=\"/supplier-payment/create\">\n    Create Payment\n  </button>\n</div>\n\n<div class=\"card mb-3\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"myForm\">\n      <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\n        <div>\n          <label for=\"customer\">\n            <span class=\"\"> Customer </span>\n          </label>\n          <ng-select\n            [items]=\"arrAllCustomers\"\n            bindLabel=\"displayName\"\n            bindValue=\"cust_Code\"\n            (change)=\"onCustomerChange()\"\n            formControlName=\"customer\"\n            placeholder=\"Start Typing...\"\n          >\n          </ng-select>\n        </div>\n        <div>\n          <label for=\"customer\">\n            <span class=\"\"> Supplier </span>\n          </label>\n          <div class=\"form-control form-control-solid min-h-[43.5px]\">\n            {{ myForm.value.supplier }}\n          </div>\n        </div>\n        <!-- <div>\n          <label for=\"supplier\">\n            <span class=\"\"> Supplier </span>\n          </label>\n          <ng-select\n            [items]=\"arrAllSuppliers\"\n            bindLabel=\"displayName\"\n            bindValue=\"sup_Code\"\n            formControlName=\"supplier\"\n            placeholder=\"Start Typing...\"\n          >\n          </ng-select>\n        </div>\n        <div>\n          <label for=\"phone\">\n            <span class=\"\"> Phone Number </span>\n          </label>\n          <input\n            type=\"text\"\n            id=\"phone\"\n            placeholder=\"Phone Number\"\n            formControlName=\"phone\"\n            class=\"form-control form-control-solid\"\n          />\n        </div> -->\n        <div>\n          <label for=\"status\">\n            <span class=\"\"> Payment Status </span>\n          </label>\n          <div class=\"flex gap-3 py-3\">\n            <div\n              class=\"form-check form-check-custom form-check-warning form-check-solid\"\n            >\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                value=\"PENDING\"\n                formControlName=\"paymentStatus\"\n                id=\"pending\"\n                checked=\"checked\"\n              />\n              <label class=\"form-check-label\" for=\"pending\"> Pending </label>\n            </div>\n            <div\n              class=\"form-check form-check-custom form-check-success form-check-solid\"\n            >\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                value=\"VERIFY\"\n                formControlName=\"paymentStatus\"\n                id=\"verified\"\n              />\n              <label class=\"form-check-label\" for=\"verified\"> Verified </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class=\"text-right\">\n      <button class=\"btn btn-primary btn-sm\" (click)=\"getSupplierPayments()\">\n        <i class=\"bi bi-search\"></i>\n        Search\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"text-right mb-3\">\n  <button class=\"btn btn-secondary btn-sm\" (click)=\"downloadExcel()\">\n    <i class=\"bi bi-cloud-download\"></i>\n    Download\n  </button>\n</div>\n<!--begin::Row-->\n<div class=\"row g-5 g-xl-10\">\n  <div class=\"col-md-12 col-lg-12 md-m-5\">\n    <div class=\"card\">\n      <!-- begin::Body -->\n      <div class=\"card-body\">\n        <!-- begin::Table container -->\n\n        <div\n          class=\"table-responsive\"\n          *ngIf=\"arrSupplier.length > 0; else noDataTemplate\"\n        >\n          <!-- begin::Table -->\n          <table\n            class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\"\n          >\n            <!-- begin::Table head -->\n            <thead>\n              <tr class=\"fw-bold text-muted\">\n                <th class=\"min-w-130px\">Supplier Code</th>\n                <th class=\"min-w-130px text-left\">Supplier Name</th>\n                <th class=\"min-w-130px\">Customer</th>\n                <th class=\"min-w-130px\">Total Amount</th>\n                <th class=\"min-w-130px\">Paid Amount</th>\n                <th class=\"min-w-130px\">Refund</th>\n                <th class=\"min-w-130px\">G-Voucher Credit</th>\n                <th class=\"min-w-130px\">G-Voucher Debit</th>\n                <th class=\"min-w-130px\">Balance</th>\n                <th class=\"min-w-130px\">Action</th>\n              </tr>\n            </thead>\n            <!-- end::Table head -->\n            <!-- begin::Table body -->\n            <tbody>\n              <tr *ngFor=\"let supplier of arrSupplier\">\n                <td>\n                  {{ supplier.sup_Code }}\n                </td>\n                <td class=\"text-left\">\n                  <p class=\"m-0 text-base font-bold\">\n                    {{ supplier.supplierName }}\n                  </p>\n                  <p class=\"m-0\">{{ supplier.phone }}</p>\n                </td>\n                <td>\n                  {{ supplier.customerName }}\n                </td>\n                <td>\n                  {{ supplier.Total_Amount }}\n                </td>\n                <td>\n                  {{ supplier.Total_Paid_Amount }}\n                </td>\n                <td>\n                  {{ supplier.Refund_Amount }}\n                </td>\n                <td>\n                  {{ supplier.Service_Credit_Amount }}\n                </td>\n                <td>\n                  {{ supplier.Service_Debit_Amount }}\n                </td>\n                <td>\n                  {{ supplier.Total_Amount - supplier.Total_Paid_Amount }}\n                </td>\n                <td>\n                  <div class=\"d-flex justify-content-start flex-shrink-0\">\n                    <a\n                      class=\"btn btn-icon bg-light-primary btn-active-color-primary btn-sm me-1\"\n                      [routerLink]=\"[\n                        '/supplier-payment/update',\n                        supplier.fkSupplierId,\n                        myForm.value.paymentStatus\n                      ]\"\n                    >\n                      <span\n                        [inlineSVG]=\"\n                          './assets/media/icons/duotune/general/gen008.svg'\n                        \"\n                        class=\"svg-icon svg-icon-3 svg-icon-primary\"\n                      ></span>\n                    </a>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n            <!-- end::Table body -->\n          </table>\n          <!-- end::Table -->\n        </div>\n        <!-- end::Table container -->\n\n        <!-- begin::Empty -->\n        <ng-template #noDataTemplate>\n          <ng-container *ngIf=\"fetchLoading; else elseTemplate\">\n            <div class=\"d-flex flex-column align-items-center\">\n              <!-- begin::Illustration -->\n              <div class=\"text-center px-4\">\n                <img\n                  src=\"./assets/media/illustrations/dozzy-1/5.png\"\n                  class=\"mw-100 mh-300px animate-pulse\"\n                  alt=\"\"\n                />\n              </div>\n              <!-- end::Illustration -->\n\n              <!-- begin::Message -->\n              <div class=\"fw-bold text-xl text-gray-600 text-center pt-15\">\n                <span\n                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                ></span>\n                Loading Data...\n              </div>\n              <!-- end::Message -->\n            </div>\n          </ng-container>\n          <ng-template #elseTemplate>\n            <div class=\"d-flex flex-column align-items-center\">\n              <!-- begin::Illustration -->\n              <div class=\"text-center px-4\">\n                <img\n                  src=\"./assets/media/illustrations/sketchy-1/5.png\"\n                  class=\"mw-100 mh-300px\"\n                  alt=\"\"\n                />\n              </div>\n              <!-- end::Illustration -->\n\n              <!-- begin::Message -->\n              <div class=\"fw-bold fs-6 text-gray-600 text-center pt-15\">\n                No Data Found\n              </div>\n              <!-- end::Message -->\n            </div>\n          </ng-template>\n        </ng-template>\n        <!-- end::Empty -->\n        <!-- begin::Body -->\n      </div>\n      <!-- end::Card -->\n\n      <div\n        class=\"flex justify-center md:justify-between flex-col md:flex-row p-5\"\n        *ngIf=\"arrSupplier.length > 0\"\n      >\n        <div class=\"fs-6 fw-bold text-gray-700 mb-3 md:mb-0 text-center\">\n          Showing {{ getFromCount() }} to {{ getToCount() }} of\n          {{ intTotalCount }}\n          entries\n        </div>\n\n        <ul class=\"pagination\" *ngIf=\"pager.pages && pager.pages.length\">\n          <li\n            class=\"page-item previous\"\n            [ngClass]=\"{ disabled: pager.currentPage === 1 }\"\n          >\n            <a\n              class=\"page-link cursor-pointer\"\n              (click)=\"setPage(pager.currentPage - 1)\"\n            >\n              <i class=\"previous\"></i>\n            </a>\n          </li>\n\n          <li\n            class=\"page-item\"\n            *ngFor=\"let page of pager.pages\"\n            [ngClass]=\"{ active: pager.currentPage === page }\"\n          >\n            <a class=\"page-link cursor-pointer\" (click)=\"setPage(page)\">\n              {{ page }}\n            </a>\n          </li>\n\n          <li\n            class=\"page-item next\"\n            [ngClass]=\"{\n              disabled: pager.currentPage === pager.totalPages\n            }\"\n          >\n            <a\n              class=\"page-link cursor-pointer\"\n              (click)=\"setPage(pager.currentPage + 1)\"\n            >\n              <i class=\"next\"></i>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <!--end::Col-->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { InlineSVGModule } from 'ng-inline-svg-2';\nimport { WidgetsModule } from 'src/app/theme/partials';\nimport { ManageSupplierPaymentComponent } from './manage-supplier-payment/manage-supplier-payment.component';\nimport { CreateSupplierPaymentComponent } from './create-supplier-payment/create-supplier-payment.component';\nimport { UpdateSupplierPaymentComponent } from './update-supplier-payment/update-supplier-payment.component';\n\n@NgModule({\n  declarations: [\n    ManageSupplierPaymentComponent,\n    CreateSupplierPaymentComponent,\n    UpdateSupplierPaymentComponent,\n  ],\n  imports: [\n    CommonModule,\n    NgbTooltipModule,\n    FormsModule,\n    NgSelectModule,\n    InlineSVGModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ManageSupplierPaymentComponent,\n      },\n      {\n        path: 'create',\n        component: CreateSupplierPaymentComponent,\n      },\n      {\n        path: 'update/:id/:type',\n        component: UpdateSupplierPaymentComponent,\n      },\n    ]),\n    WidgetsModule,\n  ],\n})\nexport class SupplierPaymentModule {}\n","import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { ToastrService } from 'ngx-toastr';\nimport { SupplierService } from 'src/app/core/services/supplier/supplier.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-supplier-payment',\n  templateUrl: './update-supplier-payment.component.html',\n  styleUrls: ['./update-supplier-payment.component.scss'],\n})\nexport class UpdateSupplierPaymentComponent {\n  supplierId = '';\n  paymentId = '';\n  type = '';\n  fetchLoading = false;\n  editIndex: any;\n  arrAllSuppliers: any = [];\n  arrTransferMode: any = [];\n  arrBanks: any = [];\n  arrPaymentType: any = [\n    {\n      type: 'G-Voucher (Credit)',\n      sentType: 'SERVICE',\n      mode: 'Credit',\n    },\n    {\n      type: 'G-Voucher (Debit)',\n      sentType: 'SERVICE',\n      mode: 'Debit',\n    },\n    {\n      type: 'PAID',\n      sentType: 'PAID',\n      mode: '',\n    },\n    {\n      type: 'REFUND',\n      sentType: 'REFUND',\n      mode: 'REFUND',\n    },\n  ];\n  myForm: FormGroup;\n  submitted: boolean = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private supplierService: SupplierService,\n    private toastr: ToastrService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) {\n    activatedRoute.params.subscribe((params) => {\n      this.supplierId = params.id;\n      this.type = params.type;\n    });\n    this.myForm = this.formBuilder.group({\n      supplierCode: [null, Validators.required],\n      supplierName: [null, Validators.required],\n      Total_Amount: ['0', Validators.required],\n      Refund_Amount: ['0', Validators.required],\n      Total_Paid_Amount: ['0', Validators.required],\n      Service_Credit_Amount: ['0', Validators.required],\n      Service_Debit_Amount: ['0', Validators.required],\n      paymentDetails: this.formBuilder.array([]),\n    });\n\n    this.getMetaData();\n    this.getMetaDataBank();\n  }\n  getMetaDataBank() {\n    const obj = {\n      metaType: 'BANK', // Amentities transfermod\n    };\n\n    this.supplierService.metaData(obj).subscribe((data) => {\n      if (data.success) {\n        this.arrBanks = data.data;\n        this.getSupplier();\n        // this.getAllSupplierAll();\n      } else {\n        this.arrBanks = [];\n      }\n    });\n  }\n\n  get f() {\n    return this.myForm.controls;\n  }\n\n  get paymentDetails(): FormArray {\n    return this.myForm.get('paymentDetails') as FormArray;\n  }\n  onPaymentChange(event, i) {\n    this.paymentDetails.at(i).patchValue({ mode: event.mode });\n  }\n\n  newPaymentDetails(): FormGroup {\n    return this.formBuilder.group({\n      id: [''],\n      type: [null, Validators.required],\n      typeView: [null, Validators.required],\n      payment_Code: [''],\n      mode: [''],\n      transferMode: [null, Validators.required],\n      transferPercent: [''],\n      transferPercentage: [''],\n      customerName: [''],\n      actualAmount: [''],\n      bank: [null],\n      verifyDate: [''],\n      amount: ['', Validators.required],\n      date: ['', Validators.required],\n      description: [''],\n    });\n  }\n\n  removeItem(i: number, item: any) {\n    Swal.fire({\n      title: 'Do you want to remove?',\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n      reverseButtons: true,\n      confirmButtonColor: '#dc3741',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const obj = {\n          strLoginUserId: localStorage.getItem('userId'),\n          fkPaymentId: item.id,\n        };\n        this.supplierService.deletePaymentSupplier(obj).subscribe((res) => {\n          if (res.success) {\n            this.paymentDetails.removeAt(i);\n          }\n        });\n      }\n    });\n  }\n  onTransferChange(val, i) {\n    this.paymentDetails.at(i).patchValue({ transferPercent: val.percentage });\n  }\n\n  addItem() {\n    if (\n      this.f.supplierCode.value === '' ||\n      this.f.supplierCode.value === null\n    ) {\n      this.toastr.warning('', 'Choose a Supplier');\n      return;\n    }\n    this.paymentDetails.push(this.newPaymentDetails());\n  }\n  getSupplier() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: 0,\n      intPageLimit: 1,\n      fkSupplierId: this.supplierId,\n      payment_Status: this.type, //or verify\n    };\n\n    this.fetchLoading = true;\n    this.supplierService.getPaymentSupplier(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        this.paymentId = res.data[0]._id;\n        this.patchValue(res.data[0]);\n      } else {\n        this.toastr.error('Error While fetching data');\n      }\n    });\n  }\n\n  patchValue(supplier) {\n    this.myForm.patchValue({\n      supplierCode: supplier.sup_Code,\n      supplierName: supplier.supplierName,\n      Total_Amount: supplier.Total_Amount,\n      Refund_Amount: supplier.Refund_Amount,\n      Service_Credit_Amount: supplier.Service_Credit_Amount,\n      Service_Debit_Amount: supplier.Service_Debit_Amount,\n      Total_Paid_Amount: supplier.Total_Paid_Amount,\n    });\n\n    supplier.payment_Details.forEach((item: any, i) => {\n      this.addItem();\n      this.paymentDetails.at(i).patchValue({\n        id: item.payment_id,\n        type:\n          item.mode === 'Credit'\n            ? 'SERVICE'\n            : item.mode === 'Debit'\n            ? 'SERVICE'\n            : item.type === 'PAID'\n            ? 'PAID'\n            : item.type === 'REFUND'\n            ? 'REFUND'\n            : '',\n        typeView:\n          item.mode === 'Credit'\n            ? 'G-Voucher (Credit)'\n            : item.mode === 'Debit'\n            ? 'G-Voucher (Debit)'\n            : item.type === 'PAID'\n            ? 'PAID'\n            : item.type === 'REFUND'\n            ? 'REFUND'\n            : '',\n        payment_Code: item.payment_Code,\n        mode:\n          item.mode !== '' ? item.mode : item.type === 'REFUND' ? 'REFUND' : '',\n        transferMode: item.transferMode,\n        transferPercent: item.transferPercent,\n        transferPercentage: item.transferPercentage || 0,\n        actualAmount: item.actualAmount,\n        bank: item.bank,\n        customerName: item.customerName,\n        verifyDate: item.verifyDate,\n        amount: item.amount,\n        date: moment(item.date).format('YYYY-MM-DD'),\n        description: item.description,\n      });\n    });\n  }\n\n  // getAllSupplierAll() {\n  //   const obj = {\n  //     strLoginUserId: localStorage.getItem('userId'),\n  //     fkSupplierId: this.supplierId,\n  //     strName: '',\n  //     cust_Code: '',\n  //     fromDate: '',\n  //     endDate: '',\n  //     intSkipCount: '0',\n  //     intPageLimit: '1',\n  //   };\n  //   this.supplierService.getAllSupplier(obj).subscribe((res) => {\n  //     if (res.success) {\n  //       this.myForm.patchValue({ supplier: res.data[0] });\n  //       this.getSupplier();\n  //     } else {\n  //       this.toastr.error('Error While fetching data');\n  //     }\n  //   });\n  // }\n\n  resetForm() {\n    this.myForm.reset();\n    this.submitted = false;\n  }\n\n  getMetaData() {\n    const obj = {\n      metaType: 'transfermod', // Amentities transfermod\n    };\n\n    this.supplierService.metaData(obj).subscribe((data) => {\n      if (data.success) {\n        this.arrTransferMode = data.data;\n      } else {\n        this.arrTransferMode = [];\n      }\n    });\n  }\n\n  editPayment(i) {\n    this.editIndex = i;\n  }\n\n  updatePayment(i) {\n    this.submitted = true;\n\n    console.log('this.myForm', this.myForm);\n    if (this.myForm.invalid) {\n      return;\n    }\n\n    this.myForm.value.paymentDetails.map((paymentDetails) => {\n      // if (paymentDetails.transferPercent > 0) {\n      //   paymentDetails.amount =\n      //     paymentDetails.amount -\n      //     paymentDetails.amount * (paymentDetails.transferPercent / 100);\n      // }\n\n      return {\n        amount: paymentDetails.amount,\n        actualAmount: paymentDetails.amount,\n        bank: paymentDetails.bank,\n        mode: paymentDetails.mode,\n        date: paymentDetails.date,\n        description: paymentDetails.description,\n        transferMode: paymentDetails.transferMode,\n        transferPercentage: paymentDetails.transferPercentage,\n        type: paymentDetails.type,\n      };\n    });\n\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      fkPaymentId: this.myForm.value.paymentDetails[i].id,\n      payment_Details: [this.myForm.value.paymentDetails[i]],\n    };\n\n    // console.log('obj', obj);\n    this.supplierService.updatePaymentSupplier(obj).subscribe((res) => {\n      if (res.success) {\n        Swal.fire({\n          title: 'Success',\n          text: 'Successfully Updated Supplier Payment',\n          icon: 'success',\n        }).then((value) => {\n          if (value) {\n            this.myForm.reset();\n            this.paymentDetails.removeAt(i);\n\n            this.submitted = false;\n            this.editIndex = '';\n            this.getSupplier();\n            // this.router.navigate(['/supplier-payment']);\n          }\n        });\n      } else {\n        Swal.fire({\n          title: 'Error',\n          text: res.message,\n          icon: 'error',\n        });\n      }\n    });\n  }\n}\n","<!--begin::Col-->\n<div class=\"col-md-12 col-lg-12 md-m-5\">\n  <div class=\"card\">\n    <!-- begin::Header -->\n    <!-- <div class=\"card-header border-0\">\n      <h3 class=\"card-title fw-bold text-dark\">Create Supplier Package</h3>\n    </div> -->\n    <!-- end::Header -->\n    <!-- begin::Body -->\n    <div class=\"card-body\">\n      <h3\n        class=\"fw-bold mb-3 {{\n          type === 'VERIFY' ? 'text-green-500' : 'text-orange-500'\n        }}\"\n      >\n        {{ type === \"VERIFY\" ? \"Verified\" : \"Pending\" }} Payments\n      </h3>\n      <!-- begin::Item -->\n      <form [formGroup]=\"myForm\">\n        <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\n          <div>\n            <label for=\"name\">\n              <span class=\"required\"> Supplier Name </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.supplierCode.value }} -\n              {{ f.supplierName.value }}\n            </div>\n          </div>\n\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> Total Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Total_Amount.value }}\n            </div>\n          </div>\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> Total Paid Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Total_Paid_Amount.value }}\n            </div>\n          </div>\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> Balance Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Total_Amount.value - f.Total_Paid_Amount.value }}\n            </div>\n          </div>\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> Refund Amount Paid </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Refund_Amount.value }}\n            </div>\n          </div>\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> G-Voucher Credit Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Service_Credit_Amount.value }}\n            </div>\n          </div>\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> G-Voucher Debit Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Service_Debit_Amount.value }}\n            </div>\n          </div>\n        </div>\n\n        <!-- <div class=\"col-12 text-right my-3\">\n          <button class=\"btn btn-primary btn-sm\" (click)=\"addItem()\">\n            <i class=\"bi bi-plus\"></i>\n            Add Payment\n          </button>\n        </div> -->\n\n        <div *ngIf=\"paymentDetails.controls.length\" class=\"mt-5\">\n          <div formArrayName=\"paymentDetails\" class=\"divide-y\">\n            <div\n              *ngFor=\"let skill of paymentDetails.controls; let i = index\"\n              [formGroupName]=\"i\"\n              class=\"grid grid-cols-6 max-xl:grid-cols-4 max-lg:grid-cols-4 max-md:grid-cols-2 max-sm:grid-cols-1 gap-3 py-3 mb-5\"\n            >\n              <!-- class=\"flex gap-3 mb-3 justify-between overflow-scroll\" -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Payment Code </span>\n                </label>\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                  {{ paymentDetails.get(i + \".payment_Code\")?.value }}\n                </div>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Payment Type </span>\n                </label>\n                <ng-select\n                  [items]=\"arrPaymentType\"\n                  bindLabel=\"type\"\n                  bindValue=\"sentType\"\n                  dropdownPosition=\"bottom\"\n                  (change)=\"onPaymentChange($event, i)\"\n                  placeholder=\"Choose a Payment Type\"\n                  formControlName=\"type\"\n                  *ngIf=\"editIndex === i\"\n                >\n                </ng-select>\n\n                <div\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\n                  *ngIf=\"editIndex !== i\"\n                >\n                  {{ paymentDetails.get(i + \".typeView\")?.value }}\n                </div>\n                <div\n                  class=\"text-sm text-gray-700 mt-1\"\n                  *ngIf=\"\n                    paymentDetails.get(i + '.typeView')?.value === 'REFUND'\n                  \"\n                >\n                  Refund to\n                  {{ paymentDetails.get(i + \".customerName\")?.value }}\n                </div>\n                <div\n                  *ngIf=\"paymentDetails.get(i + '.mode')?.value\"\n                  class=\"mt-1 text-{{\n                    paymentDetails.get(i + '.mode')?.value === 'Credit'\n                      ? 'green'\n                      : 'red'\n                  }}-600\"\n                >\n                  {{\n                    paymentDetails.get(i + \".mode\")?.value === \"Credit\"\n                      ? \"Pay from Supplier\"\n                      : paymentDetails.get(i + \".mode\")?.value === \"Debit\"\n                      ? \"Pay to Supplier\"\n                      : \"\"\n                  }}\n                </div>\n                <div\n                  *ngIf=\"submitted && paymentDetails.get(i + '.type')?.errors\"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"paymentDetails.get(i + '.type')?.errors?.required\"\n                    >Payment Type Required\n                  </small>\n                </div>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Transfer Mode </span>\n                </label>\n                <ng-select\n                  [items]=\"arrTransferMode\"\n                  bindLabel=\"payment_mode\"\n                  bindValue=\"payment_mode\"\n                  (change)=\"onTransferChange($event, i)\"\n                  dropdownPosition=\"bottom\"\n                  placeholder=\"Choose a Transfer Mode\"\n                  formControlName=\"transferMode\"\n                  *ngIf=\"editIndex === i\"\n                >\n                </ng-select>\n                <div\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\n                  *ngIf=\"editIndex !== i\"\n                >\n                  {{ paymentDetails.get(i + \".transferMode\")?.value }}\n                </div>\n                <!-- <div\n                class=\"text-sm text-gray-700 mt-1\"\n                *ngIf=\"\n                  paymentDetails.get(i + '.transferPercent')?.value > 0\n                \"\n              >\n                <span class=\"font-bold\"\n                  >{{\n                    paymentDetails.get(i + \".transferPercent\")?.value\n                  }}%</span\n                >\n                will be deducted\n              </div> -->\n\n                <div\n                  *ngIf=\"\n                    submitted && paymentDetails.get(i + '.transferMode')?.errors\n                  \"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"\n                      paymentDetails.get(i + '.transferMode')?.errors?.required\n                    \"\n                    >Transfer Mode Required\n                  </small>\n                </div>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Transfer % </span>\n                </label>\n                <ng-container\n                  *ngIf=\"\n                    paymentDetails.get(i + '.transferPercent')?.value > 0;\n                    else elseTemplate\n                  \"\n                >\n                  <input\n                    type=\"number\"\n                    class=\"form-control form-control-solid\"\n                    formControlName=\"transferPercentage\"\n                    placeholder=\"Percentage %\"\n                  />\n                </ng-container>\n                <ng-template #elseTemplate>\n                  <div class=\"form-control form-control-solid\">0</div>\n                </ng-template>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Bank </span>\n                </label>\n                <ng-select\n                  [items]=\"arrBanks\"\n                  bindLabel=\"bankName\"\n                  bindValue=\"bankName\"\n                  dropdownPosition=\"bottom\"\n                  placeholder=\"Choose a Bank\"\n                  formControlName=\"bank\"\n                  *ngIf=\"editIndex === i\"\n                >\n                </ng-select>\n                <div\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\n                  *ngIf=\"editIndex !== i\"\n                >\n                  {{ paymentDetails.get(i + \".bank\")?.value }}\n                </div>\n                <!-- <input\n                type=\"text\"\n                class=\"form-control form-control-solid\"\n                placeholder=\"Bank\"\n                formControlName=\"bank\"\n              /> -->\n\n                <div\n                  *ngIf=\"submitted && paymentDetails.get(i + '.bank')?.errors\"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"paymentDetails.get(i + '.bank')?.errors?.required\"\n                    >Bank Required\n                  </small>\n                </div>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Amount</span>\n                </label>\n                <input\n                  type=\"number\"\n                  class=\"form-control form-control-solid\"\n                  placeholder=\"Amount\"\n                  formControlName=\"amount\"\n                  *ngIf=\"editIndex === i\"\n                />\n                <div\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\n                  *ngIf=\"editIndex !== i\"\n                >\n                  {{ paymentDetails.get(i + \".amount\")?.value }}\n                </div>\n                <div\n                  class=\"text-sm text-gray-700 mt-1\"\n                  *ngIf=\"paymentDetails.get(i + '.transferPercent')?.value > 0\"\n                >\n                  <!-- <span *ngIf=\"editIndex === i\">\n                      <span class=\"font-bold\">\n                        {{\n                          paymentDetails.get(i + \".amount\")?.value *\n                            (paymentDetails.get(i + \".transferPercent\")?.value /\n                              100)\n                        }}\n                      </span>\n                      will be deducted.\n                    </span>\n                    <span *ngIf=\"editIndex !== i\">\n                      Paid amount is\n                      <span class=\"font-bold\">\n                        {{\n                          paymentDetails.get(i + \".actualAmount\")?.value\n                        }}</span\n                      >\n                    </span> -->\n                </div>\n\n                <div\n                  *ngIf=\"submitted && paymentDetails.get(i + '.amount')?.errors\"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"paymentDetails.get(i + '.amount')?.errors?.required\"\n                    >Amount Required\n                  </small>\n                </div>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Date</span>\n                </label>\n                <input\n                  type=\"date\"\n                  class=\"form-control form-control-solid\"\n                  placeholder=\"Date\"\n                  formControlName=\"date\"\n                  *ngIf=\"editIndex === i\"\n                />\n                <div\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\n                  *ngIf=\"editIndex !== i\"\n                >\n                  {{\n                    paymentDetails.get(i + \".date\")?.value | date : \"dd/MM/yyyy\"\n                  }}\n                </div>\n                <div\n                  *ngIf=\"submitted && paymentDetails.get(i + '.date')?.errors\"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"paymentDetails.get(i + '.date')?.errors?.required\"\n                    >Date Required\n                  </small>\n                </div>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\" *ngIf=\"type === 'VERIFY'\">\n                <label for=\"amount\">\n                  <span class=\"\"> Verify Date </span>\n                </label>\n                <div\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\n                  *ngIf=\"editIndex !== i\"\n                >\n                  {{\n                    paymentDetails.get(i + \".verifyDate\")?.value\n                      | date : \"dd/MM/yyyy\"\n                  }}\n                </div>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Description </span>\n                </label>\n                <input\n                  type=\"text\"\n                  class=\"form-control form-control-solid\"\n                  placeholder=\"Description\"\n                  formControlName=\"description\"\n                  *ngIf=\"editIndex === i\"\n                />\n                <div\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\n                  *ngIf=\"editIndex !== i\"\n                >\n                  {{ paymentDetails.get(i + \".description\")?.value }}\n                </div>\n                <div\n                  *ngIf=\"\n                    submitted && paymentDetails.get(i + '.description')?.errors\n                  \"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"\n                      paymentDetails.get(i + '.description')?.errors?.required\n                    \"\n                  >\n                    Description Required\n                  </small>\n                </div>\n              </div>\n              <!--  -->\n              <div class=\"min-w-[160px]\" *ngIf=\"type === 'PENDING'\">\n                <label for=\"amount\">\n                  <span class=\"\"> ACTION </span>\n                </label>\n                <div>\n                  <a\n                    class=\"btn btn-icon bg-light-success btn-active-color-success btn-sm me-1\"\n                    *ngIf=\"editIndex === i\"\n                    (click)=\"updatePayment(i)\"\n                  >\n                    <span\n                      [inlineSVG]=\"\n                        './assets/media/icons/duotune/files/fil025.svg'\n                      \"\n                      class=\"svg-icon svg-icon-3 svg-icon-success\"\n                    ></span>\n                  </a>\n                  <a\n                    class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm me-1\"\n                    *ngIf=\"editIndex === i\"\n                    (click)=\"editIndex = ''\"\n                  >\n                    <span\n                      [inlineSVG]=\"\n                        './assets/media/icons/duotune/files/fil007.svg'\n                      \"\n                      class=\"svg-icon svg-icon-3 svg-icon-danger\"\n                    ></span>\n                  </a>\n                  <a\n                    class=\"btn btn-icon bg-light-warning btn-active-color-warning btn-sm me-1\"\n                    *ngIf=\"editIndex !== i\"\n                    (click)=\"editPayment(i)\"\n                  >\n                    <span\n                      [inlineSVG]=\"\n                        './assets/media/icons/duotune/art/art005.svg'\n                      \"\n                      class=\"svg-icon svg-icon-3 svg-icon-warning\"\n                    ></span>\n                  </a>\n                  <a\n                    class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm\"\n                    *ngIf=\"editIndex !== i\"\n                    (click)=\"removeItem(i, skill.value)\"\n                  >\n                    <span\n                      [inlineSVG]=\"\n                        './assets/media/icons/duotune/general/gen027.svg'\n                      \"\n                      class=\"svg-icon svg-icon-3 svg-icon-danger\"\n                    ></span>\n                  </a>\n                </div>\n              </div>\n              <!--  -->\n            </div>\n          </div>\n        </div>\n\n        <!-- <div\n          class=\"table-responsive mb-3 overflow-visible max-h-[50vh]\"\n          [ngClass]=\"{ 'overflow-scroll': paymentDetails.controls.length >= 5 }\"\n          *ngIf=\"paymentDetails.controls.length\"\n        >\n          <table\n            class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\"\n          >\n            <thead>\n              <tr class=\"fw-bold text-muted\">\n                <th class=\"min-w-[200px]\">Payment Code</th>\n                <th class=\"min-w-[200px]\">Payment Type</th>\n                <th class=\"min-w-[200px]\">Transfer Mode</th>\n                <th class=\"min-w-[200px]\">Transfer %</th>\n                <th class=\"min-w-[200px]\">Bank</th>\n                <th class=\"min-w-[120px]\">Amount</th>\n                <th class=\"min-w-[120px]\">Date</th>\n                <th class=\"min-w-[120px]\" *ngIf=\"type === 'VERIFY'\">\n                  Verify Date\n                </th>\n                <th class=\"min-w-[120px]\">Description</th>\n                <th class=\"min-w-[120px]\" *ngIf=\"type === 'PENDING'\">ACTION</th>\n              </tr>\n            </thead>\n            <tbody formArrayName=\"paymentDetails\">\n              <tr\n                *ngFor=\"let skill of paymentDetails.controls; let i = index\"\n                [formGroupName]=\"i\"\n              >\n                <td>\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                    {{ paymentDetails.get(i + \".payment_Code\")?.value }}\n                  </div>\n                </td>\n                <td>\n                  <ng-select\n                    [items]=\"arrPaymentType\"\n                    bindLabel=\"type\"\n                    bindValue=\"sentType\"\n                    dropdownPosition=\"bottom\"\n                    (change)=\"onPaymentChange($event, i)\"\n                    placeholder=\"Choose a Payment Type\"\n                    formControlName=\"type\"\n                    *ngIf=\"editIndex === i\"\n                  >\n                  </ng-select>\n\n                  <div\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\n                    *ngIf=\"editIndex !== i\"\n                  >\n                    {{ paymentDetails.get(i + \".typeView\")?.value }}\n                  </div>\n                  <div\n                    class=\"text-sm text-gray-700 mt-1\"\n                    *ngIf=\"\n                      paymentDetails.get(i + '.typeView')?.value === 'REFUND'\n                    \"\n                  >\n                    Refund to\n                    {{ paymentDetails.get(i + \".customerName\")?.value }}\n                  </div>\n                  <div\n                    *ngIf=\"paymentDetails.get(i + '.mode')?.value\"\n                    class=\"mt-1 text-{{\n                      paymentDetails.get(i + '.mode')?.value === 'Credit'\n                        ? 'green'\n                        : 'red'\n                    }}-600\"\n                  >\n                    {{\n                      paymentDetails.get(i + \".mode\")?.value === \"Credit\"\n                        ? \"Pay from Supplier\"\n                        : paymentDetails.get(i + \".mode\")?.value === \"Debit\"\n                        ? \"Pay to Supplier\"\n                        : \"\"\n                    }}\n                  </div>\n                  <div\n                    *ngIf=\"submitted && paymentDetails.get(i + '.type')?.errors\"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"paymentDetails.get(i + '.type')?.errors?.required\"\n                      >Payment Type Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <ng-select\n                    [items]=\"arrTransferMode\"\n                    bindLabel=\"payment_mode\"\n                    bindValue=\"payment_mode\"\n                    (change)=\"onTransferChange($event, i)\"\n                    dropdownPosition=\"bottom\"\n                    placeholder=\"Choose a Transfer Mode\"\n                    formControlName=\"transferMode\"\n                    *ngIf=\"editIndex === i\"\n                  >\n                  </ng-select>\n                  <div\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\n                    *ngIf=\"editIndex !== i\"\n                  >\n                    {{ paymentDetails.get(i + \".transferMode\")?.value }}\n                  </div>\n\n                  <div\n                    *ngIf=\"\n                      submitted &&\n                      paymentDetails.get(i + '.transferMode')?.errors\n                    \"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"\n                        paymentDetails.get(i + '.transferMode')?.errors\n                          ?.required\n                      \"\n                      >Transfer Mode Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <ng-container\n                    *ngIf=\"\n                      paymentDetails.get(i + '.transferPercent')?.value > 0;\n                      else elseTemplate\n                    \"\n                  >\n                    <input\n                      type=\"number\"\n                      class=\"form-control form-control-solid\"\n                      formControlName=\"transferPercentage\"\n                      placeholder=\"Percentage %\"\n                    />\n                  </ng-container>\n                  <ng-template #elseTemplate>\n                    <div class=\"form-control form-control-solid\">0</div>\n                  </ng-template>\n                </td>\n                <td>\n                  <ng-select\n                    [items]=\"arrBanks\"\n                    bindLabel=\"bankName\"\n                    bindValue=\"bankName\"\n                    dropdownPosition=\"bottom\"\n                    placeholder=\"Choose a Bank\"\n                    formControlName=\"bank\"\n                    *ngIf=\"editIndex === i\"\n                  >\n                  </ng-select>\n                  <div\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\n                    *ngIf=\"editIndex !== i\"\n                  >\n                    {{ paymentDetails.get(i + \".bank\")?.value }}\n                  </div>\n\n                  <div\n                    *ngIf=\"submitted && paymentDetails.get(i + '.bank')?.errors\"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"paymentDetails.get(i + '.bank')?.errors?.required\"\n                      >Bank Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <input\n                    type=\"number\"\n                    class=\"form-control form-control-solid\"\n                    placeholder=\"Amount\"\n                    formControlName=\"amount\"\n                    *ngIf=\"editIndex === i\"\n                  />\n                  <div\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\n                    *ngIf=\"editIndex !== i\"\n                  >\n                    {{ paymentDetails.get(i + \".amount\")?.value }}\n                  </div>\n                  <div\n                    class=\"text-sm text-gray-700 mt-1\"\n                    *ngIf=\"\n                      paymentDetails.get(i + '.transferPercent')?.value > 0\n                    \"\n                  ></div>\n\n                  <div\n                    *ngIf=\"\n                      submitted && paymentDetails.get(i + '.amount')?.errors\n                    \"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"\n                        paymentDetails.get(i + '.amount')?.errors?.required\n                      \"\n                      >Amount Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <input\n                    type=\"date\"\n                    class=\"form-control form-control-solid\"\n                    placeholder=\"Date\"\n                    formControlName=\"date\"\n                    *ngIf=\"editIndex === i\"\n                  />\n                  <div\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\n                    *ngIf=\"editIndex !== i\"\n                  >\n                    {{\n                      paymentDetails.get(i + \".date\")?.value\n                        | date : \"dd/MM/yyyy\"\n                    }}\n                  </div>\n                  <div\n                    *ngIf=\"submitted && paymentDetails.get(i + '.date')?.errors\"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"paymentDetails.get(i + '.date')?.errors?.required\"\n                      >Date Required\n                    </small>\n                  </div>\n                </td>\n                <td *ngIf=\"type === 'VERIFY'\">\n                  <div\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\n                    *ngIf=\"editIndex !== i\"\n                  >\n                    {{\n                      paymentDetails.get(i + \".verifyDate\")?.value\n                        | date : \"dd/MM/yyyy\"\n                    }}\n                  </div>\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    class=\"form-control form-control-solid\"\n                    placeholder=\"Description\"\n                    formControlName=\"description\"\n                    *ngIf=\"editIndex === i\"\n                  />\n                  <div\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\n                    *ngIf=\"editIndex !== i\"\n                  >\n                    {{ paymentDetails.get(i + \".description\")?.value }}\n                  </div>\n                  <div\n                    *ngIf=\"\n                      submitted &&\n                      paymentDetails.get(i + '.description')?.errors\n                    \"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"\n                        paymentDetails.get(i + '.description')?.errors?.required\n                      \"\n                    >\n                      Description Required\n                    </small>\n                  </div>\n                </td>\n\n                <td *ngIf=\"type === 'PENDING'\">\n                  <a\n                    class=\"btn btn-icon bg-light-success btn-active-color-success btn-sm me-1\"\n                    *ngIf=\"editIndex === i\"\n                    (click)=\"updatePayment(i)\"\n                  >\n                    <span\n                      [inlineSVG]=\"\n                        './assets/media/icons/duotune/files/fil025.svg'\n                      \"\n                      class=\"svg-icon svg-icon-3 svg-icon-success\"\n                    ></span>\n                  </a>\n                  <a\n                    class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm me-1\"\n                    *ngIf=\"editIndex === i\"\n                    (click)=\"editIndex = ''\"\n                  >\n                    <span\n                      [inlineSVG]=\"\n                        './assets/media/icons/duotune/files/fil007.svg'\n                      \"\n                      class=\"svg-icon svg-icon-3 svg-icon-danger\"\n                    ></span>\n                  </a>\n                  <a\n                    class=\"btn btn-icon bg-light-warning btn-active-color-warning btn-sm me-1\"\n                    *ngIf=\"editIndex !== i\"\n                    (click)=\"editPayment(i)\"\n                  >\n                    <span\n                      [inlineSVG]=\"\n                        './assets/media/icons/duotune/art/art005.svg'\n                      \"\n                      class=\"svg-icon svg-icon-3 svg-icon-warning\"\n                    ></span>\n                  </a>\n                  <a\n                    class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm\"\n                    *ngIf=\"editIndex !== i\"\n                    (click)=\"removeItem(i, skill.value)\"\n                  >\n                    <span\n                      [inlineSVG]=\"\n                        './assets/media/icons/duotune/general/gen027.svg'\n                      \"\n                      class=\"svg-icon svg-icon-3 svg-icon-danger\"\n                    ></span>\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div> -->\n\n        <!-- <div\n          class=\"grid grid-cols-2 md:grid-cols-6 gap-2 mt-4\"\n          *ngIf=\"paymentDetails.controls.length && type === 'PENDING'\"\n        >\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <button class=\"btn btn-light-primary\" (click)=\"resetForm()\">\n            Clear\n          </button>\n          <button class=\"btn btn-primary\" (click)=\"onSubmit()\">Update</button>\n        </div> -->\n      </form>\n    </div>\n    <!-- end::Body -->\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}