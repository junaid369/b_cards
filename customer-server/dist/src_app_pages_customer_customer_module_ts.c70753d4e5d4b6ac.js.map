{"version":3,"file":"src_app_pages_customer_customer_module_ts.c70753d4e5d4b6ac.js","mappings":"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","sources":["./src/app/pages/customer/create-customer/create-customer.component.ts","./src/app/pages/customer/create-customer/create-customer.component.html","./src/app/pages/customer/customer.module.ts","./src/app/pages/customer/manage-customer/manage-customer.component.ts","./src/app/pages/customer/manage-customer/manage-customer.component.html","./src/app/pages/customer/update-customer/update-customer.component.ts","./src/app/pages/customer/update-customer/update-customer.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CustomerService } from 'src/app/core/services/customer/customer.service';\nimport { SupplierService } from 'src/app/core/services/supplier/supplier.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-create-customer',\n  templateUrl: './create-customer.component.html',\n  styleUrls: ['./create-customer.component.scss'],\n})\nexport class CreateCustomerComponent {\n  private dataUrl = 'assets/data/country.json';\n\n  arrCountries: any[] = [];\n  arrAmenities: any[] = [];\n\n  myForm: FormGroup;\n  submitted: boolean = false;\n\n  isLoading = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private supplierService: SupplierService,\n    private customerService: CustomerService,\n    private readonly http: HttpClient,\n    private router: Router\n  ) {\n    this.myForm = this.formBuilder.group({\n      strUserName: ['', Validators.required],\n      strEmail: [''],\n      supplier_Name: ['', Validators.required],\n      phone: ['', Validators.required],\n      country: [null, Validators.required],\n      strPackage: ['', Validators.required],\n      cost_Price: ['0', Validators.required],\n      vat: ['', Validators.required],\n      per_Person: ['', Validators.required],\n      no_Of_Persons: ['', Validators.required],\n      travel_Date: ['', Validators.required],\n      strDescription: [''],\n      cost_Details: this.formBuilder.array([]),\n    });\n    this.getCountryData();\n    this.getMetaData();\n  }\n\n  get f() {\n    return this.myForm.controls;\n  }\n\n  sumValue() {\n    let sum = 0;\n    this.myForm.value.cost_Details.forEach((e) => {\n      sum += e.amount;\n    });\n\n    this.myForm.patchValue({\n      cost_Price: sum,\n    });\n  }\n\n  get cost_Details(): FormArray {\n    return this.myForm.get('cost_Details') as FormArray;\n  }\n\n  newCost_Details(): FormGroup {\n    return this.formBuilder.group({\n      name: [null, Validators.required],\n      amount: ['', Validators.required],\n    });\n  }\n\n  addItem() {\n    this.cost_Details.push(this.newCost_Details());\n  }\n\n  getMetaData() {\n    const obj = {\n      metaType: 'Amentities', //Amentities transfermod\n    };\n\n    this.supplierService.metaData(obj).subscribe((data) => {\n      if (data.success) {\n        this.arrAmenities = data.data;\n      } else {\n        this.arrAmenities = [];\n      }\n    });\n  }\n\n  removeItem(i: number) {\n    Swal.fire({\n      title: 'Do you want to remove?',\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n      reverseButtons: true,\n      confirmButtonColor: '#dc3741',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.cost_Details.removeAt(i);\n        this.sumValue();\n      }\n    });\n  }\n\n  getCountryData() {\n    this.http.get(this.dataUrl).subscribe((data: any) => {\n      this.arrCountries = data;\n    });\n  }\n  resetForm() {\n    this.myForm.reset();\n    this.submitted = false;\n  }\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.myForm.invalid) {\n      return;\n    }\n\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      strName: this.myForm.value.strUserName,\n      strEmail: this.myForm.value.strEmail,\n      phoneNo: this.myForm.value.phone,\n      strPackage: this.myForm.value.strPackage,\n      supplier_Name: this.myForm.value.supplier_Name,\n      cost_Price: this.myForm.value.cost_Price,\n      selling_Price:\n        this.myForm.value.per_Person * this.myForm.value.no_Of_Persons,\n      profit_Price:\n        this.myForm.value.per_Person * this.myForm.value.no_Of_Persons -\n        this.myForm.value.cost_Price, // selling - cost\n      vat: this.myForm.value.vat,\n      per_Person: this.myForm.value.per_Person,\n      no_Of_Persons: this.myForm.value.no_Of_Persons,\n      country: this.myForm.value.country,\n      Total_Amount:\n        this.myForm.value.per_Person * this.myForm.value.no_Of_Persons, // per_Person * no_Of_Persons * vat / 100 + per_Person * no_Of_Persons\n      travel_Date: this.myForm.value.travel_Date,\n      strDescription: this.myForm.value.strDescription,\n      cost_Details: this.myForm.value.cost_Details,\n    };\n\n    this.isLoading = true;\n    this.customerService.addCustomer(obj).subscribe((res) => {\n      this.isLoading = false;\n      if (res.success) {\n        Swal.fire({\n          title: 'Success',\n          text: 'Successfully Created Customer',\n          icon: 'success',\n        }).then((value) => {\n          if (value) {\n            this.myForm.reset();\n            this.submitted = false;\n            this.router.navigate(['/customer']);\n          }\n        });\n      } else {\n        Swal.fire({\n          title: 'Error',\n          text: res.message,\n          icon: 'error',\n        });\n      }\n    });\n  }\n}\n","<!--begin::Col-->\n<div class=\"col-md-12 col-lg-12 md-m-5\">\n  <div class=\"card\">\n    <!-- begin::Header -->\n    <div class=\"card-header border-0\">\n      <h3 class=\"card-title fw-bold text-dark\">Create Customer Package</h3>\n    </div>\n    <!-- end::Header -->\n    <!-- begin::Body -->\n    <div class=\"card-body pt-2\">\n      <!-- begin::Item -->\n      <form [formGroup]=\"myForm\">\n        <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\n          <div>\n            <label for=\"name\">\n              <span class=\"required\"> Customer Name </span>\n            </label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Customer Name\"\n              id=\"name\"\n              formControlName=\"strUserName\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.strUserName.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.strUserName.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.strUserName.errors.required\">\n                Customer Name required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"email\">\n              <span class=\"\"> Email </span>\n            </label>\n            <input\n              type=\"email\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Email\"\n              id=\"email\"\n              formControlName=\"strEmail\"\n            />\n            <!-- [ngClass]=\"{\n                'is-invalid': submitted && f.strEmail.errors\n              }\" -->\n            <!-- <div *ngIf=\"submitted && f.strEmail.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.strEmail.errors.required\">Email required</div>\n              <div *ngIf=\"f.strEmail.errors.email\">\n                Email format is wrong. Please type in proper format\n              </div>\n            </div> -->\n          </div>\n\n          <div>\n            <label for=\"phone\">\n              <span class=\"required\"> Phone Number </span>\n            </label>\n            <input\n              type=\"tel\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Phone Number\"\n              id=\"phone\"\n              formControlName=\"phone\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.phone.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.phone.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.phone.errors.required\">Phone Number required</div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"country\">\n              <span class=\"required\"> Country </span>\n            </label>\n            <ng-select\n              [items]=\"arrCountries\"\n              bindLabel=\"name\"\n              bindValue=\"name\"\n              formControlName=\"country\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.country.errors\n              }\"\n              placeholder=\"Choose a country\"\n            >\n            </ng-select>\n            <div *ngIf=\"submitted && f.country.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.country.errors.required\">Country required</div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"package\">\n              <span class=\"required\"> Package Name </span>\n            </label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Package Name\"\n              id=\"package\"\n              formControlName=\"strPackage\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.strPackage.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.strPackage.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.strPackage.errors.required\">\n                Package Name required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"supplier\">\n              <span class=\"required\"> Supplier Name </span>\n            </label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Supplier Name\"\n              id=\"supplier\"\n              formControlName=\"supplier_Name\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.supplier_Name.errors\n              }\"\n            />\n            <div\n              *ngIf=\"submitted && f.supplier_Name.errors\"\n              class=\"text-red-500\"\n            >\n              <div *ngIf=\"f.supplier_Name.errors.required\">\n                Supplier required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"per_Person\">\n              <span class=\"required\"> Amount / Person </span>\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Amount / Person\"\n              id=\"per_Person\"\n              formControlName=\"per_Person\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.per_Person.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.per_Person.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.per_Person.errors.required\">\n                Amount / Person required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"noOfPerson\">\n              <span class=\"required\"> No of Person </span>\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"No of Person\"\n              id=\"noOfPerson\"\n              formControlName=\"no_Of_Persons\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.no_Of_Persons.errors\n              }\"\n            />\n            <div\n              *ngIf=\"submitted && f.no_Of_Persons.errors\"\n              class=\"text-red-500\"\n            >\n              <div *ngIf=\"f.no_Of_Persons.errors.required\">\n                No of Person required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"vat\">\n              <span class=\"required\"> VAT </span>\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"VAT\"\n              id=\"vat\"\n              formControlName=\"vat\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.vat.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.vat.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.vat.errors.required\">VAT required</div>\n            </div>\n          </div>\n\n          <div>\n            <span> Selling Price (Total Amount) </span>\n            <div class=\"form-control form-control-solid\">\n              {{ f.per_Person.value * f.no_Of_Persons.value }}\n            </div>\n          </div>\n\n          <!-- <div>\n            <label for=\"costPrice\">\n              <span class=\"required\"> Cost Price </span>\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Cost Price\"\n              id=\"costPrice\"\n              formControlName=\"cost_Price\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.cost_Price.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.cost_Price.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.cost_Price.errors.required\">\n                Cost Price required\n              </div>\n            </div>\n          </div> -->\n\n          <!-- <div>\n            <label for=\"sellingPrice\">\n              <span class=\"required\"> Selling Price </span>\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Selling Price\"\n              id=\"sellingPrice\"\n              formControlName=\"selling_Price\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.selling_Price.errors\n              }\"\n            />\n            <div\n              *ngIf=\"submitted && f.selling_Price.errors\"\n              class=\"text-red-500\"\n            >\n              <div *ngIf=\"f.selling_Price.errors.required\">\n                Selling Price required\n              </div>\n            </div>\n          </div> -->\n\n          <div>\n            <span> Profit Price </span>\n            <div class=\"form-control form-control-solid\">\n              {{\n                f.per_Person.value * f.no_Of_Persons.value - f.cost_Price.value\n              }}\n            </div>\n          </div>\n\n          <div>\n            <label for=\"travelDate\">\n              <span class=\"required\"> Travel Date </span>\n            </label>\n            <input\n              type=\"date\"\n              class=\"form-control form-control-solid\"\n              id=\"travelDate\"\n              formControlName=\"travel_Date\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.travel_Date.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.travel_Date.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.travel_Date.errors.required\">\n                Travel Date required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"desc\">\n              <span> Description </span>\n            </label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Description\"\n              id=\"desc\"\n              formControlName=\"strDescription\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.strDescription.errors\n              }\"\n            />\n          </div>\n\n          <div>\n            <label for=\"costPrice\">\n              <span class=\"required\"> Cost Price </span>\n            </label>\n\n            <div class=\"form-control form-control-solid\" (click)=\"addItem()\">\n              {{ f.cost_Price.value }}\n            </div>\n\n            <!-- <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Cost Price\"\n              id=\"costPrice\"\n              formControlName=\"cost_Price\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.cost_Price.errors\n              }\"\n            /> -->\n            <div *ngIf=\"submitted && f.cost_Price.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.cost_Price.errors.required\">\n                Cost Price required\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-12 text-right my-3\">\n          <button class=\"btn btn-primary btn-sm\" (click)=\"addItem()\">\n            <i class=\"bi bi-plus\"></i>\n            Add Expenses\n          </button>\n        </div>\n        <div\n          class=\"table-responsive mb-3 overflow-visible max-h-[50vh]\"\n          [ngClass]=\"{ 'overflow-scroll': cost_Details.controls.length >= 5 }\"\n          *ngIf=\"cost_Details.controls.length\"\n        >\n          <!-- begin::Table -->\n          <table\n            class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\"\n          >\n            <!-- begin::Table head -->\n            <thead>\n              <tr class=\"fw-bold text-muted\">\n                <th class=\"min-w-[200px]\">Amenity</th>\n                <th class=\"min-w-[200px]\">Amount</th>\n                <th class=\"min-w-[120px]\">ACTION</th>\n              </tr>\n            </thead>\n            <!-- end::Table head -->\n            <!-- begin::Table body -->\n            <tbody formArrayName=\"cost_Details\">\n              <tr\n                *ngFor=\"let skill of cost_Details.controls; let i = index\"\n                [formGroupName]=\"i\"\n              >\n                <td>\n                  <ng-select\n                    [items]=\"arrAmenities\"\n                    bindLabel=\"type\"\n                    bindValue=\"type\"\n                    dropdownPosition=\"bottom\"\n                    placeholder=\"Choose an Amenity\"\n                    formControlName=\"name\"\n                  >\n                  </ng-select>\n\n                  <div\n                    *ngIf=\"submitted && cost_Details.get(i + '.name')?.errors\"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"cost_Details.get(i + '.name')?.errors?.required\"\n                      >Amenity Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <input\n                    type=\"number\"\n                    class=\"form-control form-control-solid\"\n                    placeholder=\"Amount\"\n                    (keyup)=\"sumValue()\"\n                    formControlName=\"amount\"\n                  />\n\n                  <div\n                    *ngIf=\"submitted && cost_Details.get(i + '.amount')?.errors\"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"cost_Details.get(i + '.amount')?.errors?.required\"\n                      >Amount Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <a\n                    class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm\"\n                    (click)=\"removeItem(i)\"\n                  >\n                    <span\n                      [inlineSVG]=\"\n                        './assets/media/icons/duotune/general/gen027.svg'\n                      \"\n                      class=\"svg-icon svg-icon-3 svg-icon-danger\"\n                    ></span>\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n            <!-- end::Table body -->\n          </table>\n          <!-- end::Table -->\n        </div>\n      </form>\n\n      <div\n        class=\"grid grid-cols-2 md:grid-cols-6 gap-2 mt-4\"\n        *ngIf=\"cost_Details.controls.length\"\n      >\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <button class=\"btn btn-light-primary\" (click)=\"resetForm()\">\n          Clear\n        </button>\n        <button\n          class=\"btn btn-primary\"\n          [disabled]=\"isLoading\"\n          (click)=\"onSubmit()\"\n        >\n          Create\n        </button>\n      </div>\n    </div>\n    <!-- end::Body -->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { InlineSVGModule } from 'ng-inline-svg-2';\nimport { WidgetsModule } from 'src/app/theme/partials';\nimport { CreateCustomerComponent } from './create-customer/create-customer.component';\nimport { ManageCustomerComponent } from './manage-customer/manage-customer.component';\nimport { UpdateCustomerComponent } from './update-customer/update-customer.component';\n\n@NgModule({\n  declarations: [\n    ManageCustomerComponent,\n    CreateCustomerComponent,\n    UpdateCustomerComponent,\n  ],\n  imports: [\n    CommonModule,\n    NgbTooltipModule,\n    FormsModule,\n    NgSelectModule,\n    InlineSVGModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ManageCustomerComponent,\n      },\n      {\n        path: 'create',\n        component: CreateCustomerComponent,\n      },\n      {\n        path: 'update/:id',\n        component: UpdateCustomerComponent,\n      },\n    ]),\n    WidgetsModule,\n  ],\n})\nexport class CustomerModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport * as moment from 'moment';\nimport { ExportToExcelService } from 'src/app/core/services/common/export-to-excel.service';\nimport { CustomerService } from 'src/app/core/services/customer/customer.service';\nimport { PagerService } from 'src/app/core/services/pagination/pager.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-manage-customer',\n  templateUrl: './manage-customer.component.html',\n  styleUrls: ['./manage-customer.component.scss'],\n})\nexport class ManageCustomerComponent implements OnInit {\n  arrCustomer: any = [];\n  arrAllCustomers: any = [];\n  // pagination\n  pager: any = {};\n  intTotalCount = 0;\n  intPageLimit = 50;\n  intSkipCount = 0;\n  fetchLoading = false;\n\n  myForm: FormGroup;\n\n  constructor(\n    private customerService: CustomerService,\n    private formBuilder: FormBuilder,\n    private exportToExcelService: ExportToExcelService,\n    private pageServiceObj: PagerService\n  ) {\n    this.myForm = this.formBuilder.group({\n      customer: [null],\n      fromDate: [''],\n      toDate: [''],\n    });\n  }\n\n  ngOnInit() {\n    this.getAllCustomer();\n    this.getAllCustomerAll();\n  }\n\n  setPage(page) {\n    if (page < 1 || page > this.pager.totalPages) {\n      return;\n    }\n    this.pager = this.pageServiceObj.getPager(\n      this.intTotalCount,\n      page,\n      this.intPageLimit\n    );\n    this.getAllCustomer();\n  }\n\n  getAllCustomerAll() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      fkCustomerId: '',\n      strName: '',\n      cust_Code: '',\n      fromDate: '',\n      endDate: '',\n      intSkipCount: '0',\n      intPageLimit: '1000000',\n    };\n    this.customerService.getAllCustomer(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        this.arrAllCustomers = res.data.map((d) => {\n          return {\n            ...d,\n            displayName: d.cust_Code + ' - ' + d.strName,\n          };\n        });\n      } else {\n        this.arrAllCustomers = [];\n      }\n    });\n  }\n\n  getFromCount() {\n    return this.intPageLimit * (this.pager.currentPage - 1) + 1;\n  }\n\n  getToCount() {\n    return (\n      this.intPageLimit * (this.pager.currentPage - 1) + this.arrCustomer.length\n    );\n  }\n  getAllCustomer() {\n    let skipCount = this.intSkipCount;\n    if (this.pager.intSkipCount) {\n      skipCount = this.pager.intSkipCount;\n    }\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: skipCount,\n      intPageLimit: this.intPageLimit,\n      fkCustomerId: '',\n      cust_Code: this.myForm.value.customer,\n      fromDate: this.myForm.value.fromDate,\n      endDate: this.myForm.value.toDate,\n    };\n\n    this.fetchLoading = true;\n    this.customerService.getAllCustomer(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        this.arrCustomer = res.data;\n\n        this.intTotalCount = res.count;\n\n        this.pager = this.pageServiceObj.getPager(\n          this.intTotalCount,\n          this.pager.currentPage,\n          this.intPageLimit\n        );\n      } else {\n        this.arrCustomer = [];\n        // alert(res.message);\n      }\n    });\n  }\n\n  downloadExcel() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: 0,\n      intPageLimit: 1000000,\n      fkCustomerId: '',\n      cust_Code: this.myForm.value.customer,\n      fromDate: this.myForm.value.fromDate,\n      endDate: this.myForm.value.toDate,\n    };\n\n    this.fetchLoading = true;\n    this.customerService.getAllCustomer(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        let jsonData: any = [];\n\n        res.data.forEach((e) => {\n          const cost_Details = e.cost_Details\n            .map((expense) => `${expense.name}: ${expense.amount}`)\n            .join(', ');\n\n          let obj: any = {\n            'Customer Code': e.cust_Code,\n            'Customer Name': e.strName,\n            'Supplier Name': e.supplier_Name,\n            Email: e.strEmail,\n            Phone: e.phone,\n            Country: e.country,\n            'Amount per Person': e.per_Person,\n            'Number of Person': e.no_Of_Persons,\n            VAT: e.vat,\n            'Total Amount': e.Total_Amount,\n            'Paid Amount': e.Total_Paid_Amount,\n            'Balance Amount': e.Total_Amount - e.Total_Paid_Amount,\n            'Cost Price': e.cost_Price,\n            'Refund Amount': e.Refund_Amount,\n            'G-Voucher Credit Amount': e.Service_Credit_Amount,\n            'G-Voucher Debit Amount': e.Service_Debit_Amount,\n            'Profit Price': e.profit_Price,\n            Package: e.strPackage,\n            'Travel Date': moment(e.travel_Date).format('DD-MM-YYYY'),\n            Description: e.strDescription,\n            'Cost Details': cost_Details,\n            'Created Admin': e.createdAdminName,\n            'Created On': moment(e.createdAt).format('DD-MM-YYYY'),\n            'Updated Admin': e.updatedAdminName,\n            'Updated On': moment(e.updatedAt).format('DD-MM-YYYY'),\n          };\n          jsonData.push(obj);\n        });\n\n        this.exportToExcelService.exportAsExcelFile(jsonData, 'Customers ');\n      }\n    });\n  }\n\n  deleteCustomer(id, fkSupplierId) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#d33',\n      reverseButtons: true,\n      confirmButtonText: 'Yes, delete it!',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const obj = {\n          strLoginUserId: localStorage.getItem('userId'),\n          fkCustomerId: id,\n          fkSupplierId: fkSupplierId,\n        };\n\n        // console.log('obj', obj);\n        this.customerService.deleteCustomer(obj).subscribe((res) => {\n          if (res.success) {\n            Swal.fire({\n              title: 'Deleted!',\n              text: 'Your file has been deleted.',\n              icon: 'success',\n            });\n            this.getAllCustomer();\n          } else {\n            // alert(res.message);\n          }\n        });\n      }\n    });\n  }\n}\n","<div class=\"text-right mb-3\">\n  <button class=\"btn btn-primary btn-sm\" routerLink=\"/customer/create\">\n    Create Customer\n  </button>\n</div>\n\n<div class=\"card mb-3\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"myForm\">\n      <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\n        <div>\n          <label for=\"Customer\">\n            <span class=\"\"> Customer </span>\n          </label>\n          <ng-select\n            [items]=\"arrAllCustomers\"\n            bindLabel=\"displayName\"\n            bindValue=\"cust_Code\"\n            formControlName=\"customer\"\n            placeholder=\"Start Typing...\"\n          >\n          </ng-select>\n        </div>\n        <div>\n          <label for=\"fromDate\">\n            <span class=\"\"> From Date </span>\n          </label>\n          <input\n            type=\"date\"\n            id=\"fromDate\"\n            formControlName=\"fromDate\"\n            class=\"form-control form-control-solid\"\n          />\n        </div>\n        <div>\n          <label for=\"toDate\">\n            <span class=\"\"> To Date </span>\n          </label>\n          <input\n            type=\"date\"\n            id=\"toDate\"\n            formControlName=\"toDate\"\n            class=\"form-control form-control-solid\"\n          />\n        </div>\n      </div>\n    </form>\n    <div class=\"text-right\">\n      <button class=\"btn btn-primary btn-sm\" (click)=\"getAllCustomer()\">\n        <i class=\"bi bi-search\"></i>\n        Search\n      </button>\n    </div>\n  </div>\n</div>\n<div class=\"text-right mb-3\">\n  <button class=\"btn btn-secondary btn-sm\" (click)=\"downloadExcel()\">\n    <i class=\"bi bi-cloud-download\"></i>\n    Download\n  </button>\n</div>\n\n<!--begin::Row-->\n<div class=\"row g-5 g-xl-10\">\n  <div class=\"col-md-12 col-lg-12 md-m-5\">\n    <div class=\"card\">\n      <!-- begin::Body -->\n      <div class=\"card-body\">\n        <!-- begin::Table container -->\n\n        <div\n          class=\"table-responsive\"\n          *ngIf=\"arrCustomer.length > 0; else noDataTemplate\"\n        >\n          <!-- begin::Table -->\n          <table\n            class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full text-center\"\n          >\n            <!-- begin::Table head -->\n            <thead>\n              <tr class=\"fw-bold text-muted\">\n                <th class=\"min-w-130px\">Customer ID</th>\n                <th class=\"min-w-130px\">Created On</th>\n                <th class=\"min-w-130px text-left\">Customer Name</th>\n                <th class=\"min-w-130px\">Supplier</th>\n                <th class=\"min-w-130px\">Package</th>\n                <th class=\"min-w-130px\">Cost Price</th>\n                <th class=\"min-w-130px\">Profit Price</th>\n                <th class=\"min-w-130px\">Package Amount</th>\n                <th class=\"min-w-130px\">Paid Amount</th>\n                <th class=\"min-w-130px\">Balance Amount</th>\n                <th class=\"min-w-130px\">Travel Date</th>\n                <th class=\"min-w-130px\">Description</th>\n                <th class=\"min-w-130px\">Action</th>\n              </tr>\n            </thead>\n            <!-- end::Table head -->\n            <!-- begin::Table body -->\n            <tbody>\n              <tr *ngFor=\"let customer of arrCustomer\">\n                <td>\n                  {{ customer.cust_Code }}\n                </td>\n                <td>\n                  {{ customer.createdAt | date : \"mediumDate\" }}\n                </td>\n                <td class=\"text-left\">\n                  <p class=\"m-0 text-base font-bold\">{{ customer.strName }}</p>\n                  <p class=\"m-0\">{{ customer.strEmail }}</p>\n                  <p class=\"m-0\">{{ customer.phone }}</p>\n                  <p class=\"m-0\">{{ customer.country }}</p>\n                </td>\n\n                <td>\n                  {{ customer.supplier_Name }}\n                </td>\n                <td>\n                  {{ customer.strPackage }}\n                </td>\n                <td>\n                  {{ customer.cost_Price }}\n                </td>\n                <td>\n                  {{ customer.profit_Price }}\n                </td>\n                <td>\n                  <p class=\"m-0 font-bold\">{{ customer.Total_Amount }}</p>\n                  <p class=\"m-0\">\n                    ({{ customer.per_Person }}*{{ customer.no_Of_Persons }})\n                  </p>\n                </td>\n                <td>\n                  {{ customer.Total_Paid_Amount }}\n                </td>\n                <td>\n                  {{ customer.Total_Amount - customer.Total_Paid_Amount }}\n                </td>\n                <td>\n                  {{ customer.travel_Date | date : \"mediumDate\" }}\n                </td>\n                <td>\n                  {{ customer.strDescription }}\n                </td>\n                <td>\n                  <div class=\"d-flex justify-content-center flex-shrink-0\">\n                    <a\n                      class=\"btn btn-icon bg-light-warning btn-active-color-warning btn-sm me-1\"\n                      *ngIf=\"!customer?.profit_Release\"\n                      [routerLink]=\"['/customer/update', customer.fkCustomerId]\"\n                    >\n                      <span\n                        [inlineSVG]=\"\n                          './assets/media/icons/duotune/art/art005.svg'\n                        \"\n                        class=\"svg-icon svg-icon-3 svg-icon-warning\"\n                      ></span>\n                    </a>\n                    <a\n                      class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm\"\n                      *ngIf=\"customer.Total_Paid_Amount === 0\"\n                      (click)=\"\n                        deleteCustomer(\n                          customer.fkCustomerId,\n                          customer.fkSupplierId\n                        )\n                      \"\n                    >\n                      <span\n                        [inlineSVG]=\"\n                          './assets/media/icons/duotune/general/gen027.svg'\n                        \"\n                        class=\"svg-icon svg-icon-3 svg-icon-danger\"\n                      ></span>\n                    </a>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n            <!-- end::Table body -->\n          </table>\n          <!-- end::Table -->\n        </div>\n        <!-- end::Table container -->\n\n        <!-- begin::Empty -->\n        <ng-template #noDataTemplate>\n          <ng-container *ngIf=\"fetchLoading; else elseTemplate\">\n            <div class=\"d-flex flex-column align-items-center\">\n              <!-- begin::Illustration -->\n              <div class=\"text-center px-4\">\n                <img\n                  src=\"./assets/media/illustrations/dozzy-1/5.png\"\n                  class=\"mw-100 mh-300px animate-pulse\"\n                  alt=\"\"\n                />\n              </div>\n              <!-- end::Illustration -->\n\n              <!-- begin::Message -->\n              <div class=\"fw-bold text-xl text-gray-600 text-center pt-15\">\n                <span\n                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                ></span>\n                Loading Data...\n              </div>\n              <!-- end::Message -->\n            </div>\n          </ng-container>\n          <ng-template #elseTemplate>\n            <div class=\"d-flex flex-column align-items-center\">\n              <!-- begin::Illustration -->\n              <div class=\"text-center px-4\">\n                <img\n                  src=\"./assets/media/illustrations/sketchy-1/5.png\"\n                  class=\"mw-100 mh-300px\"\n                  alt=\"\"\n                />\n              </div>\n              <!-- end::Illustration -->\n\n              <!-- begin::Message -->\n              <div class=\"fw-bold fs-6 text-gray-600 text-center pt-15\">\n                No Data Found\n              </div>\n              <!-- end::Message -->\n            </div>\n          </ng-template>\n        </ng-template>\n        <!-- end::Empty -->\n        <!-- begin::Body -->\n      </div>\n      <!-- end::Card -->\n\n      <div\n        class=\"flex justify-center md:justify-between flex-col md:flex-row p-5\"\n        *ngIf=\"arrCustomer.length > 0\"\n      >\n        <div class=\"fs-6 fw-bold text-gray-700 mb-3 md:mb-0 text-center\">\n          Showing {{ getFromCount() }} to {{ getToCount() }} of\n          {{ intTotalCount }}\n          entries\n        </div>\n\n        <ul class=\"pagination\" *ngIf=\"pager.pages && pager.pages.length\">\n          <li\n            class=\"page-item previous\"\n            [ngClass]=\"{ disabled: pager.currentPage === 1 }\"\n          >\n            <a\n              class=\"page-link cursor-pointer\"\n              (click)=\"setPage(pager.currentPage - 1)\"\n            >\n              <i class=\"previous\"></i>\n            </a>\n          </li>\n\n          <li\n            class=\"page-item\"\n            *ngFor=\"let page of pager.pages\"\n            [ngClass]=\"{ active: pager.currentPage === page }\"\n          >\n            <a class=\"page-link cursor-pointer\" (click)=\"setPage(page)\">\n              {{ page }}\n            </a>\n          </li>\n\n          <li\n            class=\"page-item next\"\n            [ngClass]=\"{\n              disabled: pager.currentPage === pager.totalPages\n            }\"\n          >\n            <a\n              class=\"page-link cursor-pointer\"\n              (click)=\"setPage(pager.currentPage + 1)\"\n            >\n              <i class=\"next\"></i>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <!--end::Col-->\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { CustomerService } from 'src/app/core/services/customer/customer.service';\nimport { SupplierService } from 'src/app/core/services/supplier/supplier.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-customer',\n  templateUrl: './update-customer.component.html',\n  styleUrls: ['./update-customer.component.scss'],\n})\nexport class UpdateCustomerComponent {\n  private dataUrl = 'assets/data/country.json';\n\n  arrCountries: any[] = [];\n  arrAmenities: any[] = [];\n\n  myForm: FormGroup;\n  submitted: boolean = false;\n  customerId = '';\n  fetchLoading = false;\n  arrCustomer: any = [];\n\n  isLoading = false;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private supplierService: SupplierService,\n    private customerService: CustomerService,\n    private router: Router,\n    private readonly http: HttpClient,\n    private formBuilder: FormBuilder\n  ) {\n    activatedRoute.params.subscribe((params) => {\n      this.customerId = params.id;\n    });\n\n    this.myForm = this.formBuilder.group({\n      strUserName: ['', Validators.required],\n      strEmail: [''],\n      phone: ['', Validators.required],\n      fkSupplierId: ['', Validators.required],\n      supplier_Name: ['', Validators.required],\n      country: [null, Validators.required],\n      strPackage: ['', Validators.required],\n      cost_Price: ['0', Validators.required],\n      Total_Amount: ['0', Validators.required],\n      vat: ['', Validators.required],\n      per_Person: ['', Validators.required],\n      no_Of_Persons: ['', Validators.required],\n      travel_Date: ['', Validators.required],\n      Service_Credit_Amount: [''],\n      Service_Debit_Amount: [''],\n      Refund_Amount: ['', Validators.required],\n      strDescription: [''],\n      cost_Details: this.formBuilder.array([]),\n    });\n    this.getCountryData();\n    this.getMetaData();\n  }\n\n  sumValue() {\n    let sum = 0;\n    this.myForm.value.cost_Details.forEach((e) => {\n      sum += e.amount;\n    });\n\n    this.myForm.patchValue({\n      cost_Price: sum,\n    });\n  }\n\n  get cost_Details(): FormArray {\n    return this.myForm.get('cost_Details') as FormArray;\n  }\n\n  newCost_Details(): FormGroup {\n    return this.formBuilder.group({\n      name: [null, Validators.required],\n      amount: ['', Validators.required],\n    });\n  }\n\n  addItem() {\n    this.cost_Details.push(this.newCost_Details());\n  }\n\n  getMetaData() {\n    const obj = {\n      metaType: 'Amentities', //Amentities transfermod\n    };\n\n    this.supplierService.metaData(obj).subscribe((data) => {\n      if (data.success) {\n        this.arrAmenities = data.data;\n      } else {\n        this.arrAmenities = [];\n      }\n    });\n  }\n\n  removeItem(i: number) {\n    Swal.fire({\n      title: 'Do you want to remove?',\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n      reverseButtons: true,\n      confirmButtonColor: '#dc3741',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.cost_Details.removeAt(i);\n        this.sumValue();\n      }\n    });\n  }\n  getCountryData() {\n    this.http.get(this.dataUrl).subscribe((data: any) => {\n      this.arrCountries = data;\n      this.getAllCustomer();\n    });\n  }\n  get f() {\n    return this.myForm.controls;\n  }\n\n  getAllCustomer() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: 0,\n      intPageLimit: 1,\n      fkCustomerId: this.customerId,\n    };\n\n    this.fetchLoading = true;\n    this.customerService.getAllCustomer(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        this.arrCustomer = res.data[0];\n        this.patchValue(this.arrCustomer);\n      } else {\n        this.arrCustomer = [];\n      }\n    });\n  }\n\n  patchValue(customer) {\n    this.myForm.patchValue({\n      strUserName: customer.strName,\n      strEmail: customer.strEmail,\n      phone: customer.phone,\n      country: customer.country,\n      strPackage: customer.strPackage,\n      Total_Amount: customer.Total_Amount,\n      fkSupplierId: customer.fkSupplierId,\n      supplier_Name: customer.supplier_Name,\n      cost_Price: customer.cost_Price,\n      selling_Price: customer.selling_Price,\n      Service_Credit_Amount: customer.Service_Credit_Amount,\n      Service_Debit_Amount: customer.Service_Debit_Amount,\n      Refund_Amount: customer.Refund_Amount,\n      vat: customer.vat,\n      per_Person: customer.per_Person,\n      no_Of_Persons: customer.no_Of_Persons,\n      travel_Date: moment(customer.travel_Date).format('YYYY-MM-DD'),\n      strDescription: customer.strDescription,\n    });\n\n    customer.cost_Details.forEach((item: any, i) => {\n      this.addItem();\n      this.cost_Details.at(i).patchValue({\n        name: item.name,\n        amount: item.amount,\n      });\n    });\n  }\n\n  resetForm() {\n    this.myForm.reset();\n    this.submitted = false;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.myForm.invalid) {\n      return;\n    }\n\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      fkCustomerId: this.customerId,\n      strName: this.myForm.value.strUserName,\n      strEmail: this.myForm.value.strEmail,\n      phoneNo: this.myForm.value.phone,\n      strPackage: this.myForm.value.strPackage,\n      fkSupplierId: this.myForm.value.fkSupplierId,\n      supplier_Name: this.myForm.value.supplier_Name,\n      cost_Price:\n        this.myForm.value.cost_Price - this.myForm.value.Refund_Amount,\n      country: this.myForm.value.country,\n      selling_Price:\n        this.myForm.value.per_Person * this.myForm.value.no_Of_Persons +\n        (this.myForm.value.Service_Credit_Amount || 0) -\n        this.myForm.value.Refund_Amount -\n        (this.myForm.value.Service_Debit_Amount || 0),\n      profit_Price:\n        this.myForm.value.per_Person * this.myForm.value.no_Of_Persons -\n        this.myForm.value.cost_Price, // selling - cost\n      vat: this.myForm.value.vat,\n      per_Person: this.myForm.value.per_Person,\n      no_Of_Persons: this.myForm.value.no_Of_Persons,\n      Total_Amount:\n        this.myForm.value.per_Person * this.myForm.value.no_Of_Persons +\n        (this.myForm.value.Service_Credit_Amount || 0) -\n        this.myForm.value.Refund_Amount -\n        (this.myForm.value.Service_Debit_Amount || 0), // per_Person * no_Of_Persons * vat / 100 + per_Person * no_Of_Persons\n      travel_Date: this.myForm.value.travel_Date,\n      strDescription: this.myForm.value.strDescription,\n      cost_Details: this.myForm.value.cost_Details,\n    };\n\n    this.isLoading = true;\n    this.customerService.updateCustomer(obj).subscribe((res) => {\n      this.isLoading = false;\n      if (res.success) {\n        Swal.fire({\n          title: 'Success',\n          text: 'Successfully updated customer',\n          icon: 'success',\n        }).then((value) => {\n          if (value) {\n            this.myForm.reset();\n            this.submitted = false;\n            this.router.navigate(['/customer']);\n          }\n        });\n      } else {\n        Swal.fire({\n          title: 'Error',\n          text: res.message,\n          icon: 'error',\n        });\n      }\n    });\n  }\n}\n","<!--begin::Col-->\n<div class=\"col-md-12 col-lg-12 md-m-5\">\n  <div class=\"card\">\n    <!-- begin::Header -->\n    <div class=\"card-header border-0\">\n      <h3 class=\"card-title fw-bold text-dark\">Update Customer Package</h3>\n    </div>\n    <!-- end::Header -->\n    <!-- begin::Body -->\n    <div class=\"card-body pt-2\">\n      <!-- begin::Item -->\n      <form [formGroup]=\"myForm\">\n        <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\n          <div>\n            <label for=\"name\">\n              <span class=\"required\"> Customer Name </span>\n            </label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Customer Name\"\n              id=\"name\"\n              formControlName=\"strUserName\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.strUserName.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.strUserName.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.strUserName.errors.required\">\n                Customer Name required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"email\">\n              <span class=\"\"> Email </span>\n            </label>\n            <input\n              type=\"email\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Email\"\n              id=\"email\"\n              formControlName=\"strEmail\"\n            />\n            <!-- [ngClass]=\"{\n                'is-invalid': submitted && f.strEmail.errors\n              }\" -->\n            <!-- <div *ngIf=\"submitted && f.strEmail.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.strEmail.errors.required\">Email required</div>\n              <div *ngIf=\"f.strEmail.errors.email\">\n                Email format is wrong. Please type in proper format\n              </div>\n            </div> -->\n          </div>\n\n          <div>\n            <label for=\"phone\">\n              <span class=\"required\"> Phone Number </span>\n            </label>\n            <input\n              type=\"tel\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Phone Number\"\n              id=\"phone\"\n              formControlName=\"phone\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.phone.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.phone.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.phone.errors.required\">Phone Number required</div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"country\">\n              <span class=\"required\"> Country </span>\n            </label>\n            <ng-select\n              [items]=\"arrCountries\"\n              bindLabel=\"name\"\n              bindValue=\"name\"\n              formControlName=\"country\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.country.errors\n              }\"\n              placeholder=\"Choose a country\"\n            >\n            </ng-select>\n            <div *ngIf=\"submitted && f.country.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.country.errors.required\">Country required</div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"package\">\n              <span class=\"required\"> Package Name </span>\n            </label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Package Name\"\n              id=\"package\"\n              formControlName=\"strPackage\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.strPackage.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.strPackage.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.strPackage.errors.required\">\n                Package Name required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"supplier\">\n              <span class=\"required\"> Supplier Name </span>\n            </label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Supplier Name\"\n              id=\"supplier\"\n              formControlName=\"supplier_Name\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.supplier_Name.errors\n              }\"\n            />\n            <div\n              *ngIf=\"submitted && f.supplier_Name.errors\"\n              class=\"text-red-500\"\n            >\n              <div *ngIf=\"f.supplier_Name.errors.required\">\n                Supplier required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"per_Person\">\n              <span class=\"required\"> Amount / Person </span>\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Amount / Person\"\n              id=\"per_Person\"\n              formControlName=\"per_Person\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.per_Person.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.per_Person.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.per_Person.errors.required\">\n                Amount / Person required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"noOfPerson\">\n              <span class=\"required\"> No of Person </span>\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"No of Person\"\n              id=\"noOfPerson\"\n              formControlName=\"no_Of_Persons\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.no_Of_Persons.errors\n              }\"\n            />\n            <div\n              *ngIf=\"submitted && f.no_Of_Persons.errors\"\n              class=\"text-red-500\"\n            >\n              <div *ngIf=\"f.no_Of_Persons.errors.required\">\n                No of Person required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"vat\">\n              <span class=\"required\"> VAT </span>\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"VAT\"\n              id=\"vat\"\n              formControlName=\"vat\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.vat.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.vat.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.vat.errors.required\">VAT required</div>\n            </div>\n          </div>\n\n          <div>\n            <span> Selling Price (Total Amount) </span>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Total_Amount.value }}\n            </div>\n          </div>\n\n          <!-- <div>\n            <label for=\"costPrice\">\n              <span class=\"required\"> Cost Price </span>\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Cost Price\"\n              id=\"costPrice\"\n              formControlName=\"cost_Price\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.cost_Price.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.cost_Price.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.cost_Price.errors.required\">\n                Cost Price required\n              </div>\n            </div>\n          </div> -->\n\n          <!-- <div>\n            <label for=\"sellingPrice\">\n              <span class=\"required\"> Selling Price </span>\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Selling Price\"\n              id=\"sellingPrice\"\n              formControlName=\"selling_Price\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.selling_Price.errors\n              }\"\n            />\n            <div\n              *ngIf=\"submitted && f.selling_Price.errors\"\n              class=\"text-red-500\"\n            >\n              <div *ngIf=\"f.selling_Price.errors.required\">\n                Selling Price required\n              </div>\n            </div>\n          </div> -->\n\n          <div>\n            <span> Profit Price </span>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Total_Amount.value - f.cost_Price.value }}\n            </div>\n          </div>\n\n          <div>\n            <label for=\"travelDate\">\n              <span class=\"required\"> Travel Date </span>\n            </label>\n            <input\n              type=\"date\"\n              class=\"form-control form-control-solid\"\n              id=\"travelDate\"\n              formControlName=\"travel_Date\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.travel_Date.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.travel_Date.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.travel_Date.errors.required\">\n                Travel Date required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"desc\">\n              <span> Description </span>\n            </label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Description\"\n              id=\"desc\"\n              formControlName=\"strDescription\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.strDescription.errors\n              }\"\n            />\n          </div>\n\n          <div>\n            <label for=\"costPrice\">\n              <span class=\"required\"> Cost Price </span>\n            </label>\n\n            <div class=\"form-control form-control-solid\" (click)=\"addItem()\">\n              {{ f.cost_Price.value }}\n            </div>\n\n            <div *ngIf=\"submitted && f.cost_Price.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.cost_Price.errors.required\">\n                Cost Price required\n              </div>\n            </div>\n          </div>\n          <div>\n            <label for=\"costPrice\">\n              <span class=\"required\"> G-Voucher Credit Amount </span>\n            </label>\n\n            <div class=\"form-control form-control-solid min-h-[43.5px]\">\n              {{ f.Service_Credit_Amount.value || 0 }}\n            </div>\n          </div>\n          <div>\n            <label for=\"costPrice\">\n              <span class=\"required\"> G-Voucher Debit Amount </span>\n            </label>\n\n            <div class=\"form-control form-control-solid min-h-[43.5px]\">\n              {{ f.Service_Debit_Amount.value || 0 }}\n            </div>\n          </div>\n          <div>\n            <label for=\"costPrice\">\n              <span class=\"required\">Refund Amount </span>\n            </label>\n\n            <div class=\"form-control form-control-solid\">\n              {{ f.Refund_Amount.value }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-12 text-right my-3\">\n          <button class=\"btn btn-primary btn-sm\" (click)=\"addItem()\">\n            <i class=\"bi bi-plus\"></i>\n            Add Expenses\n          </button>\n        </div>\n        <div\n          class=\"table-responsive mb-3 overflow-visible max-h-[50vh]\"\n          [ngClass]=\"{ 'overflow-scroll': cost_Details.controls.length >= 5 }\"\n          *ngIf=\"cost_Details.controls.length\"\n        >\n          <!-- begin::Table -->\n          <table\n            class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\"\n          >\n            <!-- begin::Table head -->\n            <thead>\n              <tr class=\"fw-bold text-muted\">\n                <th class=\"min-w-[200px]\">Amenity</th>\n                <th class=\"min-w-[200px]\">Amount</th>\n                <th class=\"min-w-[120px]\">ACTION</th>\n              </tr>\n            </thead>\n            <!-- end::Table head -->\n            <!-- begin::Table body -->\n            <tbody formArrayName=\"cost_Details\">\n              <tr\n                *ngFor=\"let skill of cost_Details.controls; let i = index\"\n                [formGroupName]=\"i\"\n              >\n                <td>\n                  <ng-select\n                    [items]=\"arrAmenities\"\n                    bindLabel=\"type\"\n                    bindValue=\"type\"\n                    dropdownPosition=\"bottom\"\n                    placeholder=\"Choose an Amenity\"\n                    formControlName=\"name\"\n                  >\n                  </ng-select>\n\n                  <div\n                    *ngIf=\"submitted && cost_Details.get(i + '.name')?.errors\"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"cost_Details.get(i + '.name')?.errors?.required\"\n                      >Amenity Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <input\n                    type=\"number\"\n                    class=\"form-control form-control-solid\"\n                    placeholder=\"Amount\"\n                    (keyup)=\"sumValue()\"\n                    formControlName=\"amount\"\n                  />\n\n                  <div\n                    *ngIf=\"submitted && cost_Details.get(i + '.amount')?.errors\"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"cost_Details.get(i + '.amount')?.errors?.required\"\n                      >Amount Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <a\n                    class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm\"\n                    (click)=\"removeItem(i)\"\n                  >\n                    <span\n                      [inlineSVG]=\"\n                        './assets/media/icons/duotune/general/gen027.svg'\n                      \"\n                      class=\"svg-icon svg-icon-3 svg-icon-danger\"\n                    ></span>\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n            <!-- end::Table body -->\n          </table>\n          <!-- end::Table -->\n        </div>\n      </form>\n\n      <div\n        class=\"grid grid-cols-2 md:grid-cols-6 gap-2 mt-4\"\n        *ngIf=\"cost_Details.controls.length\"\n      >\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <button class=\"btn btn-light-primary\" (click)=\"resetForm()\">\n          Clear\n        </button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">Update</button>\n      </div>\n    </div>\n    <!-- end::Body -->\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}