{"version":3,"file":"src_app_pages_profit-release_profit-release_module_ts.0eee7c8329a41a25.js","mappings":"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","sources":["./src/app/pages/profit-release/profit-release.component.ts","./src/app/pages/profit-release/profit-release.component.html","./src/app/pages/profit-release/profit-release.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport { ExportToExcelService } from 'src/app/core/services/common/export-to-excel.service';\nimport { PagerService } from 'src/app/core/services/pagination/pager.service';\nimport { ReportService } from 'src/app/core/services/report/report.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-profit-release',\n  templateUrl: './profit-release.component.html',\n  styleUrls: ['./profit-release.component.scss'],\n})\nexport class ProfitReleaseComponent implements OnInit {\n  arrCustomer: any = [];\n\n  // pagination\n  pager: any = {};\n  intTotalCount = 0;\n  intPageLimit = 50;\n  intSkipCount = 0;\n  fetchLoading = false;\n\n  errorIndex: any = '';\n  myForm: FormGroup;\n  myForm2: FormGroup;\n\n  constructor(\n    private reportService: ReportService,\n    private formBuilder: FormBuilder,\n    private exportToExcelService: ExportToExcelService,\n    private pageServiceObj: PagerService\n  ) {\n    this.myForm = this.formBuilder.group({\n      customer: [null],\n      fromDate: [''],\n      toDate: [''],\n      paymentStatus: ['ALL'],\n    });\n\n    this.myForm2 = this.formBuilder.group({\n      paymentDetails: this.formBuilder.array([]),\n    });\n  }\n\n  get paymentDetails(): FormArray {\n    return this.myForm2.get('paymentDetails') as FormArray;\n  }\n\n  newPaymentDetails(): FormGroup {\n    return this.formBuilder.group({\n      verifyDate: ['', Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.getAllIncomeReport();\n  }\n\n  setPage(page) {\n    if (page < 1 || page > this.pager.totalPages) {\n      return;\n    }\n    this.pager = this.pageServiceObj.getPager(\n      this.intTotalCount,\n      page,\n      this.intPageLimit\n    );\n    this.getAllIncomeReport();\n  }\n\n  getFromCount() {\n    return this.intPageLimit * (this.pager.currentPage - 1) + 1;\n  }\n\n  profitRelease(customer, bool, i) {\n    console.log('customer', customer);\n    console.log('bool', bool);\n    console.log('myForm2', this.myForm2.value);\n\n    if (bool) {\n      if (this.paymentDetails.at(i).value.verifyDate === '') {\n        this.errorIndex = i;\n        return;\n      }\n      // perform profit release\n      Swal.fire({\n        title: 'Are you sure?',\n        text: `You are going to Release Profit`,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#228B22',\n        reverseButtons: true,\n        confirmButtonText: `Yes, Release it!`,\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const obj = {\n            strLoginUserId: localStorage.getItem('userId'),\n            fkCustomerId: customer.fkCustomerId,\n            profit_Release: bool,\n            profit_Date: this.paymentDetails.at(i).value.verifyDate,\n          };\n\n          this.reportService.updateGrossIncomeReport(obj).subscribe((res) => {\n            if (res.success) {\n              Swal.fire({\n                title: 'Success',\n                text: 'Successfully Released profit',\n                icon: 'success',\n              }).then((value) => {\n                if (value) {\n                  this.errorIndex = '';\n                  this.getAllIncomeReport();\n                }\n              });\n            }\n          });\n        }\n      });\n    } else {\n      // revert profit release\n\n      Swal.fire({\n        title: 'Are you sure?',\n        text: `You are going to revert Release Profit`,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#228B22',\n        reverseButtons: true,\n        confirmButtonText: `Yes, Revert it!`,\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const obj = {\n            strLoginUserId: localStorage.getItem('userId'),\n            fkCustomerId: customer.fkCustomerId,\n            profit_Release: bool,\n            profit_Date: '',\n          };\n\n          this.reportService.updateGrossIncomeReport(obj).subscribe((res) => {\n            if (res.success) {\n              Swal.fire({\n                title: 'Success',\n                text: 'Successfully Reverted',\n                icon: 'success',\n              }).then((value) => {\n                if (value) {\n                  this.errorIndex = '';\n                  this.getAllIncomeReport();\n                }\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n\n  getToCount() {\n    return (\n      this.intPageLimit * (this.pager.currentPage - 1) + this.arrCustomer.length\n    );\n  }\n  getAllIncomeReport() {\n    let skipCount = this.intSkipCount;\n    if (this.pager.intSkipCount) {\n      skipCount = this.pager.intSkipCount;\n    }\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: skipCount,\n      intPageLimit: this.intPageLimit,\n      strStartDate: this.myForm.value.fromDate,\n      strEndDate: this.myForm.value.toDate,\n      paymentType: this.myForm.value.paymentStatus,\n      // fkCustomerId: '',\n      // cust_Code: this.myForm.value.customer,\n      // fromDate: this.myForm.value.fromDate,\n      // endDate: this.myForm.value.toDate,\n    };\n\n    this.fetchLoading = true;\n    this.reportService.getGrossIncomeReport(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        for (let i = 0; i < res.data.length; i++) {\n          this.paymentDetails.push(this.newPaymentDetails());\n        }\n\n        console.log('paymentDetails', this.paymentDetails);\n        this.arrCustomer = res.data;\n\n        this.intTotalCount = res.count;\n\n        this.pager = this.pageServiceObj.getPager(\n          this.intTotalCount,\n          this.pager.currentPage,\n          this.intPageLimit\n        );\n      } else {\n        this.arrCustomer = [];\n        // alert(res.message);\n      }\n    });\n  }\n\n  downloadExcel() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: 0,\n      intPageLimit: 1000000,\n      strStartDate: this.myForm.value.fromDate,\n      strEndDate: this.myForm.value.toDate,\n      paymentType: this.myForm.value.paymentStatus,\n    };\n\n    this.fetchLoading = true;\n    this.reportService.getGrossIncomeReport(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        let jsonData: any = [];\n\n        res.data.forEach((e) => {\n          let obj: any = {\n            Date: moment(e.date, 'YYYY-MM-DD').format('DD-MM-YYYY'),\n            'Customer Code': e.customer_code,\n            'Customer Name': e.customer_name,\n            Package: e.package_name,\n            Supplier: e.supplier_name,\n            Receivable: e.customerBalence,\n            Payable: e.supplierBalence,\n            Profit: e.profit,\n          };\n          jsonData.push(obj);\n        });\n\n        this.exportToExcelService.exportAsExcelFile(\n          jsonData,\n          'Gross Income Report '\n        );\n      }\n    });\n  }\n}\n","<div class=\"card mb-3\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"myForm\">\n      <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\n        <div>\n          <label for=\"fromDate\">\n            <span class=\"\"> From Date </span>\n          </label>\n          <input\n            type=\"date\"\n            id=\"fromDate\"\n            formControlName=\"fromDate\"\n            class=\"form-control form-control-solid\"\n          />\n        </div>\n        <div>\n          <label for=\"toDate\">\n            <span class=\"\"> To Date </span>\n          </label>\n          <input\n            type=\"date\"\n            id=\"toDate\"\n            formControlName=\"toDate\"\n            class=\"form-control form-control-solid\"\n          />\n        </div>\n        <div>\n          <label for=\"status\">\n            <span class=\"\"> Payment Status </span>\n          </label>\n          <div class=\"flex gap-3 py-3\">\n            <div\n              class=\"form-check form-check-custom form-check-primary form-check-solid\"\n            >\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                value=\"ALL\"\n                formControlName=\"paymentStatus\"\n                id=\"ALL\"\n              />\n              <label class=\"form-check-label\" for=\"ALL\"> All </label>\n            </div>\n            <div\n              class=\"form-check form-check-custom form-check-warning form-check-solid\"\n            >\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                value=\"ONGOING\"\n                formControlName=\"paymentStatus\"\n                id=\"ONGOING\"\n              />\n              <label class=\"form-check-label\" for=\"ONGOING\"> Ongoing </label>\n            </div>\n            <div\n              class=\"form-check form-check-custom form-check-success form-check-solid\"\n            >\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                value=\"VERIFY\"\n                formControlName=\"paymentStatus\"\n                id=\"VERIFY\"\n              />\n              <label class=\"form-check-label\" for=\"VERIFY\"> Completed </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class=\"text-right\">\n      <button class=\"btn btn-primary btn-sm\" (click)=\"getAllIncomeReport()\">\n        <i class=\"bi bi-search\"></i>\n        Search\n      </button>\n    </div>\n  </div>\n</div>\n<!-- <div class=\"text-right mb-3\">\n  <button class=\"btn btn-secondary btn-sm\" (click)=\"downloadExcel()\">\n    <i class=\"bi bi-cloud-download\"></i>\n    Download\n  </button>\n</div> -->\n\n<!--begin::Row-->\n<div class=\"row g-5 g-xl-10\">\n  <div class=\"col-md-12 col-lg-12 md-m-5\">\n    <div class=\"card\">\n      <!-- begin::Body -->\n      <div class=\"card-body\">\n        <!-- begin::Table container -->\n\n        <div\n          class=\"table-responsive\"\n          *ngIf=\"arrCustomer.length > 0; else noDataTemplate\"\n        >\n          <form [formGroup]=\"myForm2\">\n            <!-- begin::Table -->\n            <table\n              class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full text-center\"\n            >\n              <!-- begin::Table head -->\n              <thead>\n                <tr class=\"fw-bold text-muted\">\n                  <th class=\"min-w-130px\">Date</th>\n                  <th class=\"min-w-130px\">Customer ID</th>\n                  <th class=\"min-w-130px\">Customer Name</th>\n                  <th class=\"min-w-130px\">Package</th>\n                  <th class=\"min-w-130px\">Supplier</th>\n                  <th class=\"min-w-130px\">Receivable</th>\n                  <th class=\"min-w-130px\">Payable</th>\n                  <th class=\"min-w-130px\">Profit</th>\n                  <th class=\"min-w-130px\">Profit Release Date</th>\n                  <th class=\"min-w-130px\">Profit Release</th>\n                </tr>\n              </thead>\n              <!-- end::Table head -->\n              <!-- begin::Table body -->\n              <tbody formArrayName=\"paymentDetails\">\n                <tr\n                  *ngFor=\"let customer of arrCustomer; let i = index\"\n                  [formGroupName]=\"i\"\n                >\n                  <td>\n                    {{ customer.date | date : \"mediumDate\" }}\n                  </td>\n                  <td>\n                    {{ customer.customer_code }}\n                  </td>\n                  <td>\n                    {{ customer.customer_name }}\n                  </td>\n                  <td>\n                    {{ customer.package_name }}\n                  </td>\n                  <td>{{ customer.supplier_name }}</td>\n                  <td>{{ customer.customerBalence }}</td>\n                  <td>{{ customer.supplierBalence }}</td>\n                  <td>\n                    {{ customer.profit }}\n                  </td>\n                  <td>\n                    <!-- {{ customer.profit_Release ? customer.profit_Date : \"\" }} -->\n\n                    <ng-container\n                      *ngIf=\"customer.profit_Release; else elsePRel\"\n                    >\n                      {{ customer.profit_Date | date : \"mediumDate\" }}\n                    </ng-container>\n                    <ng-template #elsePRel>\n                      <input\n                        type=\"date\"\n                        class=\"form-control form-control-solid\"\n                        formControlName=\"verifyDate\"\n                      />\n\n                      <div\n                        *ngIf=\"\n                          paymentDetails.get(i + '.verifyDate')?.errors &&\n                          errorIndex === i\n                        \"\n                        class=\"text-red-500\"\n                      >\n                        <small> Verify Date Required </small>\n                      </div>\n                    </ng-template>\n                  </td>\n                  <td>\n                    <ng-container\n                      *ngIf=\"customer.profit_Release; else elseReleases\"\n                    >\n                      <a\n                        class=\"btn btn-warning btn-sm\"\n                        (click)=\"profitRelease(customer, false, i)\"\n                      >\n                        Revert\n                      </a>\n                    </ng-container>\n                    <ng-template #elseReleases>\n                      <button\n                        class=\"btn btn-success btn-sm\"\n                        [disabled]=\"\n                          customer.customerBalence !== 0 &&\n                          customer.supplierBalence !== 0\n                        \"\n                        (click)=\"profitRelease(customer, true, i)\"\n                      >\n                        Profit Release\n                      </button>\n                    </ng-template>\n                  </td>\n                </tr>\n              </tbody>\n              <!-- end::Table body -->\n            </table>\n            <!-- end::Table -->\n          </form>\n        </div>\n        <!-- end::Table container -->\n\n        <!-- begin::Empty -->\n        <ng-template #noDataTemplate>\n          <ng-container *ngIf=\"fetchLoading; else elseTemplate\">\n            <div class=\"d-flex flex-column align-items-center\">\n              <!-- begin::Illustration -->\n              <div class=\"text-center px-4\">\n                <img\n                  src=\"./assets/media/illustrations/dozzy-1/5.png\"\n                  class=\"mw-100 mh-300px animate-pulse\"\n                  alt=\"\"\n                />\n              </div>\n              <!-- end::Illustration -->\n\n              <!-- begin::Message -->\n              <div class=\"fw-bold text-xl text-gray-600 text-center pt-15\">\n                <span\n                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                ></span>\n                Loading Data...\n              </div>\n              <!-- end::Message -->\n            </div>\n          </ng-container>\n          <ng-template #elseTemplate>\n            <div class=\"d-flex flex-column align-items-center\">\n              <!-- begin::Illustration -->\n              <div class=\"text-center px-4\">\n                <img\n                  src=\"./assets/media/illustrations/sketchy-1/5.png\"\n                  class=\"mw-100 mh-300px\"\n                  alt=\"\"\n                />\n              </div>\n              <!-- end::Illustration -->\n\n              <!-- begin::Message -->\n              <div class=\"fw-bold fs-6 text-gray-600 text-center pt-15\">\n                No Data Found\n              </div>\n              <!-- end::Message -->\n            </div>\n          </ng-template>\n        </ng-template>\n        <!-- end::Empty -->\n        <!-- begin::Body -->\n      </div>\n      <!-- end::Card -->\n\n      <div\n        class=\"flex justify-center md:justify-between flex-col md:flex-row p-5\"\n        *ngIf=\"arrCustomer.length > 0\"\n      >\n        <div class=\"fs-6 fw-bold text-gray-700 mb-3 md:mb-0 text-center\">\n          Showing {{ getFromCount() }} to {{ getToCount() }} of\n          {{ intTotalCount }}\n          entries\n        </div>\n\n        <ul class=\"pagination\" *ngIf=\"pager.pages && pager.pages.length\">\n          <li\n            class=\"page-item previous\"\n            [ngClass]=\"{ disabled: pager.currentPage === 1 }\"\n          >\n            <a\n              class=\"page-link cursor-pointer\"\n              (click)=\"setPage(pager.currentPage - 1)\"\n            >\n              <i class=\"previous\"></i>\n            </a>\n          </li>\n\n          <li\n            class=\"page-item\"\n            *ngFor=\"let page of pager.pages\"\n            [ngClass]=\"{ active: pager.currentPage === page }\"\n          >\n            <a class=\"page-link cursor-pointer\" (click)=\"setPage(page)\">\n              {{ page }}\n            </a>\n          </li>\n\n          <li\n            class=\"page-item next\"\n            [ngClass]=\"{\n              disabled: pager.currentPage === pager.totalPages\n            }\"\n          >\n            <a\n              class=\"page-link cursor-pointer\"\n              (click)=\"setPage(pager.currentPage + 1)\"\n            >\n              <i class=\"next\"></i>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <!--end::Col-->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { InlineSVGModule } from 'ng-inline-svg-2';\nimport { WidgetsModule } from 'src/app/theme/partials';\nimport { ProfitReleaseComponent } from './profit-release.component';\n\n@NgModule({\n  declarations: [ProfitReleaseComponent],\n  imports: [\n    CommonModule,\n    NgbTooltipModule,\n    FormsModule,\n    NgSelectModule,\n    InlineSVGModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ProfitReleaseComponent,\n      },\n    ]),\n    WidgetsModule,\n  ],\n})\nexport class ProfitReleaseModule {}\n"],"names":[],"sourceRoot":"webpack:///"}