{"version":3,"file":"src_app_pages_customer-payment_customer-payment_module_ts.f8fcea9205c81b00.js","mappings":"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","sources":["./src/app/pages/customer-payment/create-customer-payment/create-customer-payment.component.ts","./src/app/pages/customer-payment/create-customer-payment/create-customer-payment.component.html","./src/app/pages/customer-payment/customer-payment.module.ts","./src/app/pages/customer-payment/manage-customer-payment/manage-customer-payment.component.ts","./src/app/pages/customer-payment/manage-customer-payment/manage-customer-payment.component.html","./src/app/pages/customer-payment/update-customer-payment/update-customer-payment.component.ts","./src/app/pages/customer-payment/update-customer-payment/update-customer-payment.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CustomerService } from 'src/app/core/services/customer/customer.service';\r\nimport { SupplierService } from 'src/app/core/services/supplier/supplier.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-create-customer-payment',\r\n  templateUrl: './create-customer-payment.component.html',\r\n  styleUrls: ['./create-customer-payment.component.scss'],\r\n})\r\nexport class CreateCustomerPaymentComponent {\r\n  arrAllCustomers: any = [];\r\n  arrTransferMode: any = [];\r\n  arrBanks: any = [];\r\n  arrPaymentType: any = [\r\n    {\r\n      type: 'G-Voucher (Credit)',\r\n      sentType: 'SERVICE',\r\n      mode: 'Credit',\r\n    },\r\n    {\r\n      type: 'G-Voucher (Debit)',\r\n      sentType: 'SERVICE',\r\n      mode: 'Debit',\r\n    },\r\n    {\r\n      type: 'PAID',\r\n      sentType: 'PAID',\r\n      mode: '',\r\n    },\r\n    // {\r\n    //   type: 'REFUND',\r\n    // },\r\n  ];\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    private customerService: CustomerService,\r\n    private supplierService: SupplierService,\r\n    private toastr: ToastrService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n    this.myForm = this.formBuilder.group({\r\n      customer: [null, Validators.required],\r\n      totalAmount: [0, Validators.required],\r\n      paidAmount: [0, Validators.required],\r\n      Service_Credit_Amount: ['0', Validators.required],\r\n      Service_Debit_Amount: ['0', Validators.required],\r\n      Refund_Amount: ['0', Validators.required],\r\n      paymentDetails: this.formBuilder.array([]),\r\n    });\r\n\r\n    this.getAllCustomerAll();\r\n    this.getMetaData();\r\n    this.getMetaDataBank();\r\n  }\r\n\r\n  get f() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  get paymentDetails(): FormArray {\r\n    return this.myForm.get('paymentDetails') as FormArray;\r\n  }\r\n\r\n  newPaymentDetails(): FormGroup {\r\n    return this.formBuilder.group({\r\n      type: [null, Validators.required],\r\n      mode: [''],\r\n      transferMode: [null, Validators.required],\r\n      transferPercent: [''],\r\n      transferPercentage: [''],\r\n      bank: [null],\r\n      amount: ['', Validators.required],\r\n      date: ['', Validators.required],\r\n      description: [''],\r\n    });\r\n  }\r\n\r\n  removeItem(i: number) {\r\n    Swal.fire({\r\n      title: 'Do you want to remove?',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Delete',\r\n      reverseButtons: true,\r\n      confirmButtonColor: '#dc3741',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.paymentDetails.removeAt(i);\r\n      }\r\n    });\r\n  }\r\n\r\n  addItem() {\r\n    if (this.f.customer.value === '' || this.f.customer.value === null) {\r\n      this.toastr.warning('', 'Choose a Customer');\r\n      return;\r\n    }\r\n    this.paymentDetails.push(this.newPaymentDetails());\r\n  }\r\n\r\n  getAllCustomerAll() {\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      fkCustomerId: '',\r\n      strName: '',\r\n      cust_Code: '',\r\n      fromDate: '',\r\n      endDate: '',\r\n      intSkipCount: '0',\r\n      intPageLimit: '1000000',\r\n    };\r\n    this.customerService.getAllCustomer(obj).subscribe((res) => {\r\n      if (res.success) {\r\n        this.arrAllCustomers = res.data.map((d) => {\r\n          return {\r\n            ...d,\r\n            displayName: d.cust_Code + ' - ' + d.strName,\r\n          };\r\n        });\r\n      } else {\r\n        this.arrAllCustomers = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  onTransferChange(val, i) {\r\n    this.paymentDetails.at(i).patchValue({ transferPercent: val.percentage });\r\n  }\r\n\r\n  onChangeCustomer() {\r\n    this.myForm.patchValue({\r\n      totalAmount: this.myForm.value.customer.Total_Amount,\r\n      paidAmount: this.myForm.value.customer?.Total_Paid_Amount || 0,\r\n      Refund_Amount: this.myForm.value.customer?.Refund_Amount || 0,\r\n      Service_Credit_Amount:\r\n        this.myForm.value.customer?.Service_Credit_Amount || 0,\r\n      Service_Debit_Amount:\r\n        this.myForm.value.customer?.Service_Debit_Amount || 0,\r\n    });\r\n  }\r\n\r\n  onPaymentChange(event, i) {\r\n    this.paymentDetails.at(i).patchValue({ mode: event.mode });\r\n  }\r\n\r\n  resetForm() {\r\n    this.myForm.reset();\r\n    this.submitted = false;\r\n  }\r\n\r\n  getMetaData() {\r\n    const obj = {\r\n      metaType: 'transfermod', // Amentities transfermod\r\n    };\r\n\r\n    this.supplierService.metaData(obj).subscribe((data) => {\r\n      if (data.success) {\r\n        this.arrTransferMode = data.data;\r\n      } else {\r\n        this.arrTransferMode = [];\r\n      }\r\n    });\r\n  }\r\n  getMetaDataBank() {\r\n    const obj = {\r\n      metaType: 'BANK', // Amentities transfermod\r\n    };\r\n\r\n    this.supplierService.metaData(obj).subscribe((data) => {\r\n      if (data.success) {\r\n        this.arrBanks = data.data;\r\n      } else {\r\n        this.arrBanks = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.invalid) {\r\n      console.log('invalid');\r\n      return;\r\n    }\r\n\r\n    const paymentDetails = this.myForm.value.paymentDetails.map(\r\n      (paymentDetails) => {\r\n        const obj: any = {\r\n          actualAmount: paymentDetails.amount,\r\n          mode: paymentDetails.mode,\r\n          bank: paymentDetails.bank,\r\n          date: paymentDetails.date,\r\n          description: paymentDetails.description,\r\n          transferMode: paymentDetails.transferMode,\r\n          transferPercent: paymentDetails.transferPercent,\r\n          transferPercentage: paymentDetails.transferPercentage,\r\n          type: paymentDetails.type,\r\n        };\r\n\r\n        // if (paymentDetails.transferPercent > 0) {\r\n        //   obj.amount =\r\n        //     paymentDetails.amount -\r\n        //     paymentDetails.amount * (paymentDetails.transferPercentage / 100);\r\n        // } else {\r\n        obj.amount = paymentDetails.amount;\r\n        // }\r\n\r\n        return obj;\r\n      }\r\n    );\r\n\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      fkCustomerId: this.myForm.value.customer.fkCustomerId,\r\n      Total_Amount: this.myForm.value.customer.Total_Amount,\r\n      fkSupplierId: this.myForm.value.customer.fkSupplierId,\r\n      cust_Code: this.myForm.value.customer.cust_Code,\r\n      payment_Details: paymentDetails,\r\n    };\r\n\r\n    // console.log('obj', obj);\r\n    this.isLoading = true;\r\n    this.customerService.addCustomerPayment(obj).subscribe((res) => {\r\n      this.isLoading = false;\r\n      if (res.success) {\r\n        Swal.fire({\r\n          title: 'Success',\r\n          text: 'Successfully Created Customer Payment',\r\n          icon: 'success',\r\n        }).then((value) => {\r\n          if (value) {\r\n            this.myForm.reset();\r\n            this.submitted = false;\r\n            this.router.navigate(['/customer-payment']);\r\n          }\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: res.message,\r\n          icon: 'error',\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!--begin::Col-->\r\n<div class=\"col-md-12 col-lg-12 md-m-5\">\r\n  <div class=\"card\">\r\n    <!-- begin::Header -->\r\n    <div class=\"card-header border-0\">\r\n      <h3 class=\"card-title fw-bold text-dark\">Create Customer Payment</h3>\r\n    </div>\r\n    <!-- end::Header -->\r\n    <!-- begin::Body -->\r\n    <div class=\"card-body pt-2\">\r\n      <!-- begin::Item -->\r\n      <form [formGroup]=\"myForm\">\r\n        <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\r\n          <div>\r\n            <label for=\"name\">\r\n              <span class=\"required\"> Customer Name </span>\r\n            </label>\r\n            <ng-select\r\n              [items]=\"arrAllCustomers\"\r\n              bindLabel=\"displayName\"\r\n              id=\"name\"\r\n              formControlName=\"customer\"\r\n              (change)=\"onChangeCustomer()\"\r\n              placeholder=\"Start Typing...\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && f.customer.errors\r\n              }\"\r\n            >\r\n            </ng-select>\r\n            <div *ngIf=\"submitted && f.customer.errors\" class=\"text-red-500\">\r\n              <div *ngIf=\"f.customer.errors.required\">\r\n                Customer Name required\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> Total Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.totalAmount.value }}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> Paid Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.paidAmount.value }}\r\n            </div>\r\n            <div\r\n              class=\"text-green-600 text-sm mt-1.5\"\r\n              *ngIf=\"\r\n                f.totalAmount.value === f.paidAmount.value &&\r\n                f.totalAmount.value !== 0\r\n              \"\r\n            >\r\n              Fully Paid. No Balance Payment\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> Balance Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.totalAmount.value - f.paidAmount.value }}\r\n            </div>\r\n            <div\r\n              class=\"text-green-600 text-sm mt-1.5\"\r\n              *ngIf=\"\r\n                f.totalAmount.value - f.paidAmount.value === 0 &&\r\n                f.totalAmount.value > 0\r\n              \"\r\n            >\r\n              Payment Completed\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> G-Voucher Credit Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.Service_Credit_Amount.value }}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> G-Voucher Debit Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.Service_Debit_Amount.value }}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> Refund Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.Refund_Amount.value }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-12 text-right my-3\">\r\n          <button class=\"btn btn-primary btn-sm\" (click)=\"addItem()\">\r\n            <i class=\"bi bi-plus\"></i>\r\n            Add Payment\r\n          </button>\r\n        </div>\r\n\r\n        <div *ngIf=\"paymentDetails.controls.length\">\r\n          <div formArrayName=\"paymentDetails\" class=\"divide-y\">\r\n            <div\r\n              *ngFor=\"let skill of paymentDetails.controls; let i = index\"\r\n              [formGroupName]=\"i\"\r\n              class=\"grid grid-cols-6 max-xl:grid-cols-4 max-lg:grid-cols-4 max-md:grid-cols-2 max-sm:grid-cols-1 gap-3 py-3 mb-5\"\r\n            >\r\n              <!-- class=\"flex gap-3 mb-3 justify-between overflow-scroll\" -->\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Payment Type </span>\r\n                </label>\r\n                <ng-select\r\n                  [items]=\"arrPaymentType\"\r\n                  bindLabel=\"type\"\r\n                  bindValue=\"sentType\"\r\n                  dropdownPosition=\"bottom\"\r\n                  (change)=\"onPaymentChange($event, i)\"\r\n                  placeholder=\"Choose a Payment Type\"\r\n                  formControlName=\"type\"\r\n                >\r\n                </ng-select>\r\n                <div\r\n                  *ngIf=\"paymentDetails.get(i + '.mode')?.value\"\r\n                  class=\"mt-1 text-{{\r\n                    paymentDetails.get(i + '.mode')?.value === 'Credit'\r\n                      ? 'green'\r\n                      : 'red'\r\n                  }}-600\"\r\n                >\r\n                  {{\r\n                    paymentDetails.get(i + \".mode\")?.value === \"Credit\"\r\n                      ? \"Pay from Supplier\"\r\n                      : paymentDetails.get(i + \".mode\")?.value === \"Debit\"\r\n                      ? \"Pay to Supplier\"\r\n                      : \"\"\r\n                  }}\r\n                </div>\r\n\r\n                <div\r\n                  *ngIf=\"submitted && paymentDetails.get(i + '.type')?.errors\"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"paymentDetails.get(i + '.type')?.errors?.required\"\r\n                    >Payment Type Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Transfer Mode </span>\r\n                </label>\r\n                <ng-select\r\n                  [items]=\"arrTransferMode\"\r\n                  bindLabel=\"payment_mode\"\r\n                  bindValue=\"payment_mode\"\r\n                  (change)=\"onTransferChange($event, i)\"\r\n                  dropdownPosition=\"bottom\"\r\n                  placeholder=\"Choose a Transfer Mode\"\r\n                  formControlName=\"transferMode\"\r\n                >\r\n                </ng-select>\r\n\r\n                <div\r\n                  *ngIf=\"\r\n                    submitted && paymentDetails.get(i + '.transferMode')?.errors\r\n                  \"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"\r\n                      paymentDetails.get(i + '.transferMode')?.errors?.required\r\n                    \"\r\n                    >Transfer Mode Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Transfer % </span>\r\n                </label>\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    paymentDetails.get(i + '.transferPercent')?.value > 0;\r\n                    else elseTemplate\r\n                  \"\r\n                >\r\n                  <input\r\n                    type=\"number\"\r\n                    class=\"form-control form-control-solid\"\r\n                    formControlName=\"transferPercentage\"\r\n                    placeholder=\"Percentage %\"\r\n                  />\r\n                </ng-container>\r\n                <ng-template #elseTemplate>\r\n                  <div class=\"form-control form-control-solid\">0</div>\r\n                </ng-template>\r\n              </div>\r\n\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Bank </span>\r\n                </label>\r\n                <ng-select\r\n                  [items]=\"arrBanks\"\r\n                  bindLabel=\"bankName\"\r\n                  bindValue=\"bankName\"\r\n                  dropdownPosition=\"bottom\"\r\n                  placeholder=\"Choose a Bank\"\r\n                  formControlName=\"bank\"\r\n                >\r\n                </ng-select>\r\n\r\n                <div\r\n                  *ngIf=\"submitted && paymentDetails.get(i + '.bank')?.errors\"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"paymentDetails.get(i + '.bank')?.errors?.required\"\r\n                    >Bank Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Amount </span>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  class=\"form-control form-control-solid\"\r\n                  placeholder=\"Amount\"\r\n                  formControlName=\"amount\"\r\n                />\r\n                <div\r\n                  class=\"text-sm text-orange-600\"\r\n                  *ngIf=\"\r\n                    paymentDetails.get(i + '.amount')?.value >\r\n                    f.totalAmount.value - f.paidAmount.value\r\n                  \"\r\n                >\r\n                  Amount is greater than Balance Amount\r\n                </div>\r\n\r\n                <div\r\n                  *ngIf=\"submitted && paymentDetails.get(i + '.amount')?.errors\"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"paymentDetails.get(i + '.amount')?.errors?.required\"\r\n                    >Amount Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"date\"> Date </label>\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control form-control-solid\"\r\n                  placeholder=\"Date\"\r\n                  formControlName=\"date\"\r\n                />\r\n\r\n                <div\r\n                  *ngIf=\"submitted && paymentDetails.get(i + '.date')?.errors\"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"paymentDetails.get(i + '.date')?.errors?.required\"\r\n                    >Date Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"desc\"> Description </label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control form-control-solid\"\r\n                  placeholder=\"Description\"\r\n                  formControlName=\"description\"\r\n                />\r\n\r\n                <div\r\n                  *ngIf=\"\r\n                    submitted && paymentDetails.get(i + '.description')?.errors\r\n                  \"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"\r\n                      paymentDetails.get(i + '.description')?.errors?.required\r\n                    \"\r\n                  >\r\n                    Description Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"desc\"> ACTION </label>\r\n                <div>\r\n                  <a\r\n                    class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm\"\r\n                    (click)=\"removeItem(i)\"\r\n                  >\r\n                    <span\r\n                      [inlineSVG]=\"\r\n                        './assets/media/icons/duotune/general/gen027.svg'\r\n                      \"\r\n                      class=\"svg-icon svg-icon-3 svg-icon-danger\"\r\n                    ></span>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- begin::Table -->\r\n          <!-- <table\r\n            class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\"\r\n          >\r\n            <thead>\r\n              <tr class=\"fw-bold text-muted\">\r\n                <th class=\"min-w-[200px]\">Payment Type</th>\r\n                <th class=\"min-w-[200px]\">Transfer Mode</th>\r\n                <th class=\"min-w-[200px]\">Transfer %</th>\r\n                <th class=\"min-w-[200px]\">Bank</th>\r\n                <th class=\"min-w-[120px]\">Amount</th>\r\n                <th class=\"min-w-[120px]\">Date</th>\r\n                <th class=\"min-w-[120px]\">Description</th>\r\n                <th class=\"min-w-[120px]\">ACTION</th>\r\n              </tr>\r\n            </thead> -->\r\n          <!-- end::Table head -->\r\n          <!-- begin::Table body -->\r\n          <!-- <tbody formArrayName=\"paymentDetails\">\r\n              <tr\r\n                *ngFor=\"let skill of paymentDetails.controls; let i = index\"\r\n                [formGroupName]=\"i\"\r\n              >\r\n                <td>\r\n                  <ng-select\r\n                    [items]=\"arrPaymentType\"\r\n                    bindLabel=\"type\"\r\n                    bindValue=\"sentType\"\r\n                    dropdownPosition=\"bottom\"\r\n                    (change)=\"onPaymentChange($event, i)\"\r\n                    placeholder=\"Choose a Payment Type\"\r\n                    formControlName=\"type\"\r\n                  >\r\n                  </ng-select>\r\n                  <div\r\n                    *ngIf=\"paymentDetails.get(i + '.mode')?.value\"\r\n                    class=\"mt-1 text-{{\r\n                      paymentDetails.get(i + '.mode')?.value === 'Credit'\r\n                        ? 'green'\r\n                        : 'red'\r\n                    }}-600\"\r\n                  >\r\n                    {{\r\n                      paymentDetails.get(i + \".mode\")?.value === \"Credit\"\r\n                        ? \"Pay from Supplier\"\r\n                        : paymentDetails.get(i + \".mode\")?.value === \"Debit\"\r\n                        ? \"Pay to Supplier\"\r\n                        : \"\"\r\n                    }}\r\n                  </div>\r\n\r\n                  <div\r\n                    *ngIf=\"submitted && paymentDetails.get(i + '.type')?.errors\"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"paymentDetails.get(i + '.type')?.errors?.required\"\r\n                      >Payment Type Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <ng-select\r\n                    [items]=\"arrTransferMode\"\r\n                    bindLabel=\"payment_mode\"\r\n                    bindValue=\"payment_mode\"\r\n                    (change)=\"onTransferChange($event, i)\"\r\n                    dropdownPosition=\"bottom\"\r\n                    placeholder=\"Choose a Transfer Mode\"\r\n                    formControlName=\"transferMode\"\r\n                  >\r\n                  </ng-select>\r\n\r\n                  <div\r\n                    *ngIf=\"\r\n                      submitted &&\r\n                      paymentDetails.get(i + '.transferMode')?.errors\r\n                    \"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"\r\n                        paymentDetails.get(i + '.transferMode')?.errors\r\n                          ?.required\r\n                      \"\r\n                      >Transfer Mode Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <ng-container\r\n                    *ngIf=\"\r\n                      paymentDetails.get(i + '.transferPercent')?.value > 0;\r\n                      else elseTemplate\r\n                    \"\r\n                  >\r\n                    <input\r\n                      type=\"number\"\r\n                      class=\"form-control form-control-solid\"\r\n                      formControlName=\"transferPercentage\"\r\n                      placeholder=\"Percentage %\"\r\n                    />\r\n                  </ng-container>\r\n                  <ng-template #elseTemplate>\r\n                    <div class=\"form-control form-control-solid\">0</div>\r\n                  </ng-template>\r\n                </td>\r\n                <td>\r\n                  <ng-select\r\n                    [items]=\"arrBanks\"\r\n                    bindLabel=\"bankName\"\r\n                    bindValue=\"bankName\"\r\n                    dropdownPosition=\"bottom\"\r\n                    placeholder=\"Choose a Bank\"\r\n                    formControlName=\"bank\"\r\n                  >\r\n                  </ng-select>\r\n\r\n                  <div\r\n                    *ngIf=\"submitted && paymentDetails.get(i + '.bank')?.errors\"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"paymentDetails.get(i + '.bank')?.errors?.required\"\r\n                      >Bank Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    class=\"form-control form-control-solid\"\r\n                    placeholder=\"Amount\"\r\n                    formControlName=\"amount\"\r\n                  />\r\n                  <div\r\n                    class=\"text-sm text-orange-600\"\r\n                    *ngIf=\"\r\n                      paymentDetails.get(i + '.amount')?.value >\r\n                      f.totalAmount.value - f.paidAmount.value\r\n                    \"\r\n                  >\r\n                    Amount is greater than Balance Amount\r\n                  </div>\r\n\r\n                  <div\r\n                    *ngIf=\"\r\n                      submitted && paymentDetails.get(i + '.amount')?.errors\r\n                    \"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"\r\n                        paymentDetails.get(i + '.amount')?.errors?.required\r\n                      \"\r\n                      >Amount Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"date\"\r\n                    class=\"form-control form-control-solid\"\r\n                    placeholder=\"Date\"\r\n                    formControlName=\"date\"\r\n                  />\r\n\r\n                  <div\r\n                    *ngIf=\"submitted && paymentDetails.get(i + '.date')?.errors\"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"paymentDetails.get(i + '.date')?.errors?.required\"\r\n                      >Date Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control form-control-solid\"\r\n                    placeholder=\"Description\"\r\n                    formControlName=\"description\"\r\n                  />\r\n\r\n                  <div\r\n                    *ngIf=\"\r\n                      submitted &&\r\n                      paymentDetails.get(i + '.description')?.errors\r\n                    \"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"\r\n                        paymentDetails.get(i + '.description')?.errors?.required\r\n                      \"\r\n                    >\r\n                      Description Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n\r\n                <td>\r\n                  <a\r\n                    class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm\"\r\n                    (click)=\"removeItem(i)\"\r\n                  >\r\n                    <span\r\n                      [inlineSVG]=\"\r\n                        './assets/media/icons/duotune/general/gen027.svg'\r\n                      \"\r\n                      class=\"svg-icon svg-icon-3 svg-icon-danger\"\r\n                    ></span>\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            </tbody> \r\n          </table> -->\r\n          <!-- end::Table -->\r\n        </div>\r\n\r\n        <div\r\n          class=\"grid grid-cols-2 md:grid-cols-6 gap-2 mt-4\"\r\n          *ngIf=\"paymentDetails.controls.length\"\r\n        >\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <button class=\"btn btn-light-primary\" (click)=\"resetForm()\">\r\n            Clear\r\n          </button>\r\n          <button\r\n            class=\"btn btn-primary\"\r\n            [disabled]=\"isLoading\"\r\n            (click)=\"onSubmit()\"\r\n          >\r\n            Create\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <!-- end::Body -->\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { InlineSVGModule } from 'ng-inline-svg-2';\r\nimport { WidgetsModule } from 'src/app/theme/partials';\r\nimport { CreateCustomerPaymentComponent } from './create-customer-payment/create-customer-payment.component';\r\nimport { ManageCustomerPaymentComponent } from './manage-customer-payment/manage-customer-payment.component';\r\nimport { UpdateCustomerPaymentComponent } from './update-customer-payment/update-customer-payment.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ManageCustomerPaymentComponent,\r\n    CreateCustomerPaymentComponent,\r\n    UpdateCustomerPaymentComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgbTooltipModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    InlineSVGModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: ManageCustomerPaymentComponent,\r\n      },\r\n      {\r\n        path: 'create',\r\n        component: CreateCustomerPaymentComponent,\r\n      },\r\n      {\r\n        path: 'update/:id/:type',\r\n        component: UpdateCustomerPaymentComponent,\r\n      },\r\n    ]),\r\n    WidgetsModule,\r\n  ],\r\n})\r\nexport class PaymentModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { ExportToExcelService } from 'src/app/core/services/common/export-to-excel.service';\r\nimport { CustomerService } from 'src/app/core/services/customer/customer.service';\r\nimport { PagerService } from 'src/app/core/services/pagination/pager.service';\r\n@Component({\r\n  selector: 'app-manage-customer-payment',\r\n  templateUrl: './manage-customer-payment.component.html',\r\n  styleUrls: ['./manage-customer-payment.component.scss'],\r\n})\r\nexport class ManageCustomerPaymentComponent implements OnInit {\r\n  arrCustomer: any = [];\r\n  arrAllCustomers: any = [];\r\n  // pagination\r\n  pager: any = {};\r\n  intTotalCount = 0;\r\n  intPageLimit = 50;\r\n  intSkipCount = 0;\r\n  fetchLoading = false;\r\n\r\n  myForm: FormGroup;\r\n\r\n  constructor(\r\n    private customerService: CustomerService,\r\n    private exportToExcelService: ExportToExcelService,\r\n    private formBuilder: FormBuilder,\r\n    private pageServiceObj: PagerService\r\n  ) {\r\n    this.myForm = this.formBuilder.group({\r\n      customer: [null],\r\n      supplier: [''],\r\n      supplierCode: [''],\r\n      phone: [''],\r\n      // fromDate: [''],\r\n      // toDate: [''],\r\n      paymentStatus: ['PENDING'],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getCustomerPayments();\r\n    this.getAllCustomerAll();\r\n  }\r\n\r\n  setPage(page) {\r\n    if (page < 1 || page > this.pager.totalPages) {\r\n      return;\r\n    }\r\n    this.pager = this.pageServiceObj.getPager(\r\n      this.intTotalCount,\r\n      page,\r\n      this.intPageLimit\r\n    );\r\n    this.getCustomerPayments();\r\n  }\r\n\r\n  getAllCustomerAll() {\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      fkCustomerId: '',\r\n      strName: '',\r\n      cust_Code: '',\r\n      fromDate: '',\r\n      endDate: '',\r\n      intSkipCount: '0',\r\n      intPageLimit: '1000000',\r\n    };\r\n    this.customerService.getAllCustomer(obj).subscribe((res) => {\r\n      this.fetchLoading = false;\r\n      if (res.success) {\r\n        this.arrAllCustomers = res.data.map((d) => {\r\n          return {\r\n            ...d,\r\n            displayName: d.cust_Code + ' - ' + d.strName,\r\n          };\r\n        });\r\n      } else {\r\n        this.arrAllCustomers = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  getFromCount() {\r\n    return this.intPageLimit * (this.pager.currentPage - 1) + 1;\r\n  }\r\n\r\n  getToCount() {\r\n    return (\r\n      this.intPageLimit * (this.pager.currentPage - 1) + this.arrCustomer.length\r\n    );\r\n  }\r\n  onCustomerChange() {\r\n    const supplier = this.arrAllCustomers.find((e) => {\r\n      return e.cust_Code === this.myForm.value.customer;\r\n    });\r\n\r\n    this.myForm.patchValue({\r\n      supplier: supplier.supplier_Name,\r\n      supplierCode: supplier.sup_Code,\r\n    });\r\n  }\r\n  getCustomerPayments() {\r\n    let skipCount = this.intSkipCount;\r\n    if (this.pager.intSkipCount) {\r\n      skipCount = this.pager.intSkipCount;\r\n    }\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      intSkipCount: skipCount,\r\n      intPageLimit: this.intPageLimit,\r\n      fkCustomerId: '',\r\n      cust_Code: this.myForm.value.customer,\r\n      sup_Code: this.myForm.value.supplierCode,\r\n      strPhone: this.myForm.value.phone,\r\n      strName: '',\r\n      payment_Status: this.myForm.value.paymentStatus,\r\n      strCountry: '',\r\n      // fromDate: this.myForm.value.fromDate,\r\n      // endDate: this.myForm.value.toDate,\r\n    };\r\n\r\n    this.fetchLoading = true;\r\n    this.customerService.getAllCustomerPayment(obj).subscribe((res) => {\r\n      this.fetchLoading = false;\r\n      if (res.success) {\r\n        this.arrCustomer = res.data;\r\n\r\n        this.intTotalCount = res.count;\r\n\r\n        this.pager = this.pageServiceObj.getPager(\r\n          this.intTotalCount,\r\n          this.pager.currentPage,\r\n          this.intPageLimit\r\n        );\r\n      } else {\r\n        this.arrCustomer = [];\r\n        // alert(res.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      intSkipCount: 0,\r\n      intPageLimit: 1000000,\r\n      fkCustomerId: '',\r\n      cust_Code: this.myForm.value.customer,\r\n      strPhone: this.myForm.value.phone,\r\n      strName: '',\r\n      sup_Code: this.myForm.value.supplierCode,\r\n      payment_Status: this.myForm.value.paymentStatus,\r\n      strCountry: '',\r\n      // fromDate: this.myForm.value.fromDate,\r\n      // endDate: this.myForm.value.toDate,\r\n    };\r\n\r\n    this.fetchLoading = true;\r\n    this.customerService.getAllCustomerPayment(obj).subscribe((res) => {\r\n      this.fetchLoading = false;\r\n      if (res.success) {\r\n        let jsonData: any = [];\r\n\r\n        res.data.forEach((e) => {\r\n          e.paymentDetails.forEach((payment, i) => {\r\n            let obj: any = {};\r\n            if (i === 0)\r\n              obj = {\r\n                'Customer Code': e.cust_Code,\r\n                'Customer Name': e.customerName,\r\n                Phone: e.customerPhone,\r\n                Country: e.customerCountry,\r\n                Refund: e.Refund_Amount,\r\n                'Paid Amount': e.Total_Paid_Amount,\r\n                'G-Voucher Credit': e.Service_Credit_Amount,\r\n                'G-Voucher Debit': e.Service_Debit_Amount,\r\n                'Total Amount': e.Total_Amount,\r\n                Balance: e.Total_Amount - e.Total_Paid_Amount,\r\n                'Created Admin': e.createdAdminName,\r\n                'Created At': moment(e.createdAt).format('DD-MM-YYYY'),\r\n                'Updated Admin': e.updatedAdminName,\r\n                'Updated At': moment(e.updatedAt).format('DD-MM-YYYY'),\r\n              };\r\n            else\r\n              obj = {\r\n                'Customer Code': '',\r\n                'Customer Name': '',\r\n                Phone: '',\r\n                Country: '',\r\n                Refund: '',\r\n                'Paid Amount': '',\r\n                'G-Voucher Credit': '',\r\n                'G-Voucher Debit': '',\r\n                'Total Amount': '',\r\n                Balance: '',\r\n                'Created Admin': '',\r\n                'Created At': '',\r\n                'Updated Admin': '',\r\n                'Updated At': '',\r\n              };\r\n            obj['Payment Code'] = payment.payment_Code;\r\n            obj['Payment Type'] = payment.type;\r\n            obj['Transfer Mode'] = payment.transferMode;\r\n            obj['Bank'] = payment.bank;\r\n            obj['Payment Status'] = payment.paymentStatus;\r\n            obj['Amount'] = payment.amount;\r\n            obj['Date'] = moment(payment.date).format('DD-MM-YYYY');\r\n            obj['Description'] = payment.description;\r\n            jsonData.push(obj);\r\n          });\r\n        });\r\n\r\n        // console.log('jsonData', jsonData);\r\n        this.exportToExcelService.exportAsExcelFile(\r\n          jsonData,\r\n          'Customer Payments '\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"text-right mb-3\">\r\n  <button class=\"btn btn-primary btn-sm\" routerLink=\"/customer-payment/create\">\r\n    Create Payment\r\n  </button>\r\n</div>\r\n\r\n<div class=\"card mb-3\">\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"myForm\">\r\n      <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\r\n        <div>\r\n          <label for=\"Customer\">\r\n            <span class=\"\"> Customer </span>\r\n          </label>\r\n          <ng-select\r\n            [items]=\"arrAllCustomers\"\r\n            bindLabel=\"displayName\"\r\n            bindValue=\"cust_Code\"\r\n            (change)=\"onCustomerChange()\"\r\n            formControlName=\"customer\"\r\n            placeholder=\"Start Typing...\"\r\n          >\r\n          </ng-select>\r\n        </div>\r\n        <div>\r\n          <label for=\"customer\">\r\n            <span class=\"\"> Supplier </span>\r\n          </label>\r\n          <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n            {{ myForm.value.supplier }}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label for=\"phone\">\r\n            <span class=\"\"> Phone Number </span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"phone\"\r\n            placeholder=\"Phone Number\"\r\n            formControlName=\"phone\"\r\n            class=\"form-control form-control-solid\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label for=\"status\">\r\n            <span class=\"\"> Payment Status </span>\r\n          </label>\r\n          <div class=\"flex gap-3 py-3\">\r\n            <div\r\n              class=\"form-check form-check-custom form-check-warning form-check-solid\"\r\n            >\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                value=\"PENDING\"\r\n                formControlName=\"paymentStatus\"\r\n                id=\"pending\"\r\n                checked=\"checked\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"pending\"> Pending </label>\r\n            </div>\r\n            <div\r\n              class=\"form-check form-check-custom form-check-success form-check-solid\"\r\n            >\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                value=\"VERIFY\"\r\n                formControlName=\"paymentStatus\"\r\n                id=\"verified\"\r\n              />\r\n              <label class=\"form-check-label\" for=\"verified\"> Verified </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div>\r\n          <label for=\"fromDate\">\r\n            <span class=\"\"> From Date </span>\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"fromDate\"\r\n            formControlName=\"fromDate\"\r\n            class=\"form-control form-control-solid\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label for=\"toDate\">\r\n            <span class=\"\"> To Date </span>\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"toDate\"\r\n            formControlName=\"toDate\"\r\n            class=\"form-control form-control-solid\"\r\n          />\r\n        </div> -->\r\n      </div>\r\n    </form>\r\n    <div class=\"text-right\">\r\n      <button class=\"btn btn-primary btn-sm\" (click)=\"getCustomerPayments()\">\r\n        <i class=\"bi bi-search\"></i>\r\n        Search\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"text-right mb-3\">\r\n  <button class=\"btn btn-secondary btn-sm\" (click)=\"downloadExcel()\">\r\n    <i class=\"bi bi-cloud-download\"></i>\r\n    Download\r\n  </button>\r\n</div>\r\n<!--begin::Row-->\r\n<div class=\"row g-5 g-xl-10\">\r\n  <div class=\"col-md-12 col-lg-12 md-m-5\">\r\n    <div class=\"card\">\r\n      <!-- begin::Body -->\r\n      <div class=\"card-body\">\r\n        <!-- begin::Table container -->\r\n\r\n        <div\r\n          class=\"table-responsive\"\r\n          *ngIf=\"arrCustomer.length > 0; else noDataTemplate\"\r\n        >\r\n          <!-- begin::Table -->\r\n          <table\r\n            class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\"\r\n          >\r\n            <!-- begin::Table head -->\r\n            <thead>\r\n              <tr class=\"fw-bold text-muted\">\r\n                <th class=\"min-w-130px\">Customer Code</th>\r\n                <th class=\"min-w-130px text-left\">Customer Name</th>\r\n                <th class=\"min-w-130px\">Phone</th>\r\n                <th class=\"min-w-130px\">Country</th>\r\n                <th class=\"min-w-130px\">Total Amount</th>\r\n                <th class=\"min-w-130px\">Paid Amount</th>\r\n                <th class=\"min-w-130px\">Refund</th>\r\n                <th class=\"min-w-130px\">G-Voucher Credit</th>\r\n                <th class=\"min-w-130px\">G-Voucher Debit</th>\r\n                <th class=\"min-w-130px\">Balance</th>\r\n                <th class=\"min-w-130px\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <!-- end::Table head -->\r\n            <!-- begin::Table body -->\r\n            <tbody>\r\n              <tr *ngFor=\"let customer of arrCustomer\">\r\n                <td>\r\n                  {{ customer.cust_Code }}\r\n                </td>\r\n                <td class=\"text-left\">\r\n                  <p class=\"m-0 text-base font-bold\">\r\n                    {{ customer.customerName }}\r\n                  </p>\r\n                  <p class=\"m-0\">{{ customer.phone }}</p>\r\n                </td>\r\n                <td>\r\n                  {{ customer.customerPhone }}\r\n                </td>\r\n                <td>\r\n                  {{ customer.customerCountry }}\r\n                </td>\r\n                <td>\r\n                  {{ customer.Total_Amount }}\r\n                </td>\r\n                <td>\r\n                  {{ customer.Total_Paid_Amount }}\r\n                </td>\r\n                <td>\r\n                  {{ customer.Refund_Amount }}\r\n                </td>\r\n                <td>\r\n                  {{ customer.Service_Credit_Amount }}\r\n                </td>\r\n                <td>\r\n                  {{ customer.Service_Debit_Amount }}\r\n                </td>\r\n                <td>\r\n                  {{ customer.Total_Amount - customer.Total_Paid_Amount }}\r\n                </td>\r\n                <td>\r\n                  <div class=\"d-flex justify-content-start flex-shrink-0\">\r\n                    <a\r\n                      class=\"btn btn-icon bg-light-primary btn-active-color-primary btn-sm me-1\"\r\n                      [routerLink]=\"[\r\n                        '/customer-payment/update',\r\n                        customer.fkCustomerId,\r\n                        myForm.value.paymentStatus\r\n                      ]\"\r\n                    >\r\n                      <span\r\n                        [inlineSVG]=\"\r\n                          './assets/media/icons/duotune/general/gen008.svg'\r\n                        \"\r\n                        class=\"svg-icon svg-icon-3 svg-icon-primary\"\r\n                      ></span>\r\n                    </a>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <!-- end::Table body -->\r\n          </table>\r\n          <!-- end::Table -->\r\n        </div>\r\n        <!-- end::Table container -->\r\n\r\n        <!-- begin::Empty -->\r\n        <ng-template #noDataTemplate>\r\n          <ng-container *ngIf=\"fetchLoading; else elseTemplate\">\r\n            <div class=\"d-flex flex-column align-items-center\">\r\n              <!-- begin::Illustration -->\r\n              <div class=\"text-center px-4\">\r\n                <img\r\n                  src=\"./assets/media/illustrations/dozzy-1/5.png\"\r\n                  class=\"mw-100 mh-300px animate-pulse\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <!-- end::Illustration -->\r\n\r\n              <!-- begin::Message -->\r\n              <div class=\"fw-bold text-xl text-gray-600 text-center pt-15\">\r\n                <span\r\n                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\r\n                ></span>\r\n                Loading Data...\r\n              </div>\r\n              <!-- end::Message -->\r\n            </div>\r\n          </ng-container>\r\n          <ng-template #elseTemplate>\r\n            <div class=\"d-flex flex-column align-items-center\">\r\n              <!-- begin::Illustration -->\r\n              <div class=\"text-center px-4\">\r\n                <img\r\n                  src=\"./assets/media/illustrations/sketchy-1/5.png\"\r\n                  class=\"mw-100 mh-300px\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <!-- end::Illustration -->\r\n\r\n              <!-- begin::Message -->\r\n              <div class=\"fw-bold fs-6 text-gray-600 text-center pt-15\">\r\n                No Data Found\r\n              </div>\r\n              <!-- end::Message -->\r\n            </div>\r\n          </ng-template>\r\n        </ng-template>\r\n        <!-- end::Empty -->\r\n        <!-- begin::Body -->\r\n      </div>\r\n      <!-- end::Card -->\r\n\r\n      <div\r\n        class=\"flex justify-center md:justify-between flex-col md:flex-row p-5\"\r\n        *ngIf=\"arrCustomer.length > 0\"\r\n      >\r\n        <div class=\"fs-6 fw-bold text-gray-700 mb-3 md:mb-0 text-center\">\r\n          Showing {{ getFromCount() }} to {{ getToCount() }} of\r\n          {{ intTotalCount }}\r\n          entries\r\n        </div>\r\n\r\n        <ul class=\"pagination\" *ngIf=\"pager.pages && pager.pages.length\">\r\n          <li\r\n            class=\"page-item previous\"\r\n            [ngClass]=\"{ disabled: pager.currentPage === 1 }\"\r\n          >\r\n            <a\r\n              class=\"page-link cursor-pointer\"\r\n              (click)=\"setPage(pager.currentPage - 1)\"\r\n            >\r\n              <i class=\"previous\"></i>\r\n            </a>\r\n          </li>\r\n\r\n          <li\r\n            class=\"page-item\"\r\n            *ngFor=\"let page of pager.pages\"\r\n            [ngClass]=\"{ active: pager.currentPage === page }\"\r\n          >\r\n            <a class=\"page-link cursor-pointer\" (click)=\"setPage(page)\">\r\n              {{ page }}\r\n            </a>\r\n          </li>\r\n\r\n          <li\r\n            class=\"page-item next\"\r\n            [ngClass]=\"{\r\n              disabled: pager.currentPage === pager.totalPages\r\n            }\"\r\n          >\r\n            <a\r\n              class=\"page-link cursor-pointer\"\r\n              (click)=\"setPage(pager.currentPage + 1)\"\r\n            >\r\n              <i class=\"next\"></i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <!--end::Col-->\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CustomerService } from 'src/app/core/services/customer/customer.service';\r\nimport { SupplierService } from 'src/app/core/services/supplier/supplier.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-update-customer-payment',\r\n  templateUrl: './update-customer-payment.component.html',\r\n  styleUrls: ['./update-customer-payment.component.scss'],\r\n})\r\nexport class UpdateCustomerPaymentComponent {\r\n  customerId = '';\r\n  paymentId = '';\r\n  type = '';\r\n  fetchLoading = false;\r\n  editIndex: any;\r\n  arrAllCustomers: any = [];\r\n  arrTransferMode: any = [];\r\n  arrBanks: any = [];\r\n  arrPaymentType: any = [\r\n    {\r\n      type: 'G-Voucher (Credit)',\r\n      sentType: 'SERVICE',\r\n      mode: 'Credit',\r\n    },\r\n    {\r\n      type: 'G-Voucher (Debit)',\r\n      sentType: 'SERVICE',\r\n      mode: 'Debit',\r\n    },\r\n    {\r\n      type: 'PAID',\r\n      sentType: 'PAID',\r\n      mode: '',\r\n    },\r\n    {\r\n      type: 'REFUND',\r\n      sentType: 'REFUND',\r\n      mode: 'REFUND',\r\n    },\r\n  ];\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private customerService: CustomerService,\r\n    private supplierService: SupplierService,\r\n    private toastr: ToastrService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n    activatedRoute.params.subscribe((params) => {\r\n      this.customerId = params.id;\r\n      this.type = params.type;\r\n    });\r\n    this.myForm = this.formBuilder.group({\r\n      customerCode: [null, Validators.required],\r\n      customerName: [null, Validators.required],\r\n      Total_Amount: ['0', Validators.required],\r\n      Refund_Amount: ['0', Validators.required],\r\n      Total_Paid_Amount: ['0', Validators.required],\r\n      Service_Credit_Amount: ['0', Validators.required],\r\n      Service_Debit_Amount: ['0', Validators.required],\r\n      paymentDetails: this.formBuilder.array([]),\r\n    });\r\n\r\n    this.getMetaData();\r\n    this.getMetaDataBank();\r\n  }\r\n  getMetaDataBank() {\r\n    const obj = {\r\n      metaType: 'BANK', // Amentities transfermod\r\n    };\r\n\r\n    this.supplierService.metaData(obj).subscribe((data) => {\r\n      if (data.success) {\r\n        this.arrBanks = data.data;\r\n        this.getCustomer();\r\n        // this.getAllCustomerAll();\r\n      } else {\r\n        this.arrBanks = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  get paymentDetails(): FormArray {\r\n    return this.myForm.get('paymentDetails') as FormArray;\r\n  }\r\n  onPaymentChange(event, i) {\r\n    this.paymentDetails.at(i).patchValue({ mode: event.mode });\r\n  }\r\n\r\n  newPaymentDetails(): FormGroup {\r\n    return this.formBuilder.group({\r\n      id: [''],\r\n      type: [null, Validators.required],\r\n      typeView: [null, Validators.required],\r\n      payment_Code: [''],\r\n      mode: [''],\r\n      transferMode: [null, Validators.required],\r\n      transferPercent: [''],\r\n      transferPercentage: [''],\r\n      supplierName: [''],\r\n      actualAmount: [''],\r\n      bank: [null],\r\n      verifyDate: [''],\r\n      amount: ['', Validators.required],\r\n      date: ['', Validators.required],\r\n      description: [''],\r\n    });\r\n  }\r\n\r\n  removeItem(i: number, item: any) {\r\n    Swal.fire({\r\n      title: 'Do you want to remove?',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Delete',\r\n      reverseButtons: true,\r\n      confirmButtonColor: '#dc3741',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const obj = {\r\n          strLoginUserId: localStorage.getItem('userId'),\r\n          fkPaymentId: item.id,\r\n        };\r\n        this.customerService.deleteCustomerPayment(obj).subscribe((res) => {\r\n          if (res.success) this.paymentDetails.removeAt(i);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  onTransferChange(val, i) {\r\n    this.paymentDetails.at(i).patchValue({ transferPercent: val.percentage });\r\n  }\r\n\r\n  addItem() {\r\n    if (\r\n      this.f.customerCode.value === '' ||\r\n      this.f.customerCode.value === null\r\n    ) {\r\n      this.toastr.warning('', 'Choose a Customer');\r\n      return;\r\n    }\r\n    this.paymentDetails.push(this.newPaymentDetails());\r\n  }\r\n  getCustomer() {\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      intSkipCount: 0,\r\n      intPageLimit: 1,\r\n      fkCustomerId: this.customerId,\r\n      payment_Status: this.type, //or verify\r\n    };\r\n\r\n    this.fetchLoading = true;\r\n    this.customerService.getAllCustomerPayment(obj).subscribe((res) => {\r\n      this.fetchLoading = false;\r\n      if (res.success) {\r\n        this.paymentId = res.data[0]._id;\r\n        this.patchValue(res.data[0]);\r\n      } else {\r\n        this.toastr.error('Error While fetching data');\r\n      }\r\n    });\r\n  }\r\n\r\n  patchValue(customer) {\r\n    this.myForm.patchValue({\r\n      customerCode: customer.cust_Code,\r\n      customerName: customer.customerName,\r\n      Total_Amount: customer.Total_Amount,\r\n      Refund_Amount: customer.Refund_Amount,\r\n      Service_Credit_Amount: customer.Service_Credit_Amount,\r\n      Service_Debit_Amount: customer.Service_Debit_Amount,\r\n      Total_Paid_Amount: customer.Total_Paid_Amount,\r\n    });\r\n\r\n    customer.payment_Details.forEach((item: any, i) => {\r\n      this.addItem();\r\n      this.paymentDetails.at(i).patchValue({\r\n        id: item.payment_id,\r\n        type:\r\n          item.mode === 'Credit'\r\n            ? 'SERVICE'\r\n            : item.mode === 'Debit'\r\n            ? 'SERVICE'\r\n            : item.type === 'PAID'\r\n            ? 'PAID'\r\n            : item.type === 'REFUND'\r\n            ? 'REFUND'\r\n            : '',\r\n        typeView:\r\n          item.mode === 'Credit'\r\n            ? 'G-Voucher (Credit)'\r\n            : item.mode === 'Debit'\r\n            ? 'G-Voucher (Debit)'\r\n            : item.type === 'PAID'\r\n            ? 'PAID'\r\n            : item.type === 'REFUND'\r\n            ? 'REFUND'\r\n            : '',\r\n        payment_Code: item.payment_Code,\r\n        mode:\r\n          item.mode !== '' ? item.mode : item.type === 'REFUND' ? 'REFUND' : '',\r\n        transferMode: item.transferMode,\r\n        transferPercent: item.transferPercent,\r\n        transferPercentage: item.transferPercentage || 0,\r\n        actualAmount: item.actualAmount,\r\n        supplierName: item.supplierName,\r\n        bank: item.bank,\r\n        verifyDate: item.verifyDate,\r\n        amount: item.amount,\r\n        date: moment(item.date).format('YYYY-MM-DD'),\r\n        description: item.description,\r\n      });\r\n    });\r\n  }\r\n\r\n  // getAllCustomerAll() {\r\n  //   const obj = {\r\n  //     strLoginUserId: localStorage.getItem('userId'),\r\n  //     fkCustomerId: this.customerId,\r\n  //     strName: '',\r\n  //     cust_Code: '',\r\n  //     fromDate: '',\r\n  //     endDate: '',\r\n  //     intSkipCount: '0',\r\n  //     intPageLimit: '1',\r\n  //   };\r\n  //   this.customerService.getAllCustomer(obj).subscribe((res) => {\r\n  //     if (res.success) {\r\n  //       this.myForm.patchValue({ customer: res.data[0] });\r\n  //       this.getCustomer();\r\n  //     } else {\r\n  //       this.toastr.error('Error While fetching data');\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  resetForm() {\r\n    this.myForm.reset();\r\n    this.submitted = false;\r\n  }\r\n\r\n  getMetaData() {\r\n    const obj = {\r\n      metaType: 'transfermod', // Amentities transfermod\r\n    };\r\n\r\n    this.supplierService.metaData(obj).subscribe((data) => {\r\n      if (data.success) {\r\n        this.arrTransferMode = data.data;\r\n      } else {\r\n        this.arrTransferMode = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  editPayment(i) {\r\n    this.editIndex = i;\r\n  }\r\n\r\n  updatePayment(i) {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.myForm.value.paymentDetails.map((paymentDetails) => {\r\n      // if (paymentDetails.transferPercent > 0) {\r\n      //   paymentDetails.amount =\r\n      //     paymentDetails.amount -\r\n      //     paymentDetails.amount * (paymentDetails.transferPercent / 100);\r\n      // }\r\n\r\n      return {\r\n        amount: paymentDetails.amount,\r\n        actualAmount: paymentDetails.amount,\r\n        bank: paymentDetails.bank,\r\n        mode: paymentDetails.mode,\r\n        date: paymentDetails.date,\r\n        description: paymentDetails.description,\r\n        transferMode: paymentDetails.transferMode,\r\n        transferPercentage: paymentDetails.transferPercentage,\r\n        type: paymentDetails.type,\r\n      };\r\n    });\r\n\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      fkPaymentId: this.myForm.value.paymentDetails[i].id,\r\n      payment_Details: [this.myForm.value.paymentDetails[i]],\r\n    };\r\n\r\n    // console.log('obj', obj);\r\n    this.customerService.updateCustomerPayment(obj).subscribe((res) => {\r\n      if (res.success) {\r\n        Swal.fire({\r\n          title: 'Success',\r\n          text: 'Successfully Updated Customer Payment',\r\n          icon: 'success',\r\n        }).then((value) => {\r\n          if (value) {\r\n            window.location.reload();\r\n            // this.myForm.reset();\r\n            // this.paymentDetails.removeAt(i);\r\n\r\n            // this.submitted = false;\r\n            // this.editIndex = '';\r\n            // this.getCustomer();\r\n            // this.router.navigate(['/customer-payment']);\r\n          }\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: res.message,\r\n          icon: 'error',\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!--begin::Col-->\r\n<div class=\"col-md-12 col-lg-12 md-m-5\">\r\n  <div class=\"card\">\r\n    <!-- begin::Header -->\r\n    <!-- <div class=\"card-header border-0\">\r\n      <h3 class=\"card-title fw-bold text-dark\">Create Customer Package</h3>\r\n    </div> -->\r\n    <!-- end::Header -->\r\n    <!-- begin::Body -->\r\n    <div class=\"card-body\">\r\n      <h3\r\n        class=\"fw-bold mb-3 {{\r\n          type === 'VERIFY' ? 'text-green-500' : 'text-orange-500'\r\n        }}\"\r\n      >\r\n        {{ type === \"VERIFY\" ? \"Verified\" : \"Pending\" }} Payments\r\n      </h3>\r\n      <!-- begin::Item -->\r\n      <form [formGroup]=\"myForm\">\r\n        <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\r\n          <div>\r\n            <label for=\"name\">\r\n              <span class=\"required\"> Customer Name </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.customerCode.value }} -\r\n              {{ f.customerName.value }}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> Total Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.Total_Amount.value }}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> Total Paid Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.Total_Paid_Amount.value }}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> Balance Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.Total_Amount.value - f.Total_Paid_Amount.value }}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> Refund Amount Received </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.Refund_Amount.value }}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> G-Voucher Credit Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.Service_Credit_Amount.value }}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> G-Voucher Debit Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.Service_Debit_Amount.value }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- <div class=\"col-12 text-right my-3\">\r\n          <button class=\"btn btn-primary btn-sm\" (click)=\"addItem()\">\r\n            <i class=\"bi bi-plus\"></i>\r\n            Add Payment\r\n          </button>\r\n        </div> -->\r\n\r\n        <div *ngIf=\"paymentDetails.controls.length\" class=\"mt-5\">\r\n          <div formArrayName=\"paymentDetails\" class=\"divide-y\">\r\n            <div\r\n              *ngFor=\"let skill of paymentDetails.controls; let i = index\"\r\n              [formGroupName]=\"i\"\r\n              class=\"grid grid-cols-6 max-xl:grid-cols-4 max-lg:grid-cols-4 max-md:grid-cols-2 max-sm:grid-cols-1 gap-3 py-3 mb-5\"\r\n            >\r\n              <!-- class=\"flex gap-3 mb-3 justify-between overflow-scroll\" -->\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Payment Code </span>\r\n                </label>\r\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                  {{ paymentDetails.get(i + \".payment_Code\")?.value }}\r\n                </div>\r\n              </div>\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Payment Type </span>\r\n                </label>\r\n                <ng-select\r\n                  [items]=\"arrPaymentType\"\r\n                  bindLabel=\"type\"\r\n                  bindValue=\"sentType\"\r\n                  dropdownPosition=\"bottom\"\r\n                  (change)=\"onPaymentChange($event, i)\"\r\n                  placeholder=\"Choose a Payment Type\"\r\n                  formControlName=\"type\"\r\n                  *ngIf=\"editIndex === i\"\r\n                >\r\n                </ng-select>\r\n\r\n                <div\r\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                  *ngIf=\"editIndex !== i\"\r\n                >\r\n                  {{ paymentDetails.get(i + \".typeView\")?.value }}\r\n                </div>\r\n\r\n                <div\r\n                  class=\"text-sm text-gray-700 mt-1\"\r\n                  *ngIf=\"\r\n                    paymentDetails.get(i + '.typeView')?.value === 'REFUND'\r\n                  \"\r\n                >\r\n                  Refund from\r\n                  {{ paymentDetails.get(i + \".supplierName\")?.value }}\r\n                </div>\r\n                <div\r\n                  *ngIf=\"paymentDetails.get(i + '.mode')?.value\"\r\n                  class=\"mt-1 text-{{\r\n                    paymentDetails.get(i + '.mode')?.value === 'Credit'\r\n                      ? 'green'\r\n                      : 'red'\r\n                  }}-600\"\r\n                >\r\n                  {{\r\n                    paymentDetails.get(i + \".mode\")?.value === \"Credit\"\r\n                      ? \"Pay from Supplier\"\r\n                      : paymentDetails.get(i + \".mode\")?.value === \"Debit\"\r\n                      ? \"Pay to Supplier\"\r\n                      : \"\"\r\n                  }}\r\n                </div>\r\n\r\n                <div\r\n                  *ngIf=\"submitted && paymentDetails.get(i + '.type')?.errors\"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"paymentDetails.get(i + '.type')?.errors?.required\"\r\n                    >Payment Type Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Transfer Mode </span>\r\n                </label>\r\n                <ng-select\r\n                  [items]=\"arrTransferMode\"\r\n                  bindLabel=\"payment_mode\"\r\n                  bindValue=\"payment_mode\"\r\n                  (change)=\"onTransferChange($event, i)\"\r\n                  dropdownPosition=\"bottom\"\r\n                  placeholder=\"Choose a Transfer Mode\"\r\n                  formControlName=\"transferMode\"\r\n                  *ngIf=\"editIndex === i\"\r\n                >\r\n                </ng-select>\r\n                <div\r\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                  *ngIf=\"editIndex !== i\"\r\n                >\r\n                  {{ paymentDetails.get(i + \".transferMode\")?.value }}\r\n                </div>\r\n\r\n                <div\r\n                  *ngIf=\"\r\n                    submitted && paymentDetails.get(i + '.transferMode')?.errors\r\n                  \"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"\r\n                      paymentDetails.get(i + '.transferMode')?.errors?.required\r\n                    \"\r\n                    >Transfer Mode Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Transfer % </span>\r\n                </label>\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    paymentDetails.get(i + '.transferPercent')?.value > 0;\r\n                    else elseTemplate\r\n                  \"\r\n                >\r\n                  <input\r\n                    type=\"number\"\r\n                    class=\"form-control form-control-solid\"\r\n                    formControlName=\"transferPercentage\"\r\n                    placeholder=\"Percentage %\"\r\n                  />\r\n                </ng-container>\r\n                <ng-template #elseTemplate>\r\n                  <div class=\"form-control form-control-solid\">0</div>\r\n                </ng-template>\r\n              </div>\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Bank </span>\r\n                </label>\r\n                <ng-select\r\n                  [items]=\"arrBanks\"\r\n                  bindLabel=\"bankName\"\r\n                  bindValue=\"bankName\"\r\n                  dropdownPosition=\"bottom\"\r\n                  placeholder=\"Choose a Bank\"\r\n                  formControlName=\"bank\"\r\n                  *ngIf=\"editIndex === i\"\r\n                >\r\n                </ng-select>\r\n                <div\r\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                  *ngIf=\"editIndex !== i\"\r\n                >\r\n                  {{ paymentDetails.get(i + \".bank\")?.value }}\r\n                </div>\r\n\r\n                <div\r\n                  *ngIf=\"submitted && paymentDetails.get(i + '.bank')?.errors\"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"paymentDetails.get(i + '.bank')?.errors?.required\"\r\n                    >Bank Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Amount </span>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  class=\"form-control form-control-solid\"\r\n                  placeholder=\"Amount\"\r\n                  formControlName=\"amount\"\r\n                  *ngIf=\"editIndex === i\"\r\n                />\r\n                <div\r\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                  *ngIf=\"editIndex !== i\"\r\n                >\r\n                  {{ paymentDetails.get(i + \".amount\")?.value }}\r\n                </div>\r\n                <div\r\n                  class=\"text-sm text-gray-700 mt-1\"\r\n                  *ngIf=\"paymentDetails.get(i + '.transferPercent')?.value > 0\"\r\n                ></div>\r\n\r\n                <div\r\n                  *ngIf=\"submitted && paymentDetails.get(i + '.amount')?.errors\"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"paymentDetails.get(i + '.amount')?.errors?.required\"\r\n                    >Amount Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Date </span>\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control form-control-solid\"\r\n                  placeholder=\"Date\"\r\n                  formControlName=\"date\"\r\n                  *ngIf=\"editIndex === i\"\r\n                />\r\n                <div\r\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                  *ngIf=\"editIndex !== i\"\r\n                >\r\n                  {{\r\n                    paymentDetails.get(i + \".date\")?.value | date : \"dd/MM/yyyy\"\r\n                  }}\r\n                </div>\r\n                <div\r\n                  *ngIf=\"submitted && paymentDetails.get(i + '.date')?.errors\"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"paymentDetails.get(i + '.date')?.errors?.required\"\r\n                    >Date Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div class=\"min-w-[160px]\" *ngIf=\"type === 'VERIFY'\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Verify Date </span>\r\n                </label>\r\n                <div\r\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                  *ngIf=\"editIndex !== i\"\r\n                >\r\n                  {{\r\n                    paymentDetails.get(i + \".verifyDate\")?.value\r\n                      | date : \"dd/MM/yyyy\"\r\n                  }}\r\n                </div>\r\n              </div>\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Description </span>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control form-control-solid\"\r\n                  placeholder=\"Description\"\r\n                  formControlName=\"description\"\r\n                  *ngIf=\"editIndex === i\"\r\n                />\r\n                <div\r\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                  *ngIf=\"editIndex !== i\"\r\n                >\r\n                  {{ paymentDetails.get(i + \".description\")?.value }}\r\n                </div>\r\n                <div\r\n                  *ngIf=\"\r\n                    submitted && paymentDetails.get(i + '.description')?.errors\r\n                  \"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"\r\n                      paymentDetails.get(i + '.description')?.errors?.required\r\n                    \"\r\n                  >\r\n                    Description Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div class=\"min-w-[160px]\" *ngIf=\"type === 'PENDING'\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> ACTION </span>\r\n                </label>\r\n                <div>\r\n                  <a\r\n                    class=\"btn btn-icon bg-light-success btn-active-color-success btn-sm me-1\"\r\n                    *ngIf=\"editIndex === i\"\r\n                    (click)=\"updatePayment(i)\"\r\n                  >\r\n                    <span\r\n                      [inlineSVG]=\"\r\n                        './assets/media/icons/duotune/files/fil025.svg'\r\n                      \"\r\n                      class=\"svg-icon svg-icon-3 svg-icon-success\"\r\n                    ></span>\r\n                  </a>\r\n                  <a\r\n                    class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm me-1\"\r\n                    *ngIf=\"editIndex === i\"\r\n                    (click)=\"editIndex = ''\"\r\n                  >\r\n                    <span\r\n                      [inlineSVG]=\"\r\n                        './assets/media/icons/duotune/files/fil007.svg'\r\n                      \"\r\n                      class=\"svg-icon svg-icon-3 svg-icon-danger\"\r\n                    ></span>\r\n                  </a>\r\n                  <a\r\n                    class=\"btn btn-icon bg-light-warning btn-active-color-warning btn-sm me-1\"\r\n                    *ngIf=\"editIndex !== i\"\r\n                    (click)=\"editPayment(i)\"\r\n                  >\r\n                    <span\r\n                      [inlineSVG]=\"\r\n                        './assets/media/icons/duotune/art/art005.svg'\r\n                      \"\r\n                      class=\"svg-icon svg-icon-3 svg-icon-warning\"\r\n                    ></span>\r\n                  </a>\r\n                  <a\r\n                    class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm\"\r\n                    *ngIf=\"editIndex !== i\"\r\n                    (click)=\"removeItem(i, skill.value)\"\r\n                  >\r\n                    <span\r\n                      [inlineSVG]=\"\r\n                        './assets/media/icons/duotune/general/gen027.svg'\r\n                      \"\r\n                      class=\"svg-icon svg-icon-3 svg-icon-danger\"\r\n                    ></span>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- <div\r\n          class=\"table-responsive mb-3 overflow-visible max-h-[50vh]\"\r\n          [ngClass]=\"{ 'overflow-scroll': paymentDetails.controls.length >= 5 }\"\r\n          *ngIf=\"paymentDetails.controls.length\"\r\n        >\r\n          <table\r\n            class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\"\r\n          >\r\n            <thead>\r\n              <tr class=\"fw-bold text-muted\">\r\n                <th class=\"min-w-[200px]\">Payment Code</th>\r\n                <th class=\"min-w-[200px]\">Payment Type</th>\r\n                <th class=\"min-w-[200px]\">Transfer Mode</th>\r\n                <th class=\"min-w-[200px]\">Transfer %</th>\r\n                <th class=\"min-w-[200px]\">Bank</th>\r\n                <th class=\"min-w-[120px]\">Amount</th>\r\n                <th class=\"min-w-[120px]\">Date</th>\r\n                <th class=\"min-w-[120px]\" *ngIf=\"type === 'VERIFY'\">\r\n                  Verify Date\r\n                </th>\r\n                <th class=\"min-w-[120px]\">Description</th>\r\n                <th class=\"min-w-[120px]\" *ngIf=\"type === 'PENDING'\">ACTION</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody formArrayName=\"paymentDetails\">\r\n              <tr\r\n                *ngFor=\"let skill of paymentDetails.controls; let i = index\"\r\n                [formGroupName]=\"i\"\r\n              >\r\n                <td>\r\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                    {{ paymentDetails.get(i + \".payment_Code\")?.value }}\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <ng-select\r\n                    [items]=\"arrPaymentType\"\r\n                    bindLabel=\"type\"\r\n                    bindValue=\"sentType\"\r\n                    dropdownPosition=\"bottom\"\r\n                    (change)=\"onPaymentChange($event, i)\"\r\n                    placeholder=\"Choose a Payment Type\"\r\n                    formControlName=\"type\"\r\n                    *ngIf=\"editIndex === i\"\r\n                  >\r\n                  </ng-select>\r\n\r\n                  <div\r\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                    *ngIf=\"editIndex !== i\"\r\n                  >\r\n                    {{ paymentDetails.get(i + \".typeView\")?.value }}\r\n                  </div>\r\n\r\n                  <div\r\n                    class=\"text-sm text-gray-700 mt-1\"\r\n                    *ngIf=\"\r\n                      paymentDetails.get(i + '.typeView')?.value === 'REFUND'\r\n                    \"\r\n                  >\r\n                    Refund from\r\n                    {{ paymentDetails.get(i + \".supplierName\")?.value }}\r\n                  </div>\r\n                  <div\r\n                    *ngIf=\"paymentDetails.get(i + '.mode')?.value\"\r\n                    class=\"mt-1 text-{{\r\n                      paymentDetails.get(i + '.mode')?.value === 'Credit'\r\n                        ? 'green'\r\n                        : 'red'\r\n                    }}-600\"\r\n                  >\r\n                    {{\r\n                      paymentDetails.get(i + \".mode\")?.value === \"Credit\"\r\n                        ? \"Pay from Supplier\"\r\n                        : paymentDetails.get(i + \".mode\")?.value === \"Debit\"\r\n                        ? \"Pay to Supplier\"\r\n                        : \"\"\r\n                    }}\r\n                  </div>\r\n\r\n                  <div\r\n                    *ngIf=\"submitted && paymentDetails.get(i + '.type')?.errors\"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"paymentDetails.get(i + '.type')?.errors?.required\"\r\n                      >Payment Type Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <ng-select\r\n                    [items]=\"arrTransferMode\"\r\n                    bindLabel=\"payment_mode\"\r\n                    bindValue=\"payment_mode\"\r\n                    (change)=\"onTransferChange($event, i)\"\r\n                    dropdownPosition=\"bottom\"\r\n                    placeholder=\"Choose a Transfer Mode\"\r\n                    formControlName=\"transferMode\"\r\n                    *ngIf=\"editIndex === i\"\r\n                  >\r\n                  </ng-select>\r\n                  <div\r\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                    *ngIf=\"editIndex !== i\"\r\n                  >\r\n                    {{ paymentDetails.get(i + \".transferMode\")?.value }}\r\n                  </div>\r\n                  <div\r\n                    *ngIf=\"\r\n                      submitted &&\r\n                      paymentDetails.get(i + '.transferMode')?.errors\r\n                    \"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"\r\n                        paymentDetails.get(i + '.transferMode')?.errors\r\n                          ?.required\r\n                      \"\r\n                      >Transfer Mode Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <ng-container\r\n                    *ngIf=\"\r\n                      paymentDetails.get(i + '.transferPercent')?.value > 0;\r\n                      else elseTemplate\r\n                    \"\r\n                  >\r\n                    <input\r\n                      type=\"number\"\r\n                      class=\"form-control form-control-solid\"\r\n                      formControlName=\"transferPercentage\"\r\n                      placeholder=\"Percentage %\"\r\n                    />\r\n                  </ng-container>\r\n                  <ng-template #elseTemplate>\r\n                    <div class=\"form-control form-control-solid\">0</div>\r\n                  </ng-template>\r\n                </td>\r\n                <td>\r\n                  <ng-select\r\n                    [items]=\"arrBanks\"\r\n                    bindLabel=\"bankName\"\r\n                    bindValue=\"bankName\"\r\n                    dropdownPosition=\"bottom\"\r\n                    placeholder=\"Choose a Bank\"\r\n                    formControlName=\"bank\"\r\n                    *ngIf=\"editIndex === i\"\r\n                  >\r\n                  </ng-select>\r\n                  <div\r\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                    *ngIf=\"editIndex !== i\"\r\n                  >\r\n                    {{ paymentDetails.get(i + \".bank\")?.value }}\r\n                  </div>\r\n\r\n                  <div\r\n                    *ngIf=\"submitted && paymentDetails.get(i + '.bank')?.errors\"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"paymentDetails.get(i + '.bank')?.errors?.required\"\r\n                      >Bank Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    class=\"form-control form-control-solid\"\r\n                    placeholder=\"Amount\"\r\n                    formControlName=\"amount\"\r\n                    *ngIf=\"editIndex === i\"\r\n                  />\r\n                  <div\r\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                    *ngIf=\"editIndex !== i\"\r\n                  >\r\n                    {{ paymentDetails.get(i + \".amount\")?.value }}\r\n                  </div>\r\n                  <div\r\n                    class=\"text-sm text-gray-700 mt-1\"\r\n                    *ngIf=\"\r\n                      paymentDetails.get(i + '.transferPercent')?.value > 0\r\n                    \"\r\n                  >\r\n                  </div>\r\n\r\n                  <div\r\n                    *ngIf=\"\r\n                      submitted && paymentDetails.get(i + '.amount')?.errors\r\n                    \"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"\r\n                        paymentDetails.get(i + '.amount')?.errors?.required\r\n                      \"\r\n                      >Amount Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"date\"\r\n                    class=\"form-control form-control-solid\"\r\n                    placeholder=\"Date\"\r\n                    formControlName=\"date\"\r\n                    *ngIf=\"editIndex === i\"\r\n                  />\r\n                  <div\r\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                    *ngIf=\"editIndex !== i\"\r\n                  >\r\n                    {{\r\n                      paymentDetails.get(i + \".date\")?.value\r\n                        | date : \"dd/MM/yyyy\"\r\n                    }}\r\n                  </div>\r\n                  <div\r\n                    *ngIf=\"submitted && paymentDetails.get(i + '.date')?.errors\"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"paymentDetails.get(i + '.date')?.errors?.required\"\r\n                      >Date Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td *ngIf=\"type === 'VERIFY'\">\r\n                  <div\r\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                    *ngIf=\"editIndex !== i\"\r\n                  >\r\n                    {{\r\n                      paymentDetails.get(i + \".verifyDate\")?.value\r\n                        | date : \"dd/MM/yyyy\"\r\n                    }}\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control form-control-solid\"\r\n                    placeholder=\"Description\"\r\n                    formControlName=\"description\"\r\n                    *ngIf=\"editIndex === i\"\r\n                  />\r\n                  <div\r\n                    class=\"form-control form-control-solid\"\r\n                    *ngIf=\"editIndex !== i\"\r\n                  >\r\n                    {{ paymentDetails.get(i + \".description\")?.value }}\r\n                  </div>\r\n                  <div\r\n                    *ngIf=\"\r\n                      submitted &&\r\n                      paymentDetails.get(i + '.description')?.errors\r\n                    \"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"\r\n                        paymentDetails.get(i + '.description')?.errors?.required\r\n                      \"\r\n                    >\r\n                      Description Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n\r\n                <td *ngIf=\"type === 'PENDING'\">\r\n                  <a\r\n                    class=\"btn btn-icon bg-light-success btn-active-color-success btn-sm me-1\"\r\n                    *ngIf=\"editIndex === i\"\r\n                    (click)=\"updatePayment(i)\"\r\n                  >\r\n                    <span\r\n                      [inlineSVG]=\"\r\n                        './assets/media/icons/duotune/files/fil025.svg'\r\n                      \"\r\n                      class=\"svg-icon svg-icon-3 svg-icon-success\"\r\n                    ></span>\r\n                  </a>\r\n                  <a\r\n                    class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm me-1\"\r\n                    *ngIf=\"editIndex === i\"\r\n                    (click)=\"editIndex = ''\"\r\n                  >\r\n                    <span\r\n                      [inlineSVG]=\"\r\n                        './assets/media/icons/duotune/files/fil007.svg'\r\n                      \"\r\n                      class=\"svg-icon svg-icon-3 svg-icon-danger\"\r\n                    ></span>\r\n                  </a>\r\n                  <a\r\n                    class=\"btn btn-icon bg-light-warning btn-active-color-warning btn-sm me-1\"\r\n                    *ngIf=\"editIndex !== i\"\r\n                    (click)=\"editPayment(i)\"\r\n                  >\r\n                    <span\r\n                      [inlineSVG]=\"\r\n                        './assets/media/icons/duotune/art/art005.svg'\r\n                      \"\r\n                      class=\"svg-icon svg-icon-3 svg-icon-warning\"\r\n                    ></span>\r\n                  </a>\r\n                  <a\r\n                    class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm\"\r\n                    *ngIf=\"editIndex !== i\"\r\n                    (click)=\"removeItem(i, skill.value)\"\r\n                  >\r\n                    <span\r\n                      [inlineSVG]=\"\r\n                        './assets/media/icons/duotune/general/gen027.svg'\r\n                      \"\r\n                      class=\"svg-icon svg-icon-3 svg-icon-danger\"\r\n                    ></span>\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div> -->\r\n\r\n        <!-- <div\r\n          class=\"grid grid-cols-2 md:grid-cols-6 gap-2 mt-4\"\r\n          *ngIf=\"paymentDetails.controls.length && type === 'PENDING'\"\r\n        >\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <button class=\"btn btn-light-primary\" (click)=\"resetForm()\">\r\n            Clear\r\n          </button>\r\n          <button class=\"btn btn-primary\" (click)=\"onSubmit()\">Update</button>\r\n        </div> -->\r\n      </form>\r\n    </div>\r\n    <!-- end::Body -->\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///"}