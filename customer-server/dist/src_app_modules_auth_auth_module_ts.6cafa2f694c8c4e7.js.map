{"version":3,"file":"src_app_modules_auth_auth_module_ts.6cafa2f694c8c4e7.js","mappings":"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","sources":["./src/app/core/services/user/user.service.ts","./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/auth.component.ts","./src/app/modules/auth/auth.component.html","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/components/forgot-password/forgot-password.component.ts","./src/app/modules/auth/components/forgot-password/forgot-password.component.html","./src/app/modules/auth/components/login/login.component.ts","./src/app/modules/auth/components/login/login.component.html","./src/app/modules/auth/components/registration/registration.component.ts","./src/app/modules/auth/components/registration/registration.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { CommonService } from '../common/common.service';\nimport { ApiResponse } from '../../model/api-response.models';\nimport { catchError, retry } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private apiURL: string = environment.API_ENDPOINT;\n\n  constructor(private http: HttpClient, private commonService: CommonService) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      Authorization: 'bearer ' + localStorage.getItem('token'),\n    }),\n  };\n\n  getDashboard(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'dashbaord/get_dashboard',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  updatePassword(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'profile/update_password',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  sentOTP(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'otp/send_otp_for_reset',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  VerifyOTPResetPassword(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'otp/verify_otp_and_passwd_reset',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  getPushNotification(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'user/get_push_nottifications',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  pushStatusChange(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'user/push_status_change',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  clearAllPush(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'user/push_clear_all',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthComponent } from './auth.component';\r\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegistrationComponent } from './components/registration/registration.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'login',\r\n        pathMatch: 'full',\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        data: { returnUrl: window.location.pathname },\r\n      },\r\n      {\r\n        path: 'registration',\r\n        component: RegistrationComponent,\r\n      },\r\n      {\r\n        path: 'forgot-password',\r\n        component: ForgotPasswordComponent,\r\n      },\r\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n      { path: '**', redirectTo: 'login', pathMatch: 'full' },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\n\r\n// const BODY_CLASSES = ['bgi-size-cover', 'bgi-position-center', 'bgi-no-repeat'];\r\n\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: '<body[root]>',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss'],\r\n})\r\nexport class AuthComponent implements OnInit, OnDestroy {\r\n  today: Date = new Date();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    // BODY_CLASSES.forEach((c) => document.body.classList.add(c));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // BODY_CLASSES.forEach((c) => document.body.classList.remove(c));\r\n  }\r\n}\r\n","<div class=\"d-flex flex-column flex-lg-row flex-column-fluid\">\r\n  <!--begin::Body-->\r\n  <div\r\n    class=\"d-flex flex-column flex-lg-row-fluid w-lg-50 p-10 order-2 order-lg-1\"\r\n  >\r\n    <!--begin::Form-->\r\n    <div class=\"d-flex flex-center flex-column flex-lg-row-fluid\">\r\n      <!--begin::Wrapper-->\r\n      <div class=\"card w-11/12 p-10\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n      <!--end::Wrapper-->\r\n    </div>\r\n    <!--end::Form-->\r\n\r\n    <!--begin::Footer-->\r\n    <div class=\"d-flex flex-center flex-wrap px-5 mt-8\">\r\n      <!--begin::Links-->\r\n      <!-- <div class=\"d-flex fw-semibold text-primary fs-base\">\r\n        <a href=\"#\" class=\"px-5\" target=\"_blank\">Terms</a>\r\n\r\n        <a href=\"#\" class=\"px-5\" target=\"_blank\">Plans</a>\r\n\r\n        <a href=\"#\" class=\"px-5\" target=\"_blank\">Contact Us</a>\r\n      </div> -->\r\n      <!--end::Links-->\r\n    </div>\r\n    <!--end::Footer-->\r\n  </div>\r\n  <!--end::Body-->\r\n\r\n  <!--begin::Aside-->\r\n  <div\r\n    class=\"d-flex flex-lg-row-fluid w-lg-50 bgi-size-cover bgi-position-center order-1 order-lg-2\"\r\n  >\r\n    <!--begin::Content-->\r\n    <div\r\n      class=\"d-flex flex-column flex-center py-15 px-5 px-md-15 w-100 bg-gradient-to-br from-black via-80% via-theme-primary/70 to-theme-primary/50\"\r\n    >\r\n      <!--begin::Title-->\r\n      <h1 class=\"text-white fs-2qx fw-bolder text-center mb-7\">\r\n        Middle East Holidays\r\n      </h1>\r\n      <!--end::Title-->\r\n      <!--begin::Logo-->\r\n      <a routerLink=\"/\" class=\"mb-12\">\r\n        <img\r\n          alt=\"Logo\"\r\n          src=\"./assets/media/logos/me-logo.jpeg\"\r\n          class=\"h-[100px] rounded\"\r\n        />\r\n      </a>\r\n      <!--end::Logo-->\r\n\r\n      <!--begin::Image-->\r\n      <!-- <img\r\n        class=\"mx-auto w-275px w-md-50 w-xl-500px mb-10 mb-lg-20\"\r\n        src=\"./assets/media/misc/auth-screens.png\"\r\n        alt=\"\"\r\n      /> -->\r\n      <!--end::Image-->\r\n\r\n      <!--begin::Title-->\r\n      <!-- <h1 class=\"text-white fs-2qx fw-bolder text-center mb-7\">\r\n        Fast, Efficient and Productive\r\n      </h1> -->\r\n      <!--end::Title-->\r\n\r\n      <!--begin::Text-->\r\n      <!-- <div class=\"text-white fs-base text-center\">\r\n        In this kind of post,\r\n        <a href=\"#\" class=\"opacity-75-hover text-warning fw-bold me-1\"\r\n          >the blogger</a\r\n        >\r\n\r\n        introduces a person they’ve interviewed <br />\r\n        and provides some background information about\r\n\r\n        <a href=\"#\" class=\"opacity-75-hover text-warning fw-bold me-1\"\r\n          >the interviewee</a\r\n        >\r\n        and their <br />\r\n        work following this is a transcript of the interview.\r\n      </div> -->\r\n      <!--end::Text-->\r\n    </div>\r\n    <!--end::Content-->\r\n  </div>\r\n  <!--end::Aside-->\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { AuthComponent } from './auth.component';\r\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegistrationComponent } from './components/registration/registration.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    ForgotPasswordComponent,\r\n    AuthComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    // TranslationModule,\r\n    AuthRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n  ],\r\n})\r\nexport class AuthModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserService } from 'src/app/core/services/user/user.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  forgotPasswordForm: FormGroup;\r\n  resetPasswordForm: FormGroup;\r\n  loading = false;\r\n  errorMessage = '';\r\n  step1 = true;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private toasterService: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.forgotPasswordForm.controls;\r\n  }\r\n  get r() {\r\n    return this.resetPasswordForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.forgotPasswordForm = this.fb.group({\r\n      email: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(320),\r\n        ]),\r\n      ],\r\n    });\r\n    this.resetPasswordForm = this.fb.group({\r\n      otp: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(5),\r\n          Validators.maxLength(5),\r\n        ]),\r\n      ],\r\n      newPassword: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(6),\r\n          Validators.maxLength(20),\r\n        ]),\r\n      ],\r\n      confirmPassword: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(6),\r\n          Validators.maxLength(20),\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    if (this.forgotPasswordForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const obj = {\r\n      strEmail: this.f.email.value,\r\n    };\r\n\r\n    this.loading = true;\r\n    this.userService.sentOTP(obj).subscribe((result: any) => {\r\n      this.loading = false;\r\n      if (result.success) {\r\n        this.step1 = false;\r\n      } else {\r\n        this.step1 = true;\r\n        this.errorMessage = result.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  submitReset() {\r\n    if (this.resetPasswordForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (this.r.newPassword.value !== this.r.confirmPassword.value) {\r\n      this.errorMessage = 'Password and Confirm Password must be same';\r\n      return;\r\n    }\r\n\r\n    const obj = {\r\n      strEmail: this.f.email.value,\r\n      strOTP: this.r.otp.value + '',\r\n      strNewPaswd: this.r.newPassword.value,\r\n    };\r\n\r\n    this.loading = true;\r\n    this.userService.VerifyOTPResetPassword(obj).subscribe((result: any) => {\r\n      this.loading = false;\r\n      if (result.success) {\r\n        this.step1 = true;\r\n        this.errorMessage = '';\r\n        this.toasterService.success(result.message);\r\n        this.router.navigate(['/auth/login']);\r\n      } else {\r\n        this.step1 = false;\r\n        this.errorMessage = result.message;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"step1; else elseTemplate\">\r\n  <form\r\n    class=\"form w-100\"\r\n    novalidate=\"novalidate\"\r\n    [formGroup]=\"forgotPasswordForm\"\r\n    (ngSubmit)=\"submit()\"\r\n    id=\"kt_login_password_reset_form\"\r\n  >\r\n    <!--begin::Heading-->\r\n    <div class=\"text-center mb-10\">\r\n      <!--begin::Title-->\r\n      <h1 class=\"text-dark fw-bolder mb-3\">Forgot Password ?</h1>\r\n      <!--end::Title-->\r\n\r\n      <!--begin::Link-->\r\n      <div class=\"text-gray-500 fw-semibold fs-6\">\r\n        Enter your email to reset your password.\r\n      </div>\r\n      <!--end::Link-->\r\n    </div>\r\n    <!--begin::Heading-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"fv-row mb-8\">\r\n      <label class=\"form-label fw-bolder text-gray-900 fs-6\">Email</label>\r\n      <input\r\n        class=\"form-control bg-transparent\"\r\n        type=\"email\"\r\n        formControlName=\"email\"\r\n        placeholder=\"Email\"\r\n        name=\"email\"\r\n        autocomplete=\"on\"\r\n      />\r\n\r\n      <ng-container *ngIf=\"errorMessage !== ''\">\r\n        <div class=\"fv-plugins-message-container\">\r\n          <div class=\"fv-help-block\">\r\n            <span role=\"alert\">{{ errorMessage }}</span>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Email is required',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'email',\r\n          message: 'Email is invalid',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minLength',\r\n          message: 'Email should have at least 3 symbols',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Email should have maximum 360 symbols',\r\n          control: forgotPasswordForm.controls['email']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n    <!--begin::Form group-->\r\n    <div class=\"d-flex flex-wrap justify-content-center pb-lg-0\">\r\n      <button\r\n        type=\"submit\"\r\n        id=\"kt_password_reset_submit\"\r\n        class=\"btn btn-primary me-4\"\r\n      >\r\n        <ng-container *ngIf=\"loading\">\r\n          <span class=\"indicator-progress\" [style.display]=\"'block'\">\r\n            Please wait...\r\n            <span\r\n              class=\"spinner-border spinner-border-sm align-middle ms-2\"\r\n            ></span>\r\n          </span>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!loading\">\r\n          <span class=\"indicator-label\">Submit</span>\r\n        </ng-container>\r\n        <!-- <span class=\"indicator-label\">Submit</span>\r\n        <ng-container *ngIf=\"loading\">\r\n          <span class=\"indicator-progress\">\r\n            Please wait...\r\n            <span\r\n              class=\"spinner-border spinner-border-sm align-middle ms-2\"\r\n            ></span>\r\n          </span>\r\n        </ng-container> -->\r\n      </button>\r\n      <a\r\n        routerLink=\"/auth/login\"\r\n        id=\"kt_login_password_reset_form_cancel_button\"\r\n        class=\"btn btn-light\"\r\n      >\r\n        Cancel\r\n      </a>\r\n    </div>\r\n    <!--end::Form group-->\r\n  </form>\r\n  <!--end::Form-->\r\n</ng-container>\r\n<ng-template #elseTemplate>\r\n  <form\r\n    class=\"form w-100\"\r\n    novalidate=\"novalidate\"\r\n    [formGroup]=\"resetPasswordForm\"\r\n    (ngSubmit)=\"submitReset()\"\r\n    id=\"kt_login_password_reset_form\"\r\n  >\r\n    <!--begin::Heading-->\r\n    <div class=\"text-center mb-10\">\r\n      <!--begin::Title-->\r\n      <h1 class=\"text-dark fw-bolder mb-3\">Reset Password</h1>\r\n      <!--end::Title-->\r\n\r\n      <!--begin::Link-->\r\n      <div class=\"text-gray-500 fw-semibold fs-6\">\r\n        Enter the OTP shared to the email address\r\n      </div>\r\n      <!--end::Link-->\r\n    </div>\r\n    <!--end::Heading-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"fv-row mb-8\">\r\n      <label class=\"form-label fw-bolder text-gray-900 fs-6\">OTP</label>\r\n      <input\r\n        class=\"form-control bg-transparent\"\r\n        type=\"number\"\r\n        formControlName=\"otp\"\r\n        placeholder=\"OTP\"\r\n        name=\"otp\"\r\n      />\r\n\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'OTP is required',\r\n          control: resetPasswordForm.controls['otp']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minLength',\r\n          message: 'OTP can have only 5 numbers',\r\n          control: resetPasswordForm.controls['otp']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'OTP can have only 5 numbers',\r\n          control: resetPasswordForm.controls['otp']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"fv-row mb-8\">\r\n      <label class=\"form-label fw-bolder text-gray-900 fs-6\"\r\n        >New Password</label\r\n      >\r\n      <input\r\n        class=\"form-control bg-transparent\"\r\n        type=\"text\"\r\n        formControlName=\"newPassword\"\r\n        placeholder=\"New Password\"\r\n        name=\"New Password\"\r\n      />\r\n\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Password is required',\r\n          control: resetPasswordForm.controls['newPassword']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minLength',\r\n          message: 'Password should have at least 6 symbols',\r\n          control: resetPasswordForm.controls['newPassword']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Password should have maximum 20 symbols',\r\n          control: resetPasswordForm.controls['newPassword']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"fv-row mb-8\">\r\n      <label class=\"form-label fw-bolder text-gray-900 fs-6\"\r\n        >Confirm Password</label\r\n      >\r\n      <input\r\n        class=\"form-control bg-transparent\"\r\n        type=\"text\"\r\n        formControlName=\"confirmPassword\"\r\n        placeholder=\"Confirm Password\"\r\n        name=\"Confirm Password\"\r\n      />\r\n\r\n      <ng-container *ngIf=\"errorMessage !== ''\">\r\n        <div class=\"fv-plugins-message-container\">\r\n          <div class=\"fv-help-block\">\r\n            <span role=\"alert\">{{ errorMessage }}</span>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'required',\r\n          message: 'Password is required',\r\n          control: resetPasswordForm.controls['confirmPassword']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'minLength',\r\n          message: 'Password should have at least 6 symbols',\r\n          control: resetPasswordForm.controls['confirmPassword']\r\n        }\"\r\n      ></ng-container>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"formError\"\r\n        [ngTemplateOutletContext]=\"{\r\n          validation: 'maxLength',\r\n          message: 'Password should have maximum 20 symbols',\r\n          control: resetPasswordForm.controls['confirmPassword']\r\n        }\"\r\n      ></ng-container>\r\n    </div>\r\n    <!--end::Form group-->\r\n\r\n    <!--begin::Form group-->\r\n    <div class=\"d-flex flex-wrap justify-content-center pb-lg-0\">\r\n      <button\r\n        type=\"submit\"\r\n        id=\"kt_password_reset_submit\"\r\n        class=\"btn btn-primary me-4\"\r\n      >\r\n        <span class=\"indicator-label\">Submit</span>\r\n        <ng-container *ngIf=\"loading\">\r\n          <span class=\"indicator-progress\">\r\n            Please wait...\r\n            <span\r\n              class=\"spinner-border spinner-border-sm align-middle ms-2\"\r\n            ></span>\r\n          </span>\r\n        </ng-container>\r\n      </button>\r\n      <a\r\n        routerLink=\"/auth/login\"\r\n        id=\"kt_login_password_reset_form_cancel_button\"\r\n        class=\"btn btn-light\"\r\n      >\r\n        Cancel\r\n      </a>\r\n    </div>\r\n    <!--end::Form group-->\r\n  </form>\r\n</ng-template>\r\n\r\n<ng-template\r\n  #formError\r\n  let-control=\"control\"\r\n  let-message=\"message\"\r\n  let-validation=\"validation\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n  >\r\n    <div class=\"fv-plugins-message-container\">\r\n      <div class=\"fv-help-block\">\r\n        <span role=\"alert\">{{ message }}</span>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/core/services/authentication/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  hasError: boolean;\r\n\r\n  isShow = false;\r\n\r\n  returnUrl: string;\r\n  isSubmitted: boolean;\r\n  success: boolean;\r\n  loading: boolean;\r\n  errorMessage: string;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthenticationService,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    // get return url from route parameters or default to '/'\r\n    // this.returnUrl = this.route.snapshot.queryParams['returnUrl'.toString()];\r\n    // this.route.queryParams.subscribe((params) => {\r\n    //   this.returnUrl = params.returnUrl || '/';\r\n    //   console.log('returnUrl', this.returnUrl);\r\n    // });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.loginForm = this.fb.group({\r\n      email: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(320),\r\n        ]),\r\n      ],\r\n      password: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(100),\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.isSubmitted = true;\r\n    this.success = false;\r\n    this.hasError = false;\r\n\r\n    if (this.f.invalid) {\r\n      return;\r\n    }\r\n\r\n    const obj = {\r\n      strEmail: this.loginForm.value.email,\r\n      strPassword: this.loginForm.value.password,\r\n    };\r\n\r\n    this.authService.adminLogin(obj).subscribe((res) => {\r\n      this.loading = false;\r\n      if (res.success) {\r\n        this.success = true;\r\n\r\n        localStorage.setItem('userId', res.data.fkAdminId);\r\n        localStorage.setItem('userName', res.data.strName);\r\n        localStorage.setItem('email', this.loginForm.value.email);\r\n        localStorage.setItem(\r\n          'role',\r\n          res.data.strUserType === 1\r\n            ? 'a165fccd-2bbe-4391-9ea9-a237b1fb7c82'\r\n            : 'e5e069e0-1914-4fc9-bd4a-90487fce89ea'\r\n        );\r\n\r\n        const modules = res.data.arryModuleDetails;\r\n        localStorage.setItem('modules', JSON.stringify(modules));\r\n\r\n        localStorage.setItem('token', res.data.token);\r\n\r\n        setTimeout(() => {\r\n          window.location.href = modules[0].path;\r\n        }, 500);\r\n      } else {\r\n        this.hasError = true;\r\n        this.errorMessage = res.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  // ngOnDestroy() {\r\n  //   this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  // }\r\n}\r\n","<!--begin::Form-->\r\n<form\r\n  class=\"form w-100\"\r\n  [formGroup]=\"loginForm\"\r\n  novalidate=\"novalidate\"\r\n  id=\"kt_login_signin_form\"\r\n  (ngSubmit)=\"onSubmit()\"\r\n>\r\n  <!--begin::Heading-->\r\n  <div class=\"text-center mb-11\">\r\n    <h1 class=\"text-dark fw-bolder mb-3\">Sign In</h1>\r\n  </div>\r\n  <!--end::Heading-->\r\n\r\n  <!--begin::Form group-->\r\n  <div class=\"fv-row mb-8\">\r\n    <label class=\"form-label fs-6 fw-bolder text-dark\">Email</label>\r\n    <input\r\n      class=\"form-control bg-transparent\"\r\n      type=\"email\"\r\n      name=\"email\"\r\n      formControlName=\"email\"\r\n      placeholder=\"Email\"\r\n      autocomplete=\"off\"\r\n      [ngClass]=\"{\r\n        'is-invalid': isSubmitted && loginForm.controls['email'].invalid,\r\n        'is-valid': success\r\n      }\"\r\n    />\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'required',\r\n        message: 'Email is required',\r\n        control: loginForm.controls['email']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'email',\r\n        message: 'Email is invalid',\r\n        control: loginForm.controls['email']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'minLength',\r\n        message: 'Email should have at least 3 symbols',\r\n        control: loginForm.controls['email']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'maxLength',\r\n        message: 'Email should have maximum 360 symbols',\r\n        control: loginForm.controls['email']\r\n      }\"\r\n    ></ng-container>\r\n  </div>\r\n  <!--end::Form group-->\r\n\r\n  <!--begin::Form group-->\r\n  <div class=\"fv-row mb-3\">\r\n    <label class=\"form-label fw-bolder text-dark fs-6 mb-0\">Password</label>\r\n\r\n    <div class=\"input-group\">\r\n      <input\r\n        class=\"form-control bg-transparent\"\r\n        [type]=\"isShow ? 'text' : 'password'\"\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n        autocomplete=\"off\"\r\n        formControlName=\"password\"\r\n        [ngClass]=\"{\r\n          'is-invalid': isSubmitted && loginForm.controls['password'].invalid,\r\n          'is-valid': success\r\n        }\"\r\n      />\r\n      <span class=\"btn btn-icon btn-clear btn-light\" (click)=\"isShow = !isShow\">\r\n        <div class=\"bi bi-eye\" *ngIf=\"!isShow\"></div>\r\n        <div class=\"bi bi-eye-slash\" *ngIf=\"isShow\"></div>\r\n      </span>\r\n    </div>\r\n\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'required',\r\n        message: 'Password is required',\r\n        control: loginForm.controls['password']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'minlength',\r\n        message: 'Password should have at least 3 symbols',\r\n        control: loginForm.controls['password']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'maxLength',\r\n        message: 'Password should have maximum 100 symbols',\r\n        control: loginForm.controls['password']\r\n      }\"\r\n    ></ng-container>\r\n  </div>\r\n  <!--end::Form group-->\r\n\r\n  <!--begin::Wrapper-->\r\n  <div class=\"d-flex flex-stack flex-wrap gap-3 fs-base fw-semibold mb-8\">\r\n    <div></div>\r\n\r\n    <!--begin::Link-->\r\n    <!-- <a routerLink=\"/auth/forgot-password\" class=\"link-primary\">\r\n      Forgot Password ?\r\n    </a> -->\r\n    <!--end::Link-->\r\n  </div>\r\n  <!--end::Wrapper-->\r\n\r\n  <ng-container *ngIf=\"hasError\">\r\n    <div class=\"text-red-600 text-center fw-semibold fs-6\">\r\n      {{ errorMessage }}\r\n    </div>\r\n  </ng-container>\r\n\r\n  <!--begin::Action-->\r\n  <div class=\"d-grid mb-10\">\r\n    <button\r\n      type=\"submit\"\r\n      id=\"kt_sign_in_submit\"\r\n      class=\"btn btn-primary\"\r\n      [disabled]=\"loginForm.invalid\"\r\n    >\r\n      <ng-container *ngIf=\"success\">\r\n        <span class=\"indicator-progress\" [style.display]=\"'block'\">\r\n          Please wait...\r\n          <span\r\n            class=\"spinner-border spinner-border-sm align-middle ms-2\"\r\n          ></span>\r\n        </span>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!success\">\r\n        <span class=\"indicator-label\">Login</span>\r\n      </ng-container>\r\n    </button>\r\n  </div>\r\n\r\n  <!-- <div class=\"text-gray-500 text-center fw-semibold fs-6\">\r\n    Not a Member yet?\r\n\r\n    <a routerLink=\"/auth/registration\" class=\"link-primary\"> Sign up </a>\r\n  </div> -->\r\n\r\n  <!--end::Action-->\r\n</form>\r\n<!--end::Form-->\r\n\r\n<ng-template\r\n  #formError\r\n  let-control=\"control\"\r\n  let-message=\"message\"\r\n  let-validation=\"validation\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n  >\r\n    <div class=\"fv-plugins-message-container\">\r\n      <span role=\"alert\" class=\"text-red-500\">\r\n        {{ message }}\r\n      </span>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ConfirmPasswordValidator } from './confirm-password.validator';\r\nimport { UserModel } from '../../models/user.model';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.scss'],\r\n})\r\nexport class RegistrationComponent implements OnInit, OnDestroy {\r\n  registrationForm: FormGroup;\r\n  hasError: boolean;\r\n  isLoading$: Observable<boolean>;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n    // redirect to home if already logged in\r\n    if (this.authService.currentUserValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.registrationForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.registrationForm = this.fb.group(\r\n      {\r\n        fullname: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        email: [\r\n          'qwe@qwe.qwe',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.email,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n          ]),\r\n        ],\r\n        password: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        cPassword: [\r\n          '',\r\n          Validators.compose([\r\n            Validators.required,\r\n            Validators.minLength(3),\r\n            Validators.maxLength(100),\r\n          ]),\r\n        ],\r\n        agree: [false, Validators.compose([Validators.required])],\r\n      },\r\n      {\r\n        validator: ConfirmPasswordValidator.MatchPassword,\r\n      }\r\n    );\r\n  }\r\n\r\n  submit() {\r\n    this.hasError = false;\r\n    const result: {\r\n      [key: string]: string;\r\n    } = {};\r\n    Object.keys(this.f).forEach((key) => {\r\n      result[key] = this.f[key].value;\r\n    });\r\n    const newUser = new UserModel();\r\n    newUser.setUser(result);\r\n    // const registrationSubscr = this.authService\r\n    //   .registration(newUser)\r\n    //   .pipe(first())\r\n    //   .subscribe((user: UserModel) => {\r\n    //     if (user) {\r\n    //       this.router.navigate(['/']);\r\n    //     } else {\r\n    //       this.hasError = true;\r\n    //     }\r\n    //   });\r\n    // this.unsubscribe.push(registrationSubscr);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  }\r\n}\r\n","<form\r\n  class=\"form w-100 overflow-x-scroll\"\r\n  novalidate=\"novalidate\"\r\n  id=\"kt_login_signup_form\"\r\n  [formGroup]=\"registrationForm\"\r\n  (ngSubmit)=\"submit()\"\r\n>\r\n  <!--begin::Heading-->\r\n  <div class=\"text-center mb-11\">\r\n    <!--begin::Title-->\r\n    <h1 class=\"text-dark fw-bolder mb-3\">Sign Up</h1>\r\n    <!--end::Title-->\r\n  </div>\r\n  <!--begin::Heading-->\r\n\r\n  <!--begin::Form group-->\r\n  <div class=\"fv-row mb-8\">\r\n    <label class=\"form-label fw-bolder text-dark fs-6\">Fullname</label>\r\n    <input\r\n      class=\"form-control bg-transparent\"\r\n      type=\"text\"\r\n      name=\"fullname\"\r\n      formControlName=\"fullname\"\r\n      placeholder=\"Fullname\"\r\n      autocomplete=\"off\"\r\n      [ngClass]=\"{\r\n        'is-invalid': registrationForm.controls['fullname'].invalid,\r\n        'is-valid': registrationForm.controls['fullname'].valid\r\n      }\"\r\n    />\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'required',\r\n        message: 'Fullname is required',\r\n        control: registrationForm.controls['fullname']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'minlength',\r\n        message: 'Fullname should have at least 3 symbols',\r\n        control: registrationForm.controls['fullname']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'maxLength',\r\n        message: 'Fullname should have maximum 100 symbols',\r\n        control: registrationForm.controls['fullname']\r\n      }\"\r\n    ></ng-container>\r\n  </div>\r\n  <!--end::Form group-->\r\n\r\n  <!--begin::Form group-->\r\n  <div class=\"fv-row mb-8\">\r\n    <label class=\"form-label fw-bolder text-dark fs-6\">Fullname</label>\r\n    <input\r\n      class=\"form-control bg-transparent\"\r\n      type=\"text\"\r\n      name=\"fullname\"\r\n      formControlName=\"fullname\"\r\n      placeholder=\"Fullname\"\r\n      autocomplete=\"off\"\r\n      [ngClass]=\"{\r\n        'is-invalid': registrationForm.controls['fullname'].invalid,\r\n        'is-valid': registrationForm.controls['fullname'].valid\r\n      }\"\r\n    />\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'required',\r\n        message: 'Fullname is required',\r\n        control: registrationForm.controls['fullname']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'minlength',\r\n        message: 'Fullname should have at least 3 symbols',\r\n        control: registrationForm.controls['fullname']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'maxLength',\r\n        message: 'Fullname should have maximum 100 symbols',\r\n        control: registrationForm.controls['fullname']\r\n      }\"\r\n    ></ng-container>\r\n  </div>\r\n  <!--end::Form group-->\r\n\r\n  <!--begin::Form group-->\r\n  <div class=\"fv-row mb-8\">\r\n    <label class=\"form-label fw-bolder text-dark fs-6\">Fullname</label>\r\n    <input\r\n      class=\"form-control bg-transparent\"\r\n      type=\"text\"\r\n      name=\"fullname\"\r\n      formControlName=\"fullname\"\r\n      placeholder=\"Fullname\"\r\n      autocomplete=\"off\"\r\n      [ngClass]=\"{\r\n        'is-invalid': registrationForm.controls['fullname'].invalid,\r\n        'is-valid': registrationForm.controls['fullname'].valid\r\n      }\"\r\n    />\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'required',\r\n        message: 'Fullname is required',\r\n        control: registrationForm.controls['fullname']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'minlength',\r\n        message: 'Fullname should have at least 3 symbols',\r\n        control: registrationForm.controls['fullname']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'maxLength',\r\n        message: 'Fullname should have maximum 100 symbols',\r\n        control: registrationForm.controls['fullname']\r\n      }\"\r\n    ></ng-container>\r\n  </div>\r\n  <!--end::Form group-->\r\n\r\n  <!--begin::Form group-->\r\n  <div class=\"fv-row mb-8\">\r\n    <label class=\"form-label fw-bolder text-dark fs-6\">Fullname</label>\r\n    <input\r\n      class=\"form-control bg-transparent\"\r\n      type=\"text\"\r\n      name=\"fullname\"\r\n      formControlName=\"fullname\"\r\n      placeholder=\"Fullname\"\r\n      autocomplete=\"off\"\r\n      [ngClass]=\"{\r\n        'is-invalid': registrationForm.controls['fullname'].invalid,\r\n        'is-valid': registrationForm.controls['fullname'].valid\r\n      }\"\r\n    />\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'required',\r\n        message: 'Fullname is required',\r\n        control: registrationForm.controls['fullname']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'minlength',\r\n        message: 'Fullname should have at least 3 symbols',\r\n        control: registrationForm.controls['fullname']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'maxLength',\r\n        message: 'Fullname should have maximum 100 symbols',\r\n        control: registrationForm.controls['fullname']\r\n      }\"\r\n    ></ng-container>\r\n  </div>\r\n  <!--end::Form group-->\r\n\r\n  <!--begin::Form group-->\r\n  <div class=\"fv-row mb-8\">\r\n    <label class=\"form-label fw-bolder text-dark fs-6\">Email</label>\r\n    <input\r\n      class=\"form-control bg-transparent\"\r\n      type=\"email\"\r\n      placeholder=\"Email\"\r\n      name=\"email\"\r\n      formControlName=\"email\"\r\n      autocomplete=\"off\"\r\n      [ngClass]=\"{\r\n        'is-invalid': registrationForm.controls['email'].invalid,\r\n        'is-valid': registrationForm.controls['email'].valid\r\n      }\"\r\n    />\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'required',\r\n        message: 'Email is required',\r\n        control: registrationForm.controls['email']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'email',\r\n        message: 'Email is invalid',\r\n        control: registrationForm.controls['email']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'minlength',\r\n        message: 'Email should have at least 3 symbols',\r\n        control: registrationForm.controls['email']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'maxLength',\r\n        message: 'Email should have maximum 360 symbols',\r\n        control: registrationForm.controls['email']\r\n      }\"\r\n    ></ng-container>\r\n  </div>\r\n  <!--end::Form group-->\r\n\r\n  <!--begin::Form group-->\r\n  <div class=\"fv-row mb-8\">\r\n    <label class=\"form-label fw-bolder text-dark fs-6\">Password</label>\r\n    <input\r\n      class=\"form-control bg-transparent\"\r\n      type=\"password\"\r\n      placeholder=\"Password\"\r\n      name=\"password\"\r\n      formControlName=\"password\"\r\n      autocomplete=\"off\"\r\n      [ngClass]=\"{\r\n        'is-invalid': registrationForm.controls['password'].invalid,\r\n        'is-valid': registrationForm.controls['password'].valid\r\n      }\"\r\n    />\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'required',\r\n        message: 'Password is required',\r\n        control: registrationForm.controls['password']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'minlength',\r\n        message: 'Password should have at least 3 symbols',\r\n        control: registrationForm.controls['password']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'maxLength',\r\n        message: 'Password should have maximum 100 symbols',\r\n        control: registrationForm.controls['password']\r\n      }\"\r\n    ></ng-container>\r\n  </div>\r\n  <!--end::Form group-->\r\n\r\n  <!--begin::Form group-->\r\n  <div class=\"fv-row mb-8\">\r\n    <label class=\"form-label fw-bolder text-dark fs-6\">Confirm Password</label>\r\n    <input\r\n      class=\"form-control bg-transparent\"\r\n      type=\"password\"\r\n      placeholder=\"Confirm password\"\r\n      name=\"cPassword\"\r\n      autocomplete=\"off\"\r\n      formControlName=\"cPassword\"\r\n      [ngClass]=\"{\r\n        'is-invalid': registrationForm.controls['cPassword'].invalid,\r\n        'is-valid': registrationForm.controls['cPassword'].valid\r\n      }\"\r\n    />\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'required',\r\n        message: 'Confirm Password is required',\r\n        control: registrationForm.controls['cPassword']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'minlength',\r\n        message: 'Confirm Password should have at least 3 symbols',\r\n        control: registrationForm.controls['cPassword']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'maxLength',\r\n        message: 'Confirm Password should have maximum 100 symbols',\r\n        control: registrationForm.controls['cPassword']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      *ngIf=\"\r\n        registrationForm.controls['cPassword'].errors &&\r\n        registrationForm.controls['cPassword'].errors.ConfirmPassword\r\n      \"\r\n    >\r\n      <div class=\"fv-plugins-message-container\">\r\n        <div class=\"fv-help-block\">\r\n          'Passsword' and 'Confirm Password' didn't match.\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <!--end::Form group-->\r\n\r\n  <!--begin::Form group-->\r\n  <div class=\"fv-row mb-8\">\r\n    <label class=\"form-check form-check-inline\">\r\n      <input\r\n        id=\"kt_login_toc_agree\"\r\n        type=\"checkbox\"\r\n        formControlName=\"agree\"\r\n        name=\"agree\"\r\n        class=\"form-check-input\"\r\n      />\r\n      <span\r\n        for=\"kt_login_toc_agree\"\r\n        class=\"form-check-label fw-semibold text-gray-700 fs-base ms-1\"\r\n      >\r\n        I Accept the&nbsp;<a\r\n          href=\"https://keenthemes.com/metronic/?page=faq\"\r\n          target=\"_blank\"\r\n          class=\"ms-1 link-primary\"\r\n          >Terms</a\r\n        >.\r\n      </span>\r\n    </label>\r\n  </div>\r\n  <!--end::Form group-->\r\n\r\n  <!--begin::Form group-->\r\n  <div class=\"d-grid mb-10\">\r\n    <button\r\n      type=\"submit\"\r\n      id=\"kt_sign_up_submit\"\r\n      [disabled]=\"\r\n        registrationForm.invalid || !registrationForm.controls['agree'].value\r\n      \"\r\n      class=\"btn btn-primary\"\r\n    >\r\n      <ng-container *ngIf=\"(isLoading$ | async) === false\">\r\n        <span class=\"indicator-label\">Submit</span>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"isLoading$ | async\">\r\n        <span class=\"indicator-progress\" [style.display]=\"'block'\">\r\n          Please wait...\r\n          <span\r\n            class=\"spinner-border spinner-border-sm align-middle ms-2\"\r\n          ></span>\r\n        </span>\r\n      </ng-container>\r\n    </button>\r\n  </div>\r\n  <!--end::Form group-->\r\n\r\n  <!--begin::Sign up-->\r\n  <div class=\"text-gray-500 text-center fw-semibold fs-6\">\r\n    Already have an Account?\r\n\r\n    <a routerLink=\"/auth/login\" class=\"link-primary fw-semibold\"> Sign in </a>\r\n  </div>\r\n  <!--end::Sign up-->\r\n</form>\r\n\r\n<ng-template\r\n  #formError\r\n  let-control=\"control\"\r\n  let-message=\"message\"\r\n  let-validation=\"validation\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n  >\r\n    <div class=\"fv-plugins-message-container\">\r\n      <div class=\"fv-help-block\">\r\n        <span role=\"alert\">\r\n          {{ message }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n"],"names":["Validators","ConfirmPasswordValidator","UserModel","i0","RegistrationComponent","constructor","fb","authService","router","isLoading$","currentUserValue","navigate","ngOnInit","initForm","f","registrationForm","controls","group","fullname","compose","required","minLength","maxLength","email","password","cPassword","agree","validator","MatchPassword","submit","hasError","result","Object","keys","forEach","key","value","newUser","setUser","ngOnDestroy","unsubscribe","sb","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///"}