{"version":3,"file":"src_app_pages_user_user_module_ts.e8f46391db77490e.js","mappings":"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","sources":["./src/app/pages/user/change-password/change-password.component.ts","./src/app/pages/user/change-password/change-password.component.html","./src/app/pages/user/notification/notification.component.ts","./src/app/pages/user/profile/profile.component.ts","./src/app/pages/user/profile/profile.component.html","./src/app/pages/user/user.module.ts","./src/app/theme/layout/index.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/core/services/user/user.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss'],\n})\nexport class ChangePasswordComponent implements OnInit {\n  myForm: FormGroup;\n  submitted = false;\n  passMisMatch = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private router: Router\n  ) {\n    this.myForm = this.formBuilder.group({\n      oldPassword: ['', Validators.required],\n      newPassword: [\n        '',\n        Validators.compose([Validators.required, Validators.minLength(6)]),\n      ],\n      confirmNewPassword: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {}\n\n  get f() {\n    return this.myForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    // console.log(this.myForm.value);\n    if (this.myForm.invalid) {\n      return;\n    }\n\n    if (\n      this.myForm.value.newPassword !== this.myForm.value.confirmNewPassword\n    ) {\n      this.passMisMatch = true;\n      return;\n    } else {\n      this.passMisMatch = false;\n    }\n\n    const payload = {\n      fkAdminId: localStorage.getItem('userId'),\n      strOldPaswd: this.myForm.value.oldPassword,\n      strNewPaswd: this.myForm.value.newPassword,\n    };\n    this.userService.updatePassword(payload).subscribe((res) => {\n      if (res.success) {\n        Swal.fire('Success', res.message, 'success');\n        this.router.navigate(['/user/profile']);\n      } else {\n        Swal.fire('Error', res.message, 'error');\n      }\n    });\n  }\n}\n","<div class=\"w-full\">\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"card-title\">\n        <h4 class=\"mb-0\">Change Password</h4>\n      </div>\n\n      <form [formGroup]=\"myForm\">\n        <table>\n          <tr>\n            <td>\n              <label for=\"oldPassword\">Old Password</label>\n            </td>\n            <td class=\"w-2/3 p-2\">\n              <input\n                id=\"oldPassword\"\n                type=\"text\"\n                class=\"form-control form-control-solid\"\n                formControlName=\"oldPassword\"\n                placeholder=\"Old Password\"\n              />\n              <div\n                *ngIf=\"submitted && f.oldPassword.errors\"\n                class=\"text-red-500\"\n              >\n                <small *ngIf=\"f.oldPassword.errors.required\">\n                  Old Password is required\n                </small>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <label for=\"newPassword\">New Password</label>\n            </td>\n            <td class=\"w-2/3 p-2\">\n              <input\n                id=\"newPassword\"\n                type=\"text\"\n                class=\"form-control form-control-solid\"\n                formControlName=\"newPassword\"\n                placeholder=\"New Password\"\n              />\n              <div\n                *ngIf=\"submitted && f.newPassword.errors\"\n                class=\"text-red-500\"\n              >\n                <small *ngIf=\"f.newPassword.errors.required\">\n                  New Password is required\n                </small>\n                <small *ngIf=\"f.newPassword.errors.minlength\">\n                  Password length should be at least 6 characters\n                </small>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <label for=\"confirmNewPassword\">Confirm New Password</label>\n            </td>\n            <td class=\"w-2/3 p-2\">\n              <input\n                id=\"confirmNewPassword\"\n                type=\"text\"\n                class=\"form-control form-control-solid\"\n                placeholder=\"Confirm New Password\"\n                formControlName=\"confirmNewPassword\"\n              />\n              <div\n                *ngIf=\"submitted && f.confirmNewPassword.errors\"\n                class=\"text-red-500\"\n              >\n                <small *ngIf=\"f.confirmNewPassword.errors.required\">\n                  Confirm New Password is required\n                </small>\n              </div>\n              <div class=\"text-red-500\" *ngIf=\"submitted && passMisMatch\">\n                <small> Passwords do not match </small>\n              </div>\n            </td>\n          </tr>\n        </table>\n      </form>\n\n      <div class=\"text-right\">\n        <button class=\"btn btn-primary btn-sm\" (click)=\"onSubmit()\">\n          Change Password\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.scss'],\n})\nexport class NotificationComponent implements OnInit {\n  arrNotifications: any = [];\n\n  // constructor(private userService: UserService) {}\n\n  ngOnInit(): void {\n    // this.getPushNotification();\n  }\n\n  // getPushNotification() {\n  //   const obj = {\n  //     fkAdminId: localStorage.getItem('userId'),\n  //     intSkipCount: '0',\n  //     intLimitCount: '100',\n  //   };\n\n  //   this.userService.getPushNotification(obj).subscribe((res) => {\n  //     if (res.success) {\n  //       this.arrNotifications = res.data;\n  //     } else {\n  //       this.arrNotifications = [];\n  //     }\n  //   });\n  // }\n\n  redirectTo(link) {\n    if (link) {\n      window.open(link, '_blank');\n    }\n  }\n\n  // markAllAsRead() {\n  //   const arr = this.arrNotifications.map((item) => {\n  //     return item._id;\n  //   });\n  //   console.log('arr', arr);\n  //   const obj = {\n  //     fkPushArray: arr,\n  //   };\n\n  //   this.userService.pushStatusChange(obj).subscribe((res) => {\n  //     if (res.success) {\n  //       this.getPushNotification();\n  //     }\n  //   });\n  // }\n\n  // markAsRead(id) {\n  //   console.log('id', id);\n\n  //   const obj = {\n  //     fkPushArray: [id],\n  //   };\n\n  //   this.userService.pushStatusChange(obj).subscribe((res) => {\n  //     if (res.success) {\n  //       this.getPushNotification();\n  //     }\n  //   });\n  // }\n\n  // clearAll() {\n  //   console.log('clearAll');\n\n  //   const obj = {\n  //     fkAdminId: localStorage.getItem('userId'),\n  //   };\n\n  //   this.userService.clearAllPush(obj).subscribe((res) => {\n  //     if (res.success) {\n  //       this.getPushNotification();\n  //     }\n  //   });\n  // }\n}\n","import { AfterViewChecked, Component } from '@angular/core';\nimport { PageInfoService } from 'src/app/theme/layout';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n})\nexport class ProfileComponent implements AfterViewChecked {\n  username: string = '';\n  email: string = '';\n  role: string = '';\n  level: string = '';\n  suppliers: any[] = [];\n  supType: string = '';\n\n  constructor(private pageInfoService: PageInfoService) {\n    this.username = localStorage.getItem('userName') || '';\n    this.email = localStorage.getItem('email') || '';\n    this.role = localStorage.getItem('role') || '';\n    this.level = localStorage.getItem('userLevel') || '';\n    this.supType = localStorage.getItem('supType') || '';\n    this.suppliers = JSON.parse(localStorage.getItem('supList') || '[]');\n  }\n\n  ngAfterViewChecked() {\n    this.pageInfoService.updateTitle('Profile');\n  }\n}\n","<div class=\"card w-full\">\n  <div class=\"card-body\">\n    <div class=\"flex max-md:flex-col gap-4\">\n      <div\n        class=\"h-24 w-24 rounded bg-primary font-semibold text-4xl flex justify-center items-center text-white flex-shrink-0\"\n      >\n        {{ username.charAt(0) }}\n      </div>\n      <div class=\"flex-1\">\n        <p class=\"card-text\">\n          <b>Name:</b>\n          {{ username }}\n        </p>\n        <p class=\"card-text\">\n          <b>Email:</b>\n          {{ email }}\n        </p>\n        <p class=\"card-text\">\n          <b>Role:</b>\n\n          <span class=\"badge badge-light-info fw-bolder fs-8 px-2 py-1 ms-2\">\n            {{ role }}\n          </span>\n        </p>\n        <p class=\"card-text\" *ngIf=\"role === 'INTERNAL'\">\n          <b>Level:</b>\n          <span class=\"badge badge-light-success fw-bolder fs-8 px-2 py-1 ms-2\">\n            Level {{ level }}\n          </span>\n        </p>\n        <p class=\"card-text\" *ngIf=\"role === 'INTERNAL'\">\n          <b>Suppliers:</b>\n          <span\n            class=\"badge badge-light-primary fw-bolder fs-8 px-2 py-1 ms-2\"\n            *ngIf=\"supType === 'ALL'\"\n          >\n            ACCESS TO ALL SUPPLIERS\n          </span>\n          <span\n            class=\"badge badge-light-primary fw-bolder fs-8 px-2 py-1 mx-2 my-1\"\n            *ngFor=\"let sup of suppliers\"\n          >\n            {{ sup.supp_No }} - {{ sup.Vendor_Name }}\n          </span>\n        </p>\n        <div class=\"text-right\">\n          <a class=\"btn btn-primary btn-sm\" [routerLink]=\"['change-password']\">\n            Change Password\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NotificationComponent } from './notification/notification.component';\n\n@NgModule({\n  declarations: [\n    ProfileComponent,\n    ChangePasswordComponent,\n    NotificationComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        redirectTo: 'profile',\n        pathMatch: 'full',\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent,\n      },\n      {\n        path: 'notification',\n        component: NotificationComponent,\n      },\n      {\n        path: 'profile/change-password',\n        component: ChangePasswordComponent,\n      },\n    ]),\n  ],\n})\nexport class UserModule {}\n","export * from './layout.module';\r\nexport * from './core/layout.service';\r\nexport * from './core/page-info.service';\r\n"],"names":[],"sourceRoot":"webpack:///"}