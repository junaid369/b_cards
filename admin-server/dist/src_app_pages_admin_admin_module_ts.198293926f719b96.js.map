{"version":3,"file":"src_app_pages_admin_admin_module_ts.198293926f719b96.js","mappings":"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","sources":["./src/app/core/services/internal-team/internal-team.service.ts","./src/app/core/services/pagination/pager.service.ts","./src/app/pages/admin/admin.module.ts","./src/app/pages/admin/create-admin/create-admin.component.ts","./src/app/pages/admin/create-admin/create-admin.component.html","./src/app/pages/admin/manage-admin/manage-admin.component.ts","./src/app/pages/admin/manage-admin/manage-admin.component.html","./src/app/pages/admin/update-admin/update-admin.component.ts","./src/app/pages/admin/update-admin/update-admin.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CommonService } from '../common/common.service';\r\nimport { ApiResponse } from '../../model/api-response.models';\r\nimport { catchError, retry } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class InternalTeamService {\r\n  private apiURL: string = environment.API_ENDPOINT;\r\n\r\n  constructor(private http: HttpClient, private commonService: CommonService) {}\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      Authorization: 'bearer ' + localStorage.getItem('token'),\r\n    }),\r\n  };\r\n\r\n  getAllAdminModules() {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        this.apiURL + 'admin/get_admin_modules',\r\n        {},\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.commonService.handleError));\r\n  }\r\n  addInternalTeamAdmin(obj: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        this.apiURL + 'admin/add_admins',\r\n        obj,\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.commonService.handleError));\r\n  }\r\n  getAllAdmin(obj: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        this.apiURL + 'admin/get_all_admins',\r\n        obj,\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.commonService.handleError));\r\n  }\r\n  updateInternalTeamAdmin(obj: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        this.apiURL + 'admin/update_admins',\r\n        obj,\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.commonService.handleError));\r\n  }\r\n  deleteInternalTeamAdmin(obj: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        this.apiURL + 'admin/update_admins',\r\n        obj,\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.commonService.handleError));\r\n  }\r\n  updateAdminPassword(obj: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        this.apiURL + 'admin/update_admin_passwd',\r\n        obj,\r\n        this.httpOptions\r\n      )\r\n      .pipe(catchError(this.commonService.handleError));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PagerService {\r\n  constructor() {}\r\n\r\n  showPagelist: any[] = [\r\n    { count: 50 },\r\n    { count: 100 },\r\n    { count: 150 },\r\n    { count: 200 },\r\n  ];\r\n\r\n  getPager(totalItems: number, currentPage: number = 1, pageSize: number = 10) {\r\n    // calculate total pages\r\n    let totalPages = Math.ceil(totalItems / pageSize);\r\n    let intSkipCount = 0;\r\n    let startPage: number, endPage: number;\r\n    if (totalPages <= 10) {\r\n      // less than 10 total pages so show all\r\n      startPage = 1;\r\n      endPage = totalPages;\r\n    } else {\r\n      // more than 10 total pages so calculate start and end pages\r\n      if (currentPage <= 6) {\r\n        startPage = 1;\r\n        endPage = 10;\r\n      } else if (currentPage + 4 >= totalPages) {\r\n        startPage = totalPages - 9;\r\n        endPage = totalPages;\r\n      } else {\r\n        startPage = currentPage - 5;\r\n        endPage = currentPage + 4;\r\n      }\r\n    }\r\n\r\n    // calculate start and end item indexes\r\n    let startIndex = (currentPage - 1) * pageSize;\r\n    let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n    // create an array of pages to ng-repeat in the pager control\r\n    /*let pages = _.range(startPage, endPage + 1);*/\r\n    let pages: any = [];\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pages.push(i);\r\n    }\r\n    /* let pages = 5;*/\r\n\r\n    // Skip Query value\r\n    if (currentPage !== 1) intSkipCount = (currentPage - 1) * pageSize;\r\n    // return object with all pager properties required by the view\r\n    return {\r\n      totalItems: totalItems,\r\n      currentPage: currentPage,\r\n      pageSize: pageSize,\r\n      totalPages: totalPages,\r\n      startPage: startPage,\r\n      endPage: endPage,\r\n      startIndex: startIndex,\r\n      endIndex: endIndex,\r\n      pages: pages,\r\n      intSkipCount: intSkipCount,\r\n    };\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { InlineSVGModule } from 'ng-inline-svg-2';\r\nimport { WidgetsModule } from 'src/app/theme/partials';\r\nimport { CreateAdminComponent } from './create-admin/create-admin.component';\r\nimport { ManageAdminComponent } from './manage-admin/manage-admin.component';\r\nimport { UpdateAdminComponent } from './update-admin/update-admin.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CreateAdminComponent,\r\n    ManageAdminComponent,\r\n    UpdateAdminComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgbTooltipModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    InlineSVGModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: ManageAdminComponent,\r\n      },\r\n      {\r\n        path: 'create',\r\n        component: CreateAdminComponent,\r\n      },\r\n      {\r\n        path: 'update/:id',\r\n        component: UpdateAdminComponent,\r\n      },\r\n    ]),\r\n    WidgetsModule,\r\n  ],\r\n})\r\nexport class InternalTeamModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { InternalTeamService } from 'src/app/core/services/internal-team/internal-team.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-create-admin',\r\n  templateUrl: './create-admin.component.html',\r\n  styleUrls: ['./create-admin.component.scss'],\r\n})\r\nexport class CreateAdminComponent implements OnInit {\r\n  private dataUrl = 'assets/data/country.json';\r\n\r\n  arrCountries: any[] = [];\r\n  arrAdminModules: any[] = [];\r\n\r\n  arrModules: any[] = [];\r\n\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private readonly http: HttpClient,\r\n    private internalTeamService: InternalTeamService,\r\n    private router: Router\r\n  ) {\r\n    this.myForm = this.formBuilder.group({\r\n      strUserName: ['', Validators.required],\r\n      strPhone: ['', Validators.required],\r\n      strEmail: ['', [Validators.required, Validators.email]],\r\n      strPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n      strCountry: [null, Validators.required],\r\n      strUserType: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllAdminModules();\r\n    this.getCountryData();\r\n  }\r\n\r\n  get f() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  getAllAdminModules() {\r\n    this.internalTeamService.getAllAdminModules().subscribe((res) => {\r\n      if (res.success) {\r\n        this.arrAdminModules = res.data;\r\n      } else {\r\n        this.arrAdminModules = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  getCountryData() {\r\n    this.http.get(this.dataUrl).subscribe((data: any) => {\r\n      this.arrCountries = data;\r\n    });\r\n  }\r\n\r\n  onChangeCheckboxAll(event) {\r\n    if (event.target.checked) {\r\n      this.arrModules = this.arrAdminModules.map((m) => {\r\n        return { ...m, checked: true };\r\n      });\r\n    } else {\r\n      this.arrModules = [];\r\n    }\r\n  }\r\n\r\n  changeUserType() {\r\n    if (this.myForm.value.strUserType == 1) {\r\n      this.arrModules = this.arrAdminModules.map((m) => {\r\n        return { ...m, checked: true };\r\n      });\r\n    }\r\n  }\r\n\r\n  isCheckedAll(): boolean {\r\n    return this.arrModules.length === this.arrAdminModules.length;\r\n  }\r\n\r\n  isCheckedMod(moduleId) {\r\n    if (this.arrModules.filter((m) => m.fkModuleId === moduleId).length)\r\n      return this.arrModules.filter((m) => m.fkModuleId === moduleId)[0]\r\n        .checked;\r\n  }\r\n  onChangeCheckboxModule(moduleId, event) {\r\n    const mod = this.arrAdminModules.find((m) => m.fkModuleId === moduleId);\r\n\r\n    mod.checked = event.target.checked;\r\n    if (event.target.checked) {\r\n      this.arrModules.push(mod);\r\n    } else {\r\n      this.arrModules = this.arrModules.filter(\r\n        (m) => m.fkModuleId !== moduleId\r\n      );\r\n    }\r\n  }\r\n\r\n  isCheckedSubMod(subModuleId) {\r\n    for (const module of this.arrModules) {\r\n      const subModule = module.arrSubModule?.find(\r\n        (sm) => sm._id === subModuleId\r\n      );\r\n      if (subModule) {\r\n        return subModule.checked;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onChangeCheckboxSubModule(subModuleId, event) {\r\n    for (const module of this.arrAdminModules) {\r\n      const subModule = module.arrSubModule?.find(\r\n        (sm) => sm._id === subModuleId\r\n      );\r\n      if (subModule) {\r\n        subModule.checked = event.target.checked;\r\n\r\n        if (event.target.checked) {\r\n          if (\r\n            !this.arrModules.find((m) => m.fkModuleId === module.fkModuleId)\r\n          ) {\r\n            this.arrModules.push({ ...module, arrSubModule: [subModule] });\r\n          } else {\r\n            const mod = this.arrModules.find(\r\n              (m) => m.fkModuleId === module.fkModuleId\r\n            );\r\n            mod.arrSubModule = [...(mod.arrSubModule || []), subModule];\r\n          }\r\n        } else {\r\n          const mod = this.arrModules.find(\r\n            (m) => m.fkModuleId === module.fkModuleId\r\n          );\r\n          if (mod) {\r\n            mod.arrSubModule = mod.arrSubModule.filter(\r\n              (sm) => sm._id !== subModuleId\r\n            );\r\n            if (mod.arrSubModule.length === 0) {\r\n              this.arrModules = this.arrModules.filter(\r\n                (m) => m.fkModuleId !== module.fkModuleId\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  resetForm() {\r\n    this.myForm.reset();\r\n    this.arrModules = [];\r\n    this.submitted = false;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.arrModules.map((module) => {\r\n      if (module.arrSubModule) {\r\n        module.subModules = module.arrSubModule;\r\n        delete module.arrSubModule;\r\n      }\r\n      return module;\r\n    });\r\n\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      strEmail: this.myForm.value.strEmail,\r\n      strName: this.myForm.value.strUserName,\r\n      strPassword: this.myForm.value.strPassword,\r\n      phoneNo: this.myForm.value.strPhone,\r\n      strcountry: this.myForm.value.strCountry,\r\n      strUserType: this.myForm.value.strUserType,\r\n      strStatus: 'N',\r\n      arryModuleDetails: this.arrModules,\r\n    };\r\n\r\n    this.internalTeamService.addInternalTeamAdmin(obj).subscribe((res) => {\r\n      if (res.success) {\r\n        Swal.fire({\r\n          title: 'Success',\r\n          text: 'You created Admin',\r\n          icon: 'success',\r\n        }).then((value) => {\r\n          if (value) {\r\n            this.myForm.reset();\r\n            this.arrModules = [];\r\n            this.submitted = false;\r\n            this.router.navigate(['/admin']);\r\n          }\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: res.message,\r\n          icon: 'error',\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!--begin::Col-->\r\n<div class=\"col-md-12 col-lg-12 md-m-5\">\r\n  <div class=\"card\">\r\n    <!-- begin::Header -->\r\n    <div class=\"card-header border-0\">\r\n      <h3 class=\"card-title fw-bold text-dark\">Create Admin</h3>\r\n    </div>\r\n    <!-- end::Header -->\r\n    <!-- begin::Body -->\r\n    <div class=\"card-body pt-2\">\r\n      <!-- begin::Item -->\r\n      <form [formGroup]=\"myForm\">\r\n        <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-3\">\r\n          <div>\r\n            <label for=\"name\">\r\n              <span class=\"required\"> Username </span>\r\n            </label>\r\n            <input\r\n              type=\"name\"\r\n              class=\"form-control form-control-solid\"\r\n              placeholder=\"Username\"\r\n              id=\"name\"\r\n              formControlName=\"strUserName\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && f.strUserName.errors\r\n              }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.strUserName.errors\" class=\"text-red-500\">\r\n              <div *ngIf=\"f.strUserName.errors.required\">User required</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"Phone\">\r\n              <span class=\"required\"> Phone </span>\r\n            </label>\r\n            <input\r\n              type=\"tel\"\r\n              class=\"form-control form-control-solid\"\r\n              placeholder=\"Phone\"\r\n              id=\"Phone\"\r\n              formControlName=\"strPhone\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && f.strPhone.errors\r\n              }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.strPhone.errors\" class=\"text-red-500\">\r\n              <div *ngIf=\"f.strPhone.errors.required\">Phone requires</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"email\">\r\n              <span class=\"required\"> Email </span>\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              class=\"form-control form-control-solid\"\r\n              placeholder=\"Email\"\r\n              id=\"email\"\r\n              formControlName=\"strEmail\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && f.strEmail.errors\r\n              }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.strEmail.errors\" class=\"text-red-500\">\r\n              <div *ngIf=\"f.strEmail.errors.required\">Email required</div>\r\n              <div *ngIf=\"f.strEmail.errors.email\">\r\n                Email format is wrong. Please type in proper format\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"password\">\r\n              <span class=\"required\"> Password </span>\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control form-control-solid\"\r\n              placeholder=\"Password\"\r\n              id=\"password\"\r\n              formControlName=\"strPassword\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && f.strPassword.errors\r\n              }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.strPassword.errors\" class=\"text-red-500\">\r\n              <div *ngIf=\"f.strPassword.errors.required\">Password requires</div>\r\n              <div *ngIf=\"f.strPassword.errors.minlength\">\r\n                Password must be more than 6 characters\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"user Type\">\r\n              <span class=\"required\"> User Type </span>\r\n            </label>\r\n            <select\r\n              class=\"form-control form-control-solid\"\r\n              formControlName=\"strUserType\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && f.strUserType.errors\r\n              }\"\r\n              (change)=\"changeUserType()\"\r\n              id=\"user Type\"\r\n            >\r\n              <option value=\"\">Choose User Type</option>\r\n              <option [value]=\"1\">Admin</option>\r\n              <option [value]=\"2\">Sub Admin</option>\r\n            </select>\r\n            <div *ngIf=\"submitted && f.strUserType.errors\" class=\"text-red-500\">\r\n              <div *ngIf=\"f.strUserType.errors.required\">\r\n                User Type is required\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"country\">\r\n              <span class=\"required\"> Country </span>\r\n            </label>\r\n            <ng-select\r\n              [items]=\"arrCountries\"\r\n              bindLabel=\"name\"\r\n              bindValue=\"name\"\r\n              formControlName=\"strCountry\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && f.strCountry.errors\r\n              }\"\r\n              placeholder=\"Choose a country\"\r\n            >\r\n            </ng-select>\r\n            <div *ngIf=\"submitted && f.strCountry.errors\" class=\"text-red-500\">\r\n              <div *ngIf=\"f.strCountry.errors.required\">Country required</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"form-group col-md-12 mt-5\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8\">\r\n            <h3 class=\"text-base m-0\">Internal team access Modules</h3>\r\n            <p class=\"text-sm text-gray-500 mb-1\">Modules which can</p>\r\n            <div\r\n              *ngIf=\"submitted && arrModules.length === 0\"\r\n              class=\"text-red-500 mb-2\"\r\n            >\r\n              <div>Choose Internal team access module</div>\r\n            </div>\r\n            <div class=\"table-responsive border px-3 rounded\">\r\n              <table\r\n                class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>\r\n                      <div\r\n                        class=\"form-check form-check-sm form-check-custom form-check-solid\"\r\n                      >\r\n                        <input\r\n                          id=\"selectAll\"\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          (change)=\"onChangeCheckboxAll($event)\"\r\n                          [checked]=\"isCheckedAll()\"\r\n                        />\r\n                      </div>\r\n                    </th>\r\n                    <th>\r\n                      <label for=\"selectAll\" class=\"ml-2\"> <b>Title</b> </label>\r\n                    </th>\r\n                    <th>\r\n                      <label class=\"ml-2\"> <b>Sub Title</b> </label>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let module of arrAdminModules\">\r\n                    <td>\r\n                      <div\r\n                        class=\"form-check form-check-sm form-check-custom form-check-solid\"\r\n                      >\r\n                        <input\r\n                          id=\"{{ module.fkModuleId }}\"\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          [checked]=\"isCheckedMod(module.fkModuleId)\"\r\n                          (change)=\"\r\n                            onChangeCheckboxModule(module.fkModuleId, $event)\r\n                          \"\r\n                        />\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <label for=\"{{ module.fkModuleId }}\" class=\"ml-2\">\r\n                        {{ module.title }}\r\n                      </label>\r\n                    </td>\r\n\r\n                    <td>\r\n                      <div *ngFor=\"let submodule of module.arrSubModule\">\r\n                        <div\r\n                          class=\"form-check form-check-sm form-check-custom form-check-solid mb-2\"\r\n                        >\r\n                          <input\r\n                            id=\"{{ submodule._id }}\"\r\n                            class=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            [checked]=\"isCheckedSubMod(submodule._id)\"\r\n                            (change)=\"\r\n                              onChangeCheckboxSubModule(submodule._id, $event)\r\n                            \"\r\n                          />\r\n                          <label for=\"{{ submodule._id }}\" class=\"ml-2\">{{\r\n                            submodule.title\r\n                          }}</label>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"grid grid-cols-2 md:grid-cols-6 gap-2 mt-4\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <button class=\"btn btn-light-primary\" (click)=\"resetForm()\">\r\n          Clear\r\n        </button>\r\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">Create</button>\r\n      </div>\r\n    </div>\r\n    <!-- end::Body -->\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { InternalTeamService } from 'src/app/core/services/internal-team/internal-team.service';\r\nimport { PagerService } from 'src/app/core/services/pagination/pager.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-manage-admin',\r\n  templateUrl: './manage-admin.component.html',\r\n  styleUrls: ['./manage-admin.component.scss'],\r\n})\r\nexport class ManageAdminComponent implements OnInit {\r\n  arrInternal: any = [];\r\n\r\n  // pagination\r\n  pager: any = {};\r\n  intTotalCount = 0;\r\n  intPageLimit = 50;\r\n  intSkipCount = 0;\r\n  fetchLoading = false;\r\n\r\n  constructor(\r\n    private internalTeamService: InternalTeamService,\r\n    private pageServiceObj: PagerService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getAllAdmin();\r\n  }\r\n\r\n  setPage(page) {\r\n    if (page < 1 || page > this.pager.totalPages) {\r\n      return;\r\n    }\r\n    this.pager = this.pageServiceObj.getPager(\r\n      this.intTotalCount,\r\n      page,\r\n      this.intPageLimit\r\n    );\r\n    this.getAllAdmin();\r\n  }\r\n\r\n  getFromCount() {\r\n    return this.intPageLimit * (this.pager.currentPage - 1) + 1;\r\n  }\r\n\r\n  getToCount() {\r\n    return (\r\n      this.intPageLimit * (this.pager.currentPage - 1) + this.arrInternal.length\r\n    );\r\n  }\r\n  getAllAdmin() {\r\n    let skipCount = this.intSkipCount;\r\n    if (this.pager.intSkipCount) {\r\n      skipCount = this.pager.intSkipCount;\r\n    }\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      intSkipCount: skipCount,\r\n      intPageLimit: this.intPageLimit,\r\n\r\n      fkAdminId: '',\r\n      strStatus: '',\r\n      strUserType: '', //1 or 2\r\n    };\r\n\r\n    this.fetchLoading = true;\r\n    this.internalTeamService.getAllAdmin(obj).subscribe((res) => {\r\n      this.fetchLoading = false;\r\n      if (res.success) {\r\n        this.arrInternal = res.data;\r\n\r\n        this.intTotalCount = res.count;\r\n\r\n        this.pager = this.pageServiceObj.getPager(\r\n          this.intTotalCount,\r\n          this.pager.currentPage,\r\n          this.intPageLimit\r\n        );\r\n      } else {\r\n        this.arrInternal = [];\r\n        // alert(res.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteAdmin(id) {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#d33',\r\n      reverseButtons: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const obj = {\r\n          strLoginUserId: localStorage.getItem('userId'),\r\n          fkAdminId: id,\r\n          strStatus: 'D', //n for approve and p for pending . default its p\r\n        };\r\n\r\n        this.internalTeamService\r\n          .deleteInternalTeamAdmin(obj)\r\n          .subscribe((res) => {\r\n            if (res.success) {\r\n              Swal.fire({\r\n                title: 'Deleted!',\r\n                text: 'Your file has been deleted.',\r\n                icon: 'success',\r\n              });\r\n              this.getAllAdmin();\r\n            } else {\r\n              // alert(res.message);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"text-right mb-3\">\r\n  <button class=\"btn btn-primary btn-sm\" routerLink=\"/admin/create\">\r\n    Create Admin\r\n  </button>\r\n</div>\r\n<!--begin::Row-->\r\n<div class=\"row g-5 g-xl-10\">\r\n  <div class=\"col-md-12 col-lg-12 md-m-5\">\r\n    <div class=\"card\">\r\n      <!-- begin::Body -->\r\n      <div class=\"card-body\">\r\n        <!-- begin::Table container -->\r\n\r\n        <div\r\n          class=\"table-responsive\"\r\n          *ngIf=\"arrInternal.length > 0; else noDataTemplate\"\r\n        >\r\n          <!-- begin::Table -->\r\n          <table\r\n            class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\"\r\n          >\r\n            <!-- begin::Table head -->\r\n            <thead>\r\n              <tr class=\"fw-bold text-muted\">\r\n                <th class=\"min-w-130px\">Username</th>\r\n                <th class=\"min-w-130px\">Email</th>\r\n                <th class=\"min-w-130px\">Phone</th>\r\n                <th class=\"min-w-130px\">User Type</th>\r\n                <th class=\"min-w-130px\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <!-- end::Table head -->\r\n            <!-- begin::Table body -->\r\n            <tbody>\r\n              <tr *ngFor=\"let admin of arrInternal\">\r\n                <td>{{ admin.strName }}</td>\r\n                <td>{{ admin.strEmail }}</td>\r\n                <td>{{ admin.phone }}</td>\r\n\r\n                <td>\r\n                  <span\r\n                    class=\"text-sm px-3 py-2 rounded\"\r\n                    [ngClass]=\"{\r\n                      'bg-light-success text-success ': admin.strUserType === 1,\r\n                      'bg-light-info text-info': admin.strUserType === 2\r\n                    }\"\r\n                  >\r\n                    {{ admin.strUserType === 1 ? \"ADMIN\" : \"SUB ADMIN\" }}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <div class=\"d-flex justify-content-start flex-shrink-0\">\r\n                    <a\r\n                      class=\"btn btn-icon bg-light-warning btn-active-color-warning btn-sm me-1\"\r\n                      [routerLink]=\"['/admin/update', admin.fkAdminId]\"\r\n                    >\r\n                      <span\r\n                        [inlineSVG]=\"\r\n                          './assets/media/icons/duotune/art/art005.svg'\r\n                        \"\r\n                        class=\"svg-icon svg-icon-3 svg-icon-warning\"\r\n                      ></span>\r\n                    </a>\r\n                    <a\r\n                      class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm\"\r\n                      (click)=\"deleteAdmin(admin.fkAdminId)\"\r\n                    >\r\n                      <span\r\n                        [inlineSVG]=\"\r\n                          './assets/media/icons/duotune/general/gen027.svg'\r\n                        \"\r\n                        class=\"svg-icon svg-icon-3 svg-icon-danger\"\r\n                      ></span>\r\n                    </a>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <!-- end::Table body -->\r\n          </table>\r\n          <!-- end::Table -->\r\n        </div>\r\n        <!-- end::Table container -->\r\n\r\n        <!-- begin::Empty -->\r\n        <ng-template #noDataTemplate>\r\n          <ng-container *ngIf=\"fetchLoading; else elseTemplate\">\r\n            <div class=\"d-flex flex-column align-items-center\">\r\n              <!-- begin::Illustration -->\r\n              <div class=\"text-center px-4\">\r\n                <img\r\n                  src=\"./assets/media/illustrations/dozzy-1/5.png\"\r\n                  class=\"mw-100 mh-300px animate-pulse\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <!-- end::Illustration -->\r\n\r\n              <!-- begin::Message -->\r\n              <div class=\"fw-bold text-xl text-gray-600 text-center pt-15\">\r\n                <span\r\n                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\r\n                ></span>\r\n                Loading Data...\r\n              </div>\r\n              <!-- end::Message -->\r\n            </div>\r\n          </ng-container>\r\n          <ng-template #elseTemplate>\r\n            <div class=\"d-flex flex-column align-items-center\">\r\n              <!-- begin::Illustration -->\r\n              <div class=\"text-center px-4\">\r\n                <img\r\n                  src=\"./assets/media/illustrations/sketchy-1/5.png\"\r\n                  class=\"mw-100 mh-300px\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <!-- end::Illustration -->\r\n\r\n              <!-- begin::Message -->\r\n              <div class=\"fw-bold fs-6 text-gray-600 text-center pt-15\">\r\n                No Data Found\r\n              </div>\r\n              <!-- end::Message -->\r\n            </div>\r\n          </ng-template>\r\n        </ng-template>\r\n        <!-- end::Empty -->\r\n        <!-- begin::Body -->\r\n      </div>\r\n      <!-- end::Card -->\r\n\r\n      <div\r\n        class=\"flex justify-center md:justify-between flex-col md:flex-row p-5\"\r\n        *ngIf=\"arrInternal.length > 0\"\r\n      >\r\n        <div class=\"fs-6 fw-bold text-gray-700 mb-3 md:mb-0 text-center\">\r\n          Showing {{ getFromCount() }} to {{ getToCount() }} of\r\n          {{ intTotalCount }}\r\n          entries\r\n        </div>\r\n\r\n        <ul class=\"pagination\" *ngIf=\"pager.pages && pager.pages.length\">\r\n          <li\r\n            class=\"page-item previous\"\r\n            [ngClass]=\"{ disabled: pager.currentPage === 1 }\"\r\n          >\r\n            <a\r\n              class=\"page-link cursor-pointer\"\r\n              (click)=\"setPage(pager.currentPage - 1)\"\r\n            >\r\n              <i class=\"previous\"></i>\r\n            </a>\r\n          </li>\r\n\r\n          <li\r\n            class=\"page-item\"\r\n            *ngFor=\"let page of pager.pages\"\r\n            [ngClass]=\"{ active: pager.currentPage === page }\"\r\n          >\r\n            <a class=\"page-link cursor-pointer\" (click)=\"setPage(page)\">\r\n              {{ page }}\r\n            </a>\r\n          </li>\r\n\r\n          <li\r\n            class=\"page-item next\"\r\n            [ngClass]=\"{\r\n              disabled: pager.currentPage === pager.totalPages\r\n            }\"\r\n          >\r\n            <a\r\n              class=\"page-link cursor-pointer\"\r\n              (click)=\"setPage(pager.currentPage + 1)\"\r\n            >\r\n              <i class=\"next\"></i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <!--end::Col-->\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, inject, OnInit, TemplateRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { InternalTeamService } from 'src/app/core/services/internal-team/internal-team.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-update-admin',\r\n  templateUrl: './update-admin.component.html',\r\n  styleUrls: ['./update-admin.component.scss'],\r\n})\r\nexport class UpdateAdminComponent implements OnInit {\r\n  private dataUrl = 'assets/data/country.json';\r\n\r\n  arrCountries: any[] = [];\r\n  arrAdminModules: any[] = [];\r\n\r\n  arrModules: any[] = [];\r\n  internalUser: any = {};\r\n\r\n  myForm: FormGroup;\r\n  myForm2: FormGroup;\r\n  submitted: boolean = false;\r\n  submitted2: boolean = false;\r\n  adminId = '';\r\n  private modalService = inject(NgbModal);\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private readonly http: HttpClient,\r\n    private internalTeamService: InternalTeamService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.myForm2 = this.formBuilder.group({\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n    });\r\n\r\n    this.myForm = this.formBuilder.group({\r\n      strUserName: ['', Validators.required],\r\n      strPhone: ['', Validators.required],\r\n      strEmail: ['', [Validators.required, Validators.email]],\r\n      strCountry: [null, Validators.required],\r\n      strUserType: ['', Validators.required],\r\n    });\r\n\r\n    activatedRoute.params.subscribe((params) => {\r\n      this.adminId = params.id;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCountryData();\r\n  }\r\n\r\n  get f() {\r\n    return this.myForm.controls;\r\n  }\r\n  get f2() {\r\n    return this.myForm2.controls;\r\n  }\r\n  getAdminById() {\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      fkAdminId: this.adminId,\r\n    };\r\n\r\n    this.internalTeamService.getAllAdmin(obj).subscribe((res) => {\r\n      if (res.success) {\r\n        this.internalUser = res.data[0];\r\n        this.getAllAdminModules();\r\n      } else {\r\n        this.internalUser = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  patchValue(internalUser) {\r\n    this.myForm.patchValue({\r\n      strUserName: internalUser.strName,\r\n      strPhone: internalUser.phone,\r\n      strEmail: internalUser.strEmail,\r\n      strCountry: internalUser.country,\r\n      strUserType: internalUser.strUserType,\r\n    });\r\n\r\n    this.changeUserType();\r\n    if (internalUser.arryModuleDetails.length) {\r\n      this.arrModules = this.arrAdminModules.filter((module) => {\r\n        return internalUser.arryModuleDetails.some(\r\n          (detail) => detail.fkModuleId === module.fkModuleId\r\n        );\r\n      });\r\n\r\n      this.arrModules = this.arrModules.map((module) => {\r\n        const moduleDetail = internalUser.arryModuleDetails.find(\r\n          (detail) => detail.fkModuleId === module.fkModuleId\r\n        );\r\n\r\n        // Set the module checked property\r\n        module.checked = true;\r\n\r\n        // If the module has subModules, set their checked property based on moduleDetail.subModules\r\n        if (module.arrSubModule && module.arrSubModule.length > 0) {\r\n          module.arrSubModule = module.arrSubModule.map((subModule) => {\r\n            subModule.checked = moduleDetail.subModules.includes(subModule._id);\r\n            return subModule;\r\n          });\r\n        }\r\n\r\n        return module;\r\n      });\r\n    }\r\n  }\r\n  getAllAdminModules() {\r\n    this.internalTeamService.getAllAdminModules().subscribe((res) => {\r\n      if (res.success) {\r\n        this.arrAdminModules = res.data;\r\n        this.patchValue(this.internalUser);\r\n      } else {\r\n        this.arrAdminModules = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  getCountryData() {\r\n    this.http.get(this.dataUrl).subscribe((data: any) => {\r\n      this.arrCountries = data;\r\n      this.getAdminById();\r\n    });\r\n  }\r\n\r\n  onChangeCheckboxAll(event) {\r\n    if (event.target.checked) {\r\n      this.arrModules = this.arrAdminModules.map((m) => {\r\n        return { ...m, checked: true };\r\n      });\r\n    } else {\r\n      this.arrModules = [];\r\n    }\r\n  }\r\n\r\n  changeUserType() {\r\n    if (this.myForm.value.strUserType == 1) {\r\n      this.arrModules = this.arrAdminModules.map((m) => {\r\n        return { ...m, checked: true };\r\n      });\r\n    }\r\n  }\r\n\r\n  isCheckedAll(): boolean {\r\n    return this.arrModules.length === this.arrAdminModules.length;\r\n  }\r\n\r\n  isCheckedMod(moduleId) {\r\n    if (this.arrModules.filter((m) => m.fkModuleId === moduleId).length)\r\n      return this.arrModules.filter((m) => m.fkModuleId === moduleId)[0]\r\n        .checked;\r\n  }\r\n  onChangeCheckboxModule(moduleId, event) {\r\n    const mod = this.arrAdminModules.find((m) => m.fkModuleId === moduleId);\r\n\r\n    mod.checked = event.target.checked;\r\n    if (event.target.checked) {\r\n      this.arrModules.push(mod);\r\n    } else {\r\n      this.arrModules = this.arrModules.filter(\r\n        (m) => m.fkModuleId !== moduleId\r\n      );\r\n    }\r\n  }\r\n  isCheckedSubMod(subModuleId) {\r\n    for (const module of this.arrModules) {\r\n      const subModule = module.arrSubModule?.find(\r\n        (sm) => sm._id === subModuleId\r\n      );\r\n      if (subModule) {\r\n        return subModule.checked;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onChangeCheckboxSubModule(subModuleId, event) {\r\n    for (const module of this.arrAdminModules) {\r\n      const subModule = module.arrSubModule?.find(\r\n        (sm) => sm._id === subModuleId\r\n      );\r\n      if (subModule) {\r\n        subModule.checked = event.target.checked;\r\n\r\n        if (event.target.checked) {\r\n          if (\r\n            !this.arrModules.find((m) => m.fkModuleId === module.fkModuleId)\r\n          ) {\r\n            this.arrModules.push({ ...module, arrSubModule: [subModule] });\r\n          } else {\r\n            const mod = this.arrModules.find(\r\n              (m) => m.fkModuleId === module.fkModuleId\r\n            );\r\n            mod.arrSubModule = [...(mod.arrSubModule || []), subModule];\r\n          }\r\n        } else {\r\n          const mod = this.arrModules.find(\r\n            (m) => m.fkModuleId === module.fkModuleId\r\n          );\r\n          if (mod) {\r\n            mod.arrSubModule = mod.arrSubModule.filter(\r\n              (sm) => sm._id !== subModuleId\r\n            );\r\n            if (mod.arrSubModule.length === 0) {\r\n              this.arrModules = this.arrModules.filter(\r\n                (m) => m.fkModuleId !== module.fkModuleId\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  open(content: TemplateRef<any>) {\r\n    this.modalService.open(content, {\r\n      ariaLabelledBy: 'modal-basic-title',\r\n      size: 'md',\r\n    });\r\n  }\r\n\r\n  updatePassword() {\r\n    this.submitted2 = true;\r\n\r\n    if (this.myForm2.invalid) {\r\n      return;\r\n    }\r\n\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      fkAdminId: this.adminId,\r\n      strPassword: this.myForm2.value.password,\r\n    };\r\n\r\n    console.log('obj', obj);\r\n    this.internalTeamService.updateAdminPassword(obj).subscribe((res) => {\r\n      if (res.success) {\r\n        Swal.fire({\r\n          title: 'Success',\r\n          text: 'Password updated successfully',\r\n          icon: 'success',\r\n        }).then((value) => {\r\n          this.modalService.dismissAll();\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: res.message,\r\n          icon: 'error',\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    this.myForm.reset();\r\n    this.arrModules = [];\r\n    this.submitted = false;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.myForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.arrModules.map((module) => {\r\n      if (module.arrSubModule) {\r\n        module.subModules = module.arrSubModule;\r\n        delete module.arrSubModule;\r\n      }\r\n      return module;\r\n    });\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      fkAdminId: this.adminId,\r\n      strEmail: this.myForm.value.strEmail,\r\n      strName: this.myForm.value.strUserName,\r\n      phoneNo: this.myForm.value.strPhone,\r\n      strcountry: this.myForm.value.strCountry,\r\n      strUserType: this.myForm.value.strUserType,\r\n      strStatus: 'N',\r\n      arryModuleDetails: this.arrModules,\r\n    };\r\n\r\n    this.internalTeamService.updateInternalTeamAdmin(obj).subscribe((res) => {\r\n      if (res.success) {\r\n        Swal.fire({\r\n          title: 'Success',\r\n          text: 'You updated Admin',\r\n          icon: 'success',\r\n        }).then((value) => {\r\n          if (value) {\r\n            this.myForm.reset();\r\n            this.arrModules = [];\r\n            this.submitted = false;\r\n            this.router.navigate(['/admin']);\r\n          }\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: res.message,\r\n          icon: 'error',\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!--begin::Col-->\r\n<div class=\"col-md-12 col-lg-12 md-m-5\">\r\n  <div class=\"card\">\r\n    <!-- begin::Header -->\r\n    <div class=\"card-header border-0\">\r\n      <h3 class=\"card-title fw-bold text-dark\">Update Admin</h3>\r\n    </div>\r\n    <!-- end::Header -->\r\n    <!-- begin::Body -->\r\n    <div class=\"card-body pt-2\">\r\n      <!-- begin::Item -->\r\n      <form [formGroup]=\"myForm\">\r\n        <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-3\">\r\n          <div>\r\n            <label for=\"name\">\r\n              <span class=\"required\"> Username </span>\r\n            </label>\r\n            <input\r\n              type=\"name\"\r\n              class=\"form-control form-control-solid\"\r\n              placeholder=\"Username\"\r\n              id=\"name\"\r\n              formControlName=\"strUserName\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && f.strUserName.errors\r\n              }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.strUserName.errors\" class=\"text-red-500\">\r\n              <div *ngIf=\"f.strUserName.errors.required\">User required</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"Phone\">\r\n              <span class=\"required\"> Phone </span>\r\n            </label>\r\n            <input\r\n              type=\"tel\"\r\n              class=\"form-control form-control-solid\"\r\n              placeholder=\"Phone\"\r\n              id=\"Phone\"\r\n              formControlName=\"strPhone\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && f.strPhone.errors\r\n              }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.strPhone.errors\" class=\"text-red-500\">\r\n              <div *ngIf=\"f.strPhone.errors.required\">Phone requires</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"email\">\r\n              <span class=\"required\"> Email </span>\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              class=\"form-control form-control-solid\"\r\n              placeholder=\"Email\"\r\n              id=\"email\"\r\n              formControlName=\"strEmail\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && f.strEmail.errors\r\n              }\"\r\n            />\r\n            <div *ngIf=\"submitted && f.strEmail.errors\" class=\"text-red-500\">\r\n              <div *ngIf=\"f.strEmail.errors.required\">Email required</div>\r\n              <div *ngIf=\"f.strEmail.errors.email\">\r\n                Email format is wrong. Please type in proper format\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"user Type\">\r\n              <span class=\"required\"> User Type </span>\r\n            </label>\r\n            <select\r\n              class=\"form-control form-control-solid\"\r\n              formControlName=\"strUserType\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && f.strUserType.errors\r\n              }\"\r\n              (change)=\"changeUserType()\"\r\n              id=\"user Type\"\r\n            >\r\n              <option value=\"\">Choose User Type</option>\r\n              <option [value]=\"1\">Admin</option>\r\n              <option [value]=\"2\">Sub Admin</option>\r\n            </select>\r\n            <div *ngIf=\"submitted && f.strUserType.errors\" class=\"text-red-500\">\r\n              <div *ngIf=\"f.strUserType.errors.required\">\r\n                User Type is required\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"country\">\r\n              <span class=\"required\"> Country </span>\r\n            </label>\r\n            <ng-select\r\n              [items]=\"arrCountries\"\r\n              bindLabel=\"name\"\r\n              bindValue=\"name\"\r\n              formControlName=\"strCountry\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && f.strCountry.errors\r\n              }\"\r\n              placeholder=\"Choose a country\"\r\n            >\r\n            </ng-select>\r\n            <div *ngIf=\"submitted && f.strCountry.errors\" class=\"text-red-500\">\r\n              <div *ngIf=\"f.strCountry.errors.required\">Country required</div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"\">\r\n              <span class=\"required\"> Change Password </span>\r\n            </label>\r\n            <div\r\n              class=\"form-control form-control-solid cursor-pointer\"\r\n              (click)=\"open(content)\"\r\n            >\r\n              Change Password\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div class=\"form-group col-md-12 mt-5\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-8\">\r\n            <h3 class=\"text-base m-0\">Internal team access Modules</h3>\r\n            <p class=\"text-sm text-gray-500 mb-1\">Modules which can</p>\r\n            <div\r\n              *ngIf=\"submitted && arrModules.length === 0\"\r\n              class=\"text-red-500 mb-2\"\r\n            >\r\n              <div>Choose Internal team access module</div>\r\n            </div>\r\n            <div class=\"table-responsive border px-3 rounded\">\r\n              <table\r\n                class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>\r\n                      <div\r\n                        class=\"form-check form-check-sm form-check-custom form-check-solid\"\r\n                      >\r\n                        <input\r\n                          id=\"selectAll\"\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          (change)=\"onChangeCheckboxAll($event)\"\r\n                          [checked]=\"isCheckedAll()\"\r\n                        />\r\n                      </div>\r\n                    </th>\r\n                    <th>\r\n                      <label for=\"selectAll\" class=\"ml-2\"> <b>Title</b> </label>\r\n                    </th>\r\n                    <th>\r\n                      <label class=\"ml-2\"> <b>Sub Title</b> </label>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let module of arrAdminModules\">\r\n                    <td>\r\n                      <div\r\n                        class=\"form-check form-check-sm form-check-custom form-check-solid\"\r\n                      >\r\n                        <input\r\n                          id=\"{{ module.fkModuleId }}\"\r\n                          class=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          [checked]=\"isCheckedMod(module.fkModuleId)\"\r\n                          (change)=\"\r\n                            onChangeCheckboxModule(module.fkModuleId, $event)\r\n                          \"\r\n                        />\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <label for=\"{{ module.fkModuleId }}\" class=\"ml-2\">\r\n                        {{ module.title }}\r\n                      </label>\r\n                    </td>\r\n\r\n                    <td>\r\n                      <div *ngFor=\"let submodule of module.arrSubModule\">\r\n                        <div\r\n                          class=\"form-check form-check-sm form-check-custom form-check-solid mb-2\"\r\n                        >\r\n                          <input\r\n                            id=\"{{ submodule._id }}\"\r\n                            class=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            [checked]=\"isCheckedSubMod(submodule._id)\"\r\n                            (change)=\"\r\n                              onChangeCheckboxSubModule(submodule._id, $event)\r\n                            \"\r\n                          />\r\n                          <label for=\"{{ submodule._id }}\" class=\"ml-2\">{{\r\n                            submodule.title\r\n                          }}</label>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"grid grid-cols-2 md:grid-cols-6 gap-2 mt-4\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <button class=\"btn btn-light-primary\" (click)=\"resetForm()\">\r\n          Clear\r\n        </button>\r\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">Update</button>\r\n      </div>\r\n    </div>\r\n    <!-- end::Body -->\r\n  </div>\r\n</div>\r\n\r\n<ng-template #content let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Change Password</h4>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn-close\"\r\n      aria-label=\"Close\"\r\n      (click)=\"modal.dismiss('Cross click')\"\r\n    ></button>\r\n  </div>\r\n  <div class=\"modal-body overflow-scroll\">\r\n    <!-- {{ customer | json }} -->\r\n    <form [formGroup]=\"myForm2\">\r\n      <div>\r\n        <label for=\"pass\">\r\n          <span class=\"required\"> New Password </span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control form-control-solid\"\r\n          placeholder=\"New Password\"\r\n          id=\"pass\"\r\n          formControlName=\"password\"\r\n          [ngClass]=\"{\r\n            'is-invalid': submitted2 && f2.password.errors\r\n          }\"\r\n        />\r\n        <div *ngIf=\"submitted2 && f2.password.errors\" class=\"text-red-500\">\r\n          <div *ngIf=\"f2.password.errors.required\">\r\n            Please Enter a strong Password\r\n          </div>\r\n          <div *ngIf=\"f2.password.errors.minlength\">\r\n            At least 6 character is must in the password\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"updatePassword()\">\r\n      Change Password\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n"],"names":[],"sourceRoot":"webpack:///"}