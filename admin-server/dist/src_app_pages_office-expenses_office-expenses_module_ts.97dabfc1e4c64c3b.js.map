{"version":3,"file":"src_app_pages_office-expenses_office-expenses_module_ts.97dabfc1e4c64c3b.js","mappings":"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","sources":["./src/app/core/services/office-expense/office-expense.service.ts","./src/app/pages/office-expenses/create-office-expenses/create-office-expenses.component.ts","./src/app/pages/office-expenses/create-office-expenses/create-office-expenses.component.html","./src/app/pages/office-expenses/manage-office-expenses/manage-office-expenses.component.ts","./src/app/pages/office-expenses/manage-office-expenses/manage-office-expenses.component.html","./src/app/pages/office-expenses/office-expenses.module.ts","./src/app/pages/office-expenses/update-office-expenses/update-office-expenses.component.ts","./src/app/pages/office-expenses/update-office-expenses/update-office-expenses.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { ApiResponse } from '../../model/api-response.models';\nimport { catchError, retry } from 'rxjs';\nimport { CommonService } from '../common/common.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OfficeExpenseService {\n  private apiURL: string = environment.API_ENDPOINT;\n\n  constructor(private http: HttpClient, private commonService: CommonService) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      Authorization: 'bearer ' + localStorage.getItem('token'),\n    }),\n  };\n\n  addOfficeExpense(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'expense/expense_create',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  getOfficeExpense(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'expense/get_all_expense',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  getExpenseType(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'expense/get_expense_types',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  updateOfficeExpense(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'expense/expense_update',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  deleteOfficeExpense(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'expense/expense_delete',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { OfficeExpenseService } from 'src/app/core/services/office-expense/office-expense.service';\nimport { SupplierService } from 'src/app/core/services/supplier/supplier.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-create-office-expenses',\n  templateUrl: './create-office-expenses.component.html',\n  styleUrls: ['./create-office-expenses.component.scss'],\n})\nexport class CreateOfficeExpensesComponent {\n  myForm: FormGroup;\n  submitted: boolean = false;\n  arrExpenses = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private officeExpenseService: OfficeExpenseService,\n    private readonly http: HttpClient,\n    private router: Router\n  ) {\n    this.myForm = this.formBuilder.group({\n      strExpense: [null, Validators.required],\n      Amount: ['', Validators.required],\n      tranferType: ['Debit', Validators.required],\n      expense_Date: ['', Validators.required],\n      strDescription: [''],\n    });\n    this.getMetaData();\n  }\n\n  get f() {\n    return this.myForm.controls;\n  }\n\n  getMetaData() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: 0,\n      intPageLimit: 1000000,\n    };\n\n    this.officeExpenseService.getExpenseType(obj).subscribe((data) => {\n      if (data.success) {\n        this.arrExpenses = data.data;\n      } else {\n        this.arrExpenses = [];\n      }\n    });\n  }\n\n  resetForm() {\n    this.myForm.reset();\n    this.submitted = false;\n  }\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.myForm.invalid) {\n      return;\n    }\n\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      expense_Date: this.myForm.value.expense_Date,\n      fkExpenseTypeId: this.myForm.value.strExpense._id,\n      strExpense: this.myForm.value.strExpense.expense,\n      Amount: this.myForm.value.Amount,\n      tranferType: this.myForm.value.tranferType,\n      strDescription: this.myForm.value.strDescription,\n    };\n\n    this.officeExpenseService.addOfficeExpense(obj).subscribe((res) => {\n      if (res.success) {\n        Swal.fire({\n          title: 'Success',\n          text: 'Successfully Created Expense',\n          icon: 'success',\n        }).then((value) => {\n          if (value) {\n            this.myForm.reset();\n            this.submitted = false;\n            this.router.navigate(['/office-expenses']);\n          }\n        });\n      } else {\n        Swal.fire({\n          title: 'Error',\n          text: res.message,\n          icon: 'error',\n        });\n      }\n    });\n  }\n}\n","<!--begin::Col-->\n<div class=\"col-md-12 col-lg-12 md-m-5\">\n  <div class=\"card\">\n    <!-- begin::Header -->\n    <div class=\"card-header border-0\">\n      <h3 class=\"card-title fw-bold text-dark\">Create Office Expense</h3>\n    </div>\n    <!-- end::Header -->\n    <!-- begin::Body -->\n    <div class=\"card-body pt-2\">\n      <!-- begin::Item -->\n      <form [formGroup]=\"myForm\">\n        <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\n          <div>\n            <label for=\"name\">\n              <span class=\"required\"> Expense </span>\n            </label>\n\n            <ng-select\n              [items]=\"arrExpenses\"\n              bindLabel=\"expense\"\n              formControlName=\"strExpense\"\n              placeholder=\"Start Typing...\"\n            >\n            </ng-select>\n\n            <!-- <input\n              type=\"text\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Expense\"\n              id=\"name\"\n              formControlName=\"strExpense\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.strExpense.errors\n              }\"\n            /> -->\n            <div *ngIf=\"submitted && f.strExpense.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.strExpense.errors.required\">Expense required</div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"amount\">\n              <span class=\"required\"> Amount </span>\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Amount\"\n              id=\"amount\"\n              formControlName=\"Amount\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.Amount.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.Amount.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.Amount.errors.required\">Amount required</div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"type\">\n              <span class=\"required\"> Transfer Type </span>\n            </label>\n\n            <select\n              name=\"type\"\n              id=\"type\"\n              formControlName=\"tranferType\"\n              class=\"form-select form-select-solid\"\n            >\n              <option value=\"Debit\">Debit</option>\n              <option value=\"Credit\">Credit</option>\n            </select>\n\n            <!-- <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"type\"\n              id=\"amount\"\n              formControlName=\"tranferType\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.tranferType.errors\n              }\"\n            /> -->\n            <div *ngIf=\"submitted && f.tranferType.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.tranferType.errors.required\">\n                Transfer Type required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"date\">\n              <span class=\"required\"> Date </span>\n            </label>\n            <input\n              type=\"date\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Date\"\n              id=\"date\"\n              formControlName=\"expense_Date\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.expense_Date.errors\n              }\"\n            />\n            <div\n              *ngIf=\"submitted && f.expense_Date.errors\"\n              class=\"text-red-500\"\n            >\n              <div *ngIf=\"f.expense_Date.errors.required\">Date required</div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"Description\">\n              <span class=\"required\"> Description </span>\n            </label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Description\"\n              id=\"Description\"\n              formControlName=\"strDescription\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.strDescription.errors\n              }\"\n            />\n            <div\n              *ngIf=\"submitted && f.strDescription.errors\"\n              class=\"text-red-500\"\n            >\n              <div *ngIf=\"f.strDescription.errors.required\">\n                Description required\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n\n      <div class=\"grid grid-cols-2 md:grid-cols-6 gap-2 mt-4\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <button class=\"btn btn-light-primary\" (click)=\"resetForm()\">\n          Clear\n        </button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">Create</button>\n      </div>\n    </div>\n    <!-- end::Body -->\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport * as moment from 'moment';\nimport { ExportToExcelService } from 'src/app/core/services/common/export-to-excel.service';\nimport { OfficeExpenseService } from 'src/app/core/services/office-expense/office-expense.service';\nimport { PagerService } from 'src/app/core/services/pagination/pager.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-manage-office-expenses',\n  templateUrl: './manage-office-expenses.component.html',\n  styleUrls: ['./manage-office-expenses.component.scss'],\n})\nexport class ManageOfficeExpensesComponent implements OnInit {\n  arrExpense: any = [];\n  arrExpenses: any = [];\n\n  // pagination\n  pager: any = {};\n  intTotalCount = 0;\n  intPageLimit = 50;\n  intSkipCount = 0;\n  fetchLoading = false;\n\n  myForm: FormGroup;\n\n  constructor(\n    private officeExpenseService: OfficeExpenseService,\n    private formBuilder: FormBuilder,\n    private exportToExcelService: ExportToExcelService,\n    private pageServiceObj: PagerService\n  ) {\n    this.myForm = this.formBuilder.group({\n      expenseType: [null],\n      fromDate: [''],\n      toDate: [''],\n    });\n    this.getMetaData();\n  }\n\n  getMetaData() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: 0,\n      intPageLimit: 1000000,\n    };\n\n    this.officeExpenseService.getExpenseType(obj).subscribe((data) => {\n      if (data.success) {\n        this.arrExpenses = data.data;\n      } else {\n        this.arrExpenses = [];\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.getAllExpense();\n  }\n\n  setPage(page) {\n    if (page < 1 || page > this.pager.totalPages) {\n      return;\n    }\n    this.pager = this.pageServiceObj.getPager(\n      this.intTotalCount,\n      page,\n      this.intPageLimit\n    );\n    this.getAllExpense();\n  }\n\n  getFromCount() {\n    return this.intPageLimit * (this.pager.currentPage - 1) + 1;\n  }\n\n  getToCount() {\n    return (\n      this.intPageLimit * (this.pager.currentPage - 1) + this.arrExpense.length\n    );\n  }\n  getAllExpense() {\n    let skipCount = this.intSkipCount;\n    if (this.pager.intSkipCount) {\n      skipCount = this.pager.intSkipCount;\n    }\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: skipCount,\n      intPageLimit: this.intPageLimit,\n      // fkCustomerId: '',\n      // cust_Code: this.myForm.value.customer,\n      fkExpenseTypeId: this.myForm.value.expenseType?._id || '',\n      startDate: this.myForm.value.fromDate,\n      endDate: this.myForm.value.toDate,\n    };\n\n    this.fetchLoading = true;\n    this.officeExpenseService.getOfficeExpense(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        this.arrExpense = res.data;\n\n        this.intTotalCount = res.count;\n\n        this.pager = this.pageServiceObj.getPager(\n          this.intTotalCount,\n          this.pager.currentPage,\n          this.intPageLimit\n        );\n      } else {\n        this.arrExpense = [];\n        // alert(res.message);\n      }\n    });\n  }\n\n  downloadExcel() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: 0,\n      intPageLimit: 1000000,\n      // fkCustomerId: '',\n      // cust_Code: this.myForm.value.customer,\n      fkExpenseTypeId: this.myForm.value.expenseType?._id || '',\n      startDate: this.myForm.value.fromDate,\n      endDate: this.myForm.value.toDate,\n    };\n\n    this.fetchLoading = true;\n    this.officeExpenseService.getOfficeExpense(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        let jsonData: any = [];\n\n        res.data.forEach((e) => {\n          let obj: any = {\n            Date: moment(e.expense_Date).format('DD-MM-YYYY'),\n            Expense: e.strExpense,\n            Amount: e.Amount,\n            Type: e.tranfer_Type,\n            Description: e.strDescription,\n          };\n          jsonData.push(obj);\n        });\n\n        this.exportToExcelService.exportAsExcelFile(\n          jsonData,\n          'Office Expenses '\n        );\n      }\n    });\n  }\n\n  deleteCustomer(id) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#d33',\n      reverseButtons: true,\n      confirmButtonText: 'Yes, delete it!',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const obj = {\n          strLoginUserId: localStorage.getItem('userId'),\n          fkExpenseId: id,\n        };\n\n        this.officeExpenseService.deleteOfficeExpense(obj).subscribe((res) => {\n          if (res.success) {\n            Swal.fire({\n              title: 'Deleted!',\n              text: 'Your file has been deleted.',\n              icon: 'success',\n            });\n            this.getAllExpense();\n          } else {\n            // alert(res.message);\n          }\n        });\n      }\n    });\n  }\n}\n","<div class=\"text-right mb-3\">\n  <button class=\"btn btn-primary btn-sm\" routerLink=\"/office-expenses/create\">\n    Create Office Expense\n  </button>\n</div>\n\n<div class=\"card mb-3\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"myForm\">\n      <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\n        <div>\n          <label for=\"Customer\">\n            <span class=\"\"> Expense Type </span>\n          </label>\n\n          <ng-select\n            [items]=\"arrExpenses\"\n            bindLabel=\"expense\"\n            formControlName=\"expenseType\"\n            placeholder=\"Start Typing...\"\n          >\n          </ng-select>\n        </div>\n        <div>\n          <label for=\"fromDate\">\n            <span class=\"\"> From Date </span>\n          </label>\n          <input\n            type=\"date\"\n            id=\"fromDate\"\n            formControlName=\"fromDate\"\n            class=\"form-control form-control-solid\"\n          />\n        </div>\n        <div>\n          <label for=\"toDate\">\n            <span class=\"\"> To Date </span>\n          </label>\n          <input\n            type=\"date\"\n            id=\"toDate\"\n            formControlName=\"toDate\"\n            class=\"form-control form-control-solid\"\n          />\n        </div>\n      </div>\n    </form>\n    <div class=\"text-right\">\n      <button class=\"btn btn-primary btn-sm\" (click)=\"getAllExpense()\">\n        <i class=\"bi bi-search\"></i>\n        Search\n      </button>\n    </div>\n  </div>\n</div>\n<div class=\"text-right mb-3\">\n  <button class=\"btn btn-secondary btn-sm\" (click)=\"downloadExcel()\">\n    <i class=\"bi bi-cloud-download\"></i>\n    Download\n  </button>\n</div>\n\n<!--begin::Row-->\n<div class=\"row g-5 g-xl-10\">\n  <div class=\"col-md-12 col-lg-12 md-m-5\">\n    <div class=\"card\">\n      <!-- begin::Body -->\n      <div class=\"card-body\">\n        <!-- begin::Table container -->\n\n        <div\n          class=\"table-responsive\"\n          *ngIf=\"arrExpense.length > 0; else noDataTemplate\"\n        >\n          <!-- begin::Table -->\n          <table\n            class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full text-center\"\n          >\n            <!-- begin::Table head -->\n            <thead>\n              <tr class=\"fw-bold text-muted\">\n                <th class=\"min-w-130px\">Date</th>\n                <th class=\"min-w-130px\">Expense</th>\n                <th class=\"min-w-130px\">Amount</th>\n                <th class=\"min-w-130px\">Type</th>\n                <th class=\"min-w-130px\">Description</th>\n                <th class=\"min-w-130px\">Action</th>\n              </tr>\n            </thead>\n            <!-- end::Table head -->\n            <!-- begin::Table body -->\n            <tbody>\n              <tr *ngFor=\"let customer of arrExpense\">\n                <td>\n                  {{ customer.expense_Date | date : \"mediumDate\" }}\n                </td>\n                <td>\n                  {{ customer.strExpense }}\n                </td>\n                <td>\n                  {{ customer.Amount }}\n                </td>\n                <td>\n                  <span\n                    class=\"badge badge-light-{{\n                      customer.tranfer_Type === 'Credit' ? 'success' : 'danger'\n                    }}\"\n                  >\n                    {{\n                      customer.tranfer_Type === \"Credit\" ? \"Credit\" : \"Debit\"\n                    }}\n                  </span>\n                </td>\n                <td>\n                  {{ customer.strDescription }}\n                </td>\n                <td>\n                  <div class=\"d-flex justify-content-center flex-shrink-0\">\n                    <a\n                      class=\"btn btn-icon bg-light-warning btn-active-color-warning btn-sm me-1\"\n                      [routerLink]=\"[\n                        '/office-expenses/update',\n                        customer.fkExpenseId\n                      ]\"\n                    >\n                      <span\n                        [inlineSVG]=\"\n                          './assets/media/icons/duotune/art/art005.svg'\n                        \"\n                        class=\"svg-icon svg-icon-3 svg-icon-warning\"\n                      ></span>\n                    </a>\n                    <a\n                      class=\"btn btn-icon bg-light-danger btn-active-color-danger btn-sm\"\n                      (click)=\"deleteCustomer(customer.fkExpenseId)\"\n                    >\n                      <span\n                        [inlineSVG]=\"\n                          './assets/media/icons/duotune/general/gen027.svg'\n                        \"\n                        class=\"svg-icon svg-icon-3 svg-icon-danger\"\n                      ></span>\n                    </a>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n            <!-- end::Table body -->\n          </table>\n          <!-- end::Table -->\n        </div>\n        <!-- end::Table container -->\n\n        <!-- begin::Empty -->\n        <ng-template #noDataTemplate>\n          <ng-container *ngIf=\"fetchLoading; else elseTemplate\">\n            <div class=\"d-flex flex-column align-items-center\">\n              <!-- begin::Illustration -->\n              <div class=\"text-center px-4\">\n                <img\n                  src=\"./assets/media/illustrations/dozzy-1/5.png\"\n                  class=\"mw-100 mh-300px animate-pulse\"\n                  alt=\"\"\n                />\n              </div>\n              <!-- end::Illustration -->\n\n              <!-- begin::Message -->\n              <div class=\"fw-bold text-xl text-gray-600 text-center pt-15\">\n                <span\n                  class=\"spinner-border spinner-border-sm align-middle ms-2\"\n                ></span>\n                Loading Data...\n              </div>\n              <!-- end::Message -->\n            </div>\n          </ng-container>\n          <ng-template #elseTemplate>\n            <div class=\"d-flex flex-column align-items-center\">\n              <!-- begin::Illustration -->\n              <div class=\"text-center px-4\">\n                <img\n                  src=\"./assets/media/illustrations/sketchy-1/5.png\"\n                  class=\"mw-100 mh-300px\"\n                  alt=\"\"\n                />\n              </div>\n              <!-- end::Illustration -->\n\n              <!-- begin::Message -->\n              <div class=\"fw-bold fs-6 text-gray-600 text-center pt-15\">\n                No Data Found\n              </div>\n              <!-- end::Message -->\n            </div>\n          </ng-template>\n        </ng-template>\n        <!-- end::Empty -->\n        <!-- begin::Body -->\n      </div>\n      <!-- end::Card -->\n\n      <div\n        class=\"flex justify-center md:justify-between flex-col md:flex-row p-5\"\n        *ngIf=\"arrExpense.length > 0\"\n      >\n        <div class=\"fs-6 fw-bold text-gray-700 mb-3 md:mb-0 text-center\">\n          Showing {{ getFromCount() }} to {{ getToCount() }} of\n          {{ intTotalCount }}\n          entries\n        </div>\n\n        <ul class=\"pagination\" *ngIf=\"pager.pages && pager.pages.length\">\n          <li\n            class=\"page-item previous\"\n            [ngClass]=\"{ disabled: pager.currentPage === 1 }\"\n          >\n            <a\n              class=\"page-link cursor-pointer\"\n              (click)=\"setPage(pager.currentPage - 1)\"\n            >\n              <i class=\"previous\"></i>\n            </a>\n          </li>\n\n          <li\n            class=\"page-item\"\n            *ngFor=\"let page of pager.pages\"\n            [ngClass]=\"{ active: pager.currentPage === page }\"\n          >\n            <a class=\"page-link cursor-pointer\" (click)=\"setPage(page)\">\n              {{ page }}\n            </a>\n          </li>\n\n          <li\n            class=\"page-item next\"\n            [ngClass]=\"{\n              disabled: pager.currentPage === pager.totalPages\n            }\"\n          >\n            <a\n              class=\"page-link cursor-pointer\"\n              (click)=\"setPage(pager.currentPage + 1)\"\n            >\n              <i class=\"next\"></i>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <!--end::Col-->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { InlineSVGModule } from 'ng-inline-svg-2';\nimport { WidgetsModule } from 'src/app/theme/partials';\nimport { CreateOfficeExpensesComponent } from './create-office-expenses/create-office-expenses.component';\nimport { ManageOfficeExpensesComponent } from './manage-office-expenses/manage-office-expenses.component';\nimport { UpdateOfficeExpensesComponent } from './update-office-expenses/update-office-expenses.component';\n\n@NgModule({\n  declarations: [\n    ManageOfficeExpensesComponent,\n    CreateOfficeExpensesComponent,\n    UpdateOfficeExpensesComponent,\n  ],\n  imports: [\n    CommonModule,\n    NgbTooltipModule,\n    FormsModule,\n    NgSelectModule,\n    InlineSVGModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ManageOfficeExpensesComponent,\n      },\n      {\n        path: 'create',\n        component: CreateOfficeExpensesComponent,\n      },\n      {\n        path: 'update/:id',\n        component: UpdateOfficeExpensesComponent,\n      },\n    ]),\n    WidgetsModule,\n  ],\n})\nexport class OfficeExpensesModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { ToastrService } from 'ngx-toastr';\nimport { OfficeExpenseService } from 'src/app/core/services/office-expense/office-expense.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-office-expenses',\n  templateUrl: './update-office-expenses.component.html',\n  styleUrls: ['./update-office-expenses.component.scss'],\n})\nexport class UpdateOfficeExpensesComponent {\n  myForm: FormGroup;\n  submitted: boolean = false;\n  fkExpenseId = '';\n  arrExpenses = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private officeExpenseService: OfficeExpenseService,\n    private toastr: ToastrService,\n    private readonly http: HttpClient,\n    private router: Router\n  ) {\n    activatedRoute.params.subscribe((params) => {\n      this.fkExpenseId = params.id;\n    });\n    this.myForm = this.formBuilder.group({\n      strExpense: [null, Validators.required],\n      Amount: ['', Validators.required],\n      tranferType: ['Debit', Validators.required],\n      expense_Date: ['', Validators.required],\n      strDescription: [''],\n    });\n    this.getMetaData();\n  }\n  getMetaData() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: 0,\n      intPageLimit: 1000000,\n    };\n\n    this.officeExpenseService.getExpenseType(obj).subscribe((data) => {\n      if (data.success) {\n        this.arrExpenses = data.data;\n        this.getAllExpense();\n      } else {\n        this.arrExpenses = [];\n      }\n    });\n  }\n  get f() {\n    return this.myForm.controls;\n  }\n\n  getAllExpense() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: 0,\n      intPageLimit: 1,\n      fkExpenseId: this.fkExpenseId,\n      // cust_Code: this.myForm.value.customer,\n      startDate: this.myForm.value.fromDate,\n      endDate: this.myForm.value.toDate,\n    };\n\n    this.officeExpenseService.getOfficeExpense(obj).subscribe((res) => {\n      if (res.success) {\n        this.myForm.patchValue({\n          strExpense: res.data[0].strExpense,\n          Amount: res.data[0].Amount,\n          tranferType: res.data[0].tranfer_Type,\n          expense_Date: moment(res.data[0].expense_Date).format('YYYY-MM-DD'),\n          strDescription: res.data[0].strDescription,\n        });\n      } else {\n        this.toastr.error('Error While fetching data');\n\n        // alert(res.message);\n      }\n    });\n  }\n  resetForm() {\n    this.myForm.reset();\n    this.submitted = false;\n  }\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.myForm.invalid) {\n      return;\n    }\n\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      fkExpenseId: this.fkExpenseId,\n      expense_Date: this.myForm.value.expense_Date,\n      fkExpenseTypeId: this.myForm.value.strExpense._id,\n      strExpense: this.myForm.value.strExpense.expense,\n      Amount: this.myForm.value.Amount,\n      tranferType: this.myForm.value.tranferType,\n      strDescription: this.myForm.value.strDescription,\n    };\n\n    this.officeExpenseService.updateOfficeExpense(obj).subscribe((res) => {\n      if (res.success) {\n        Swal.fire({\n          title: 'Success',\n          text: 'Successfully Updated Expense',\n          icon: 'success',\n        }).then((value) => {\n          if (value) {\n            this.myForm.reset();\n            this.submitted = false;\n            this.router.navigate(['/office-expenses']);\n          }\n        });\n      } else {\n        Swal.fire({\n          title: 'Error',\n          text: res.message,\n          icon: 'error',\n        });\n      }\n    });\n  }\n}\n","<!--begin::Col-->\n<div class=\"col-md-12 col-lg-12 md-m-5\">\n  <div class=\"card\">\n    <!-- begin::Header -->\n    <div class=\"card-header border-0\">\n      <h3 class=\"card-title fw-bold text-dark\">Update Office Expense</h3>\n    </div>\n    <!-- end::Header -->\n    <!-- begin::Body -->\n    <div class=\"card-body pt-2\">\n      <!-- begin::Item -->\n      <form [formGroup]=\"myForm\">\n        <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\n          <div>\n            <label for=\"name\">\n              <span class=\"required\"> Expense </span>\n            </label>\n\n            <ng-select\n              [items]=\"arrExpenses\"\n              bindLabel=\"expense\"\n              formControlName=\"strExpense\"\n              placeholder=\"Start Typing...\"\n            >\n            </ng-select>\n            <!-- <input\n              type=\"text\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Expense\"\n              id=\"name\"\n              formControlName=\"strExpense\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.strExpense.errors\n              }\"\n            /> -->\n            <div *ngIf=\"submitted && f.strExpense.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.strExpense.errors.required\">Expense required</div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"amount\">\n              <span class=\"required\"> Amount </span>\n            </label>\n            <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Amount\"\n              id=\"amount\"\n              formControlName=\"Amount\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.Amount.errors\n              }\"\n            />\n            <div *ngIf=\"submitted && f.Amount.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.Amount.errors.required\">Amount required</div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"type\">\n              <span class=\"required\"> Transfer Type </span>\n            </label>\n\n            <select\n              name=\"type\"\n              id=\"type\"\n              formControlName=\"tranferType\"\n              class=\"form-select form-select-solid\"\n            >\n              <option value=\"Debit\">Debit</option>\n              <option value=\"Credit\">Credit</option>\n            </select>\n\n            <!-- <input\n              type=\"number\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"type\"\n              id=\"amount\"\n              formControlName=\"tranferType\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.tranferType.errors\n              }\"\n            /> -->\n            <div *ngIf=\"submitted && f.tranferType.errors\" class=\"text-red-500\">\n              <div *ngIf=\"f.tranferType.errors.required\">\n                Transfer Type required\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"date\">\n              <span class=\"required\"> Date </span>\n            </label>\n            <input\n              type=\"date\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Date\"\n              id=\"date\"\n              formControlName=\"expense_Date\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.expense_Date.errors\n              }\"\n            />\n            <div\n              *ngIf=\"submitted && f.expense_Date.errors\"\n              class=\"text-red-500\"\n            >\n              <div *ngIf=\"f.expense_Date.errors.required\">Date required</div>\n            </div>\n          </div>\n\n          <div>\n            <label for=\"Description\">\n              <span class=\"required\"> Description </span>\n            </label>\n            <input\n              type=\"text\"\n              class=\"form-control form-control-solid\"\n              placeholder=\"Description\"\n              id=\"Description\"\n              formControlName=\"strDescription\"\n              [ngClass]=\"{\n                'is-invalid': submitted && f.strDescription.errors\n              }\"\n            />\n            <div\n              *ngIf=\"submitted && f.strDescription.errors\"\n              class=\"text-red-500\"\n            >\n              <div *ngIf=\"f.strDescription.errors.required\">\n                Description required\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n\n      <div class=\"grid grid-cols-2 md:grid-cols-6 gap-2 mt-4\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <button class=\"btn btn-light-primary\" (click)=\"resetForm()\">\n          Clear\n        </button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">Update</button>\n      </div>\n    </div>\n    <!-- end::Body -->\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}