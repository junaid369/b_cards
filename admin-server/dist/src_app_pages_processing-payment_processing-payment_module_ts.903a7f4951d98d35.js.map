{"version":3,"file":"src_app_pages_processing-payment_processing-payment_module_ts.903a7f4951d98d35.js","mappings":"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","sources":["./src/app/pages/processing-payment/manage-processing-payment/manage-processing-payment.component.ts","./src/app/pages/processing-payment/manage-processing-payment/manage-processing-payment.component.html","./src/app/pages/processing-payment/processing-payment.module.ts","./src/app/pages/processing-payment/update-processing-payment/update-processing-payment.component.ts","./src/app/pages/processing-payment/update-processing-payment/update-processing-payment.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport * as moment from 'moment';\nimport { ExportToExcelService } from 'src/app/core/services/common/export-to-excel.service';\nimport { CustomerService } from 'src/app/core/services/customer/customer.service';\nimport { PagerService } from 'src/app/core/services/pagination/pager.service';\nimport { SupplierService } from 'src/app/core/services/supplier/supplier.service';\n\n@Component({\n  selector: 'app-manage-processing-payment',\n  templateUrl: './manage-processing-payment.component.html',\n  styleUrls: ['./manage-processing-payment.component.scss'],\n})\nexport class ManageProcessingPaymentComponent implements OnInit {\n  arrCustomer: any = [];\n  arrAllCustomers: any = [];\n  arrAllSuppliers: any = [];\n  userType = 'Customer';\n  // pagination\n  pager: any = {};\n  intTotalCount = 0;\n  intPageLimit = 50;\n  intSkipCount = 0;\n  fetchLoading = false;\n\n  arrUserType = [\n    {\n      user: 'Customer',\n    },\n    {\n      user: 'Supplier',\n    },\n  ];\n\n  myForm: FormGroup;\n\n  constructor(\n    private customerService: CustomerService,\n    private supplierService: SupplierService,\n    private formBuilder: FormBuilder,\n    private exportToExcelService: ExportToExcelService,\n    private pageServiceObj: PagerService\n  ) {\n    const pType = localStorage.getItem('processingPaymentType') || 'Customer';\n\n    this.myForm = this.formBuilder.group({\n      userType: [pType],\n      customer: [null],\n      supplier: [''],\n      supplierCode: [''],\n      phone: [''],\n      paymentStatus: ['PENDING'],\n    });\n  }\n\n  get f() {\n    return this.myForm.controls;\n  }\n\n  ngOnInit() {\n    this.searchPayments();\n    // this.getAllSupplierAll();\n    this.getAllCustomerAll();\n  }\n\n  setPage(page) {\n    if (page < 1 || page > this.pager.totalPages) {\n      return;\n    }\n    this.pager = this.pageServiceObj.getPager(\n      this.intTotalCount,\n      page,\n      this.intPageLimit\n    );\n    this.searchPayments();\n  }\n  onCustomerChange() {\n    const supplier = this.arrAllCustomers.find((e) => {\n      return e.cust_Code === this.myForm.value.customer;\n    });\n\n    this.myForm.patchValue({\n      supplier: supplier.supplier_Name,\n      supplierCode: supplier.sup_Code,\n    });\n  }\n\n  getAllCustomerAll() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      fkCustomerId: '',\n      strName: '',\n      cust_Code: '',\n      fromDate: '',\n      endDate: '',\n      intSkipCount: '0',\n      intPageLimit: '1000000',\n    };\n    this.customerService.getAllCustomer(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        this.arrAllCustomers = res.data.map((d) => {\n          return {\n            ...d,\n            displayName: d.cust_Code + ' - ' + d.strName,\n          };\n        });\n      } else {\n        this.arrAllCustomers = [];\n      }\n    });\n  }\n\n  searchPayments() {\n    localStorage.setItem('processingPaymentType', this.myForm.value.userType);\n\n    if (this.myForm.value.userType === 'Customer') {\n      this.userType = 'Customer';\n      this.getCustomerPayments();\n    } else {\n      this.userType = 'Supplier';\n      this.getSupplierPayments();\n    }\n  }\n\n  // getAllSupplierAll() {\n  //   const obj = {\n  //     strLoginUserId: localStorage.getItem('userId'),\n  //     fkSupplierId: '',\n  //     strName: '',\n  //     cust_Code: '',\n  //     fromDate: '',\n  //     endDate: '',\n  //     intSkipCount: '0',\n  //     intPageLimit: '1000000',\n  //   };\n  //   this.supplierService.getAllSupplier(obj).subscribe((res) => {\n  //     if (res.success) {\n  //       this.arrAllSuppliers = res.data.map((d) => {\n  //         return {\n  //           ...d,\n  //           displayName: d.sup_Code + ' - ' + d.strName,\n  //         };\n  //       });\n  //     } else {\n  //       this.arrAllSuppliers = [];\n  //     }\n  //   });\n  // }\n\n  getFromCount() {\n    return this.intPageLimit * (this.pager.currentPage - 1) + 1;\n  }\n\n  getToCount() {\n    return (\n      this.intPageLimit * (this.pager.currentPage - 1) + this.arrCustomer.length\n    );\n  }\n  getCustomerPayments() {\n    let skipCount = this.intSkipCount;\n    if (this.pager.intSkipCount) {\n      skipCount = this.pager.intSkipCount;\n    }\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: skipCount,\n      intPageLimit: this.intPageLimit,\n      fkCustomerId: '',\n      cust_Code: this.myForm.value.customer,\n      sup_Code: this.myForm.value.supplierCode,\n      strPhone: this.myForm.value.phone,\n      strName: '',\n      payment_Status: this.myForm.value.paymentStatus,\n      strCountry: '',\n    };\n\n    this.fetchLoading = true;\n    this.customerService.getAllCustomerPayment(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        this.arrCustomer = res.data;\n\n        this.intTotalCount = res.count;\n\n        this.pager = this.pageServiceObj.getPager(\n          this.intTotalCount,\n          this.pager.currentPage,\n          this.intPageLimit\n        );\n      } else {\n        this.arrCustomer = [];\n        // alert(res.message);\n      }\n    });\n  }\n\n  getSupplierPayments() {\n    let skipCount = this.intSkipCount;\n    if (this.pager.intSkipCount) {\n      skipCount = this.pager.intSkipCount;\n    }\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: skipCount,\n      intPageLimit: this.intPageLimit,\n      fkSupplierId: '',\n      sup_Code: this.myForm.value.supplierCode,\n      cust_Code: this.myForm.value.customer,\n      strPhone: this.myForm.value.phone,\n      strName: '',\n      payment_Status: this.myForm.value.paymentStatus,\n      strCountry: '',\n    };\n\n    this.fetchLoading = true;\n    this.supplierService.getPaymentSupplier(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        this.arrCustomer = res.data;\n\n        this.intTotalCount = res.count;\n\n        this.pager = this.pageServiceObj.getPager(\n          this.intTotalCount,\n          this.pager.currentPage,\n          this.intPageLimit\n        );\n      } else {\n        this.arrCustomer = [];\n        // alert(res.message);\n      }\n    });\n  }\n\n  downloadExcel() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: 0,\n      intPageLimit: 1000000,\n      fkCustomerId: '',\n      cust_Code: this.myForm.value.customer,\n      strPhone: this.myForm.value.phone,\n      strName: '',\n      payment_Status: this.myForm.value.paymentStatus,\n      strCountry: '',\n    };\n\n    this.fetchLoading = true;\n    this.customerService.getAllCustomerPayment(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        let jsonData: any = [];\n\n        res.data.forEach((e) => {\n          e.paymentDetails.forEach((payment, i) => {\n            let obj: any = {};\n            if (i === 0)\n              obj = {\n                'Customer Code': e.cust_Code,\n                'Customer Name': e.customerName,\n                Phone: e.customerPhone,\n                Country: e.customerCountry,\n                Refund: e.Refund_Amount,\n                'Paid Amount': e.Total_Paid_Amount,\n                'G-Voucher Credit': e.Service_Credit_Amount,\n                'G-Voucher Debit': e.Service_Debit_Amount,\n                'Total Amount': e.Total_Amount,\n                Balance: e.Total_Amount - e.Total_Paid_Amount,\n              };\n            else\n              obj = {\n                'Customer Code': '',\n                'Customer Name': '',\n                Phone: '',\n                Country: '',\n                Refund: '',\n                'Paid Amount': '',\n                'G-Voucher Credit': '',\n                'G-Voucher Debit': '',\n                'Total Amount': '',\n                Balance: '',\n              };\n            obj['Payment Type'] = payment.type;\n            obj['Transfer Mode'] = payment.transferMode;\n            obj['Bank'] = payment.bank;\n            obj['Amount'] = payment.amount;\n            obj['Status'] = this.myForm.value.paymentStatus;\n            obj['Date'] = moment(payment.date).format('DD-MM-YYYY');\n            obj['Description'] = payment.description;\n            jsonData.push(obj);\n          });\n        });\n\n        // console.log('jsonData', jsonData);\n        this.exportToExcelService.exportAsExcelFile(\n          jsonData,\n          'Processing Payments '\n        );\n      }\n    });\n  }\n}\n","<!-- <div class=\"text-right mb-3\">\n  <button class=\"btn btn-primary btn-sm\" routerLink=\"/customer-payment/create\">\n    Create Payment\n  </button>\n</div> -->\n\n<div class=\"card mb-3\">\n  <div class=\"card-body\">\n    <form [formGroup]=\"myForm\">\n      <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\n        <div>\n          <label for=\"type\">\n            <span class=\"\"> User Type </span>\n          </label>\n          <select name=\"type\" class=\"form-select form-select-solid\" formControlName=\"userType\" id=\"type\">\n            <option *ngFor=\"let item of arrUserType\" [value]=\"item.user\">\n              {{ item.user }}\n            </option>\n          </select>\n          <!-- <ng-select\n            [items]=\"arrUserType\"\n            bindLabel=\"user\"\n            bindValue=\"user\"\n            formControlName=\"userType\"\n            placeholder=\"Start Typing...\"\n          >\n          </ng-select> -->\n        </div>\n\n        <!-- <div *ngIf=\"f.userType.value === 'Supplier'\">\n          <label for=\"Supplier\">\n            <span class=\"\"> Supplier </span>\n          </label>\n          <ng-select\n            [items]=\"arrAllSuppliers\"\n            bindLabel=\"displayName\"\n            bindValue=\"sup_Code\"\n            formControlName=\"supplier\"\n            placeholder=\"Start Typing...\"\n          >\n          </ng-select>\n        </div> -->\n\n        <div>\n          <label for=\"Customer\">\n            <span class=\"\"> Customer </span>\n          </label>\n          <ng-select [items]=\"arrAllCustomers\" bindLabel=\"displayName\" (change)=\"onCustomerChange()\"\n            bindValue=\"cust_Code\" formControlName=\"customer\" placeholder=\"Start Typing...\">\n          </ng-select>\n        </div>\n        <div>\n          <label for=\"customer\">\n            <span class=\"\"> Supplier </span>\n          </label>\n          <div class=\"form-control form-control-solid min-h-[43.5px]\">\n            {{ myForm.value.supplier }}\n          </div>\n        </div>\n        <!-- <div>\n          <label for=\"phone\">\n            <span class=\"\"> Phone Number </span>\n          </label>\n          <input\n            type=\"text\"\n            id=\"phone\"\n            placeholder=\"Phone Number\"\n            formControlName=\"phone\"\n            class=\"form-control form-control-solid\"\n          />\n        </div> -->\n        <div>\n          <label for=\"status\">\n            <span class=\"\"> Payment Status </span>\n          </label>\n          <div class=\"flex gap-3 py-3\">\n            <div class=\"form-check form-check-custom form-check-warning form-check-solid\">\n              <input class=\"form-check-input\" type=\"radio\" value=\"PENDING\" formControlName=\"paymentStatus\" id=\"pending\"\n                checked=\"checked\" />\n              <label class=\"form-check-label\" for=\"pending\"> Pending </label>\n            </div>\n            <div class=\"form-check form-check-custom form-check-success form-check-solid\">\n              <input class=\"form-check-input\" type=\"radio\" value=\"VERIFY\" formControlName=\"paymentStatus\"\n                id=\"verified\" />\n              <label class=\"form-check-label\" for=\"verified\"> Verified </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class=\"text-right\">\n      <button class=\"btn btn-primary btn-sm\" (click)=\"searchPayments()\">\n        <i class=\"bi bi-search\"></i>\n        Search\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"text-right mb-3\">\n  <button class=\"btn btn-secondary btn-sm\" (click)=\"downloadExcel()\">\n    <i class=\"bi bi-cloud-download\"></i>\n    Download\n  </button>\n</div>\n<!--begin::Row-->\n<div class=\"row g-5 g-xl-10\">\n  <div class=\"col-md-12 col-lg-12 md-m-5\">\n    <div class=\"card\">\n      <!-- begin::Body -->\n      <div class=\"card-body\">\n        <!-- begin::Table container -->\n\n        <div class=\"table-responsive\" *ngIf=\"arrCustomer.length > 0; else noDataTemplate\">\n          <!-- begin::Table -->\n          <table class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\">\n            <!-- begin::Table head -->\n            <thead>\n              <tr class=\"fw-bold text-muted\">\n                <th class=\"min-w-130px\">\n                  {{ this.userType === \"Supplier\" ? \"Supplier\" : \"Customer\" }}\n                  ID\n                </th>\n                <th class=\"min-w-130px text-left\">\n                  {{ this.userType === \"Supplier\" ? \"Supplier\" : \"Customer\" }}\n                  Name\n                </th>\n                <th class=\"min-w-130px text-left\">\n                  {{ this.userType === \"Supplier\" ? \"Customer\" : \"Supplier\" }}\n                  Name\n                </th>\n                <th class=\"min-w-130px\" *ngIf=\"this.userType === 'Customer'\">\n                  Phone\n                </th>\n                <th class=\"min-w-130px\" *ngIf=\"this.userType === 'Customer'\">\n                  Country\n                </th>\n                <th class=\"min-w-130px\">Refund</th>\n                <th class=\"min-w-130px\">G-Voucher Credit</th>\n                <th class=\"min-w-130px\">G-Voucher Debit</th>\n                <th class=\"min-w-130px\">Paid Amount</th>\n                <th class=\"min-w-130px\">Total Amount</th>\n                <th class=\"min-w-130px\">Balance</th>\n                <th class=\"min-w-130px\">Action</th>\n              </tr>\n            </thead>\n            <!-- end::Table head -->\n            <!-- begin::Table body -->\n            <tbody>\n              <tr *ngFor=\"let customer of arrCustomer\">\n                <td>\n                  {{\n                    this.userType === \"Supplier\"\n                      ? customer.sup_Code\n                      : customer.cust_Code\n                  }}\n                </td>\n                <td class=\"text-left\">\n                  <p class=\"m-0 text-base font-bold\">\n                    {{\n                      this.userType === \"Supplier\"\n                        ? customer.supplierName\n                        : customer.customerName\n                    }}\n                  </p>\n                </td>\n                <td class=\"text-left\">\n                  <p class=\"m-0 text-base font-bold\">\n                    {{\n                      this.userType === \"Supplier\"\n                        ? customer.customerName\n                        : customer.supplierName\n                    }}\n                  </p>\n                </td>\n                <td *ngIf=\"this.userType === 'Customer'\">\n                  {{ customer.customerPhone }}\n                </td>\n                <td *ngIf=\"this.userType === 'Customer'\">\n                  {{ customer.customerCountry }}\n                </td>\n                <td>\n                  {{ customer.Refund_Amount }}\n                </td>\n                <td>\n                  {{ customer.Service_Credit_Amount }}\n                </td>\n                <td>\n                  {{ customer.Service_Debit_Amount }}\n                </td>\n                <td>\n                  {{ customer.Total_Paid_Amount }}\n                </td>\n                <td>\n                  {{ customer.Total_Amount }}\n                </td>\n                <td>\n                  {{ customer.Total_Amount - customer.Total_Paid_Amount }}\n                </td>\n                <td>\n                  <div class=\"d-flex justify-content-start flex-shrink-0\">\n                    <a class=\"btn btn-icon bg-light-primary btn-active-color-primary btn-sm me-1\" [routerLink]=\"[\n                        '/processing-payment/update',\n                        this.userType === 'Customer'\n                          ? customer.fkCustomerId\n                          : customer.fkSupplierId,\n                        myForm.value.paymentStatus,\n                        this.userType\n                      ]\">\n                      <span [inlineSVG]=\"\n                          './assets/media/icons/duotune/general/gen008.svg'\n                        \" class=\"svg-icon svg-icon-3 svg-icon-primary\"></span>\n                    </a>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n            <!-- end::Table body -->\n          </table>\n          <!-- end::Table -->\n        </div>\n        <!-- end::Table container -->\n\n        <!-- begin::Empty -->\n        <ng-template #noDataTemplate>\n          <ng-container *ngIf=\"fetchLoading; else elseTemplate\">\n            <div class=\"d-flex flex-column align-items-center\">\n              <!-- begin::Illustration -->\n              <div class=\"text-center px-4\">\n                <img src=\"./assets/media/illustrations/dozzy-1/5.png\" class=\"mw-100 mh-300px animate-pulse\" alt=\"\" />\n              </div>\n              <!-- end::Illustration -->\n\n              <!-- begin::Message -->\n              <div class=\"fw-bold text-xl text-gray-600 text-center pt-15\">\n                <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\n                Loading Data...\n              </div>\n              <!-- end::Message -->\n            </div>\n          </ng-container>\n          <ng-template #elseTemplate>\n            <div class=\"d-flex flex-column align-items-center\">\n              <!-- begin::Illustration -->\n              <div class=\"text-center px-4\">\n                <img src=\"./assets/media/illustrations/sketchy-1/5.png\" class=\"mw-100 mh-300px\" alt=\"\" />\n              </div>\n              <!-- end::Illustration -->\n\n              <!-- begin::Message -->\n              <div class=\"fw-bold fs-6 text-gray-600 text-center pt-15\">\n                No Data Found\n              </div>\n              <!-- end::Message -->\n            </div>\n          </ng-template>\n        </ng-template>\n        <!-- end::Empty -->\n        <!-- begin::Body -->\n      </div>\n      <!-- end::Card -->\n\n      <div class=\"flex justify-center md:justify-between flex-col md:flex-row p-5\" *ngIf=\"arrCustomer.length > 0\">\n        <div class=\"fs-6 fw-bold text-gray-700 mb-3 md:mb-0 text-center\">\n          Showing {{ getFromCount() }} to {{ getToCount() }} of\n          {{ intTotalCount }}\n          entries\n        </div>\n\n        <ul class=\"pagination\" *ngIf=\"pager.pages && pager.pages.length\">\n          <li class=\"page-item previous\" [ngClass]=\"{ disabled: pager.currentPage === 1 }\">\n            <a class=\"page-link cursor-pointer\" (click)=\"setPage(pager.currentPage - 1)\">\n              <i class=\"previous\"></i>\n            </a>\n          </li>\n\n          <li class=\"page-item\" *ngFor=\"let page of pager.pages\" [ngClass]=\"{ active: pager.currentPage === page }\">\n            <a class=\"page-link cursor-pointer\" (click)=\"setPage(page)\">\n              {{ page }}\n            </a>\n          </li>\n\n          <li class=\"page-item next\" [ngClass]=\"{\n              disabled: pager.currentPage === pager.totalPages\n            }\">\n            <a class=\"page-link cursor-pointer\" (click)=\"setPage(pager.currentPage + 1)\">\n              <i class=\"next\"></i>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <!--end::Col-->\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { InlineSVGModule } from 'ng-inline-svg-2';\nimport { WidgetsModule } from 'src/app/theme/partials';\nimport { ManageProcessingPaymentComponent } from './manage-processing-payment/manage-processing-payment.component';\nimport { UpdateProcessingPaymentComponent } from './update-processing-payment/update-processing-payment.component';\n\n@NgModule({\n  declarations: [\n    ManageProcessingPaymentComponent,\n    UpdateProcessingPaymentComponent,\n  ],\n  imports: [\n    CommonModule,\n    NgbTooltipModule,\n    FormsModule,\n    NgSelectModule,\n    InlineSVGModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ManageProcessingPaymentComponent,\n      },\n      // {\n      //   path: 'create',\n      //   component: CreateSupplierComponent,\n      // },\n      {\n        path: 'update/:id/:type/:user',\n        component: UpdateProcessingPaymentComponent,\n      },\n    ]),\n    WidgetsModule,\n  ],\n})\nexport class ProcessingPaymentModule {}\n","import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as moment from 'moment';\nimport { ToastrService } from 'ngx-toastr';\nimport { CustomerService } from 'src/app/core/services/customer/customer.service';\nimport { SupplierService } from 'src/app/core/services/supplier/supplier.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-processing-payment',\n  templateUrl: './update-processing-payment.component.html',\n  styleUrls: ['./update-processing-payment.component.scss'],\n})\nexport class UpdateProcessingPaymentComponent {\n  customerId = '';\n  paymentId = '';\n  type = '';\n  userType = '';\n  fetchLoading = false;\n  arrAllCustomers: any = [];\n  arrTransferMode: any = [];\n  errorIndex: any = '';\n  arrPaymentType: any = [\n    {\n      type: 'G-Voucher (Credit)',\n      sentType: 'SERVICE',\n      mode: 'Credit',\n    },\n    {\n      type: 'G-Voucher (Debit)',\n      sentType: 'SERVICE',\n      mode: 'Debit',\n    },\n    {\n      type: 'PAID',\n      sentType: 'PAID',\n      mode: '',\n    },\n    {\n      type: 'REFUND',\n      sentType: 'REFUND',\n      mode: 'REFUND',\n    },\n  ];\n  myForm: FormGroup;\n  submitted: boolean = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private customerService: CustomerService,\n    private supplierService: SupplierService,\n    private toastr: ToastrService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) {\n    activatedRoute.params.subscribe((params) => {\n      this.customerId = params.id;\n      this.type = params.type;\n      this.userType = params.user;\n    });\n    this.myForm = this.formBuilder.group({\n      customerCode: [null, Validators.required],\n      customerName: [null, Validators.required],\n      supplierName: [null, Validators.required],\n      Total_Amount: ['0', Validators.required],\n      Refund_Amount: ['0', Validators.required],\n      Total_Paid_Amount: ['0', Validators.required],\n      Service_Credit_Amount: ['0', Validators.required],\n      Service_Debit_Amount: ['0', Validators.required],\n      paymentDetails: this.formBuilder.array([]),\n    });\n\n    // this.getAllCustomerAll();\n    this.getMetaData();\n  }\n\n  check(i) {\n    if (this.type === 'PENDING') return false;\n    else if (\n      this.paymentDetails.get(i + '.typeView')?.value === 'REFUND' &&\n      this.userType === 'Customer'\n    )\n      return false;\n    else return true;\n  }\n  check2(i) {\n    if (this.type === 'PENDING') return false;\n    else if (\n      this.paymentDetails.get(i + '.typeView')?.value === 'REFUND' &&\n      this.userType === 'Customer'\n    )\n      return false;\n    else return true;\n  }\n\n  get f() {\n    return this.myForm.controls;\n  }\n\n  get paymentDetails(): FormArray {\n    return this.myForm.get('paymentDetails') as FormArray;\n  }\n\n  newPaymentDetails(): FormGroup {\n    return this.formBuilder.group({\n      id: [''],\n      type: [null, Validators.required],\n      typeView: [null, Validators.required],\n      payment_Code: [''],\n      transferMode: [null, Validators.required],\n      transferPercent: ['0'],\n      transferPercentage: [''],\n      customerName: [''],\n      actualAmount: [''],\n      mode: [''],\n      bank: [null],\n      amount: ['', Validators.required],\n      date: ['', Validators.required],\n      verifyDate: ['', Validators.required],\n      description: [''],\n    });\n  }\n\n  removeItem(i: number, item: any) {\n    Swal.fire({\n      title: 'Do you want to remove?',\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n      reverseButtons: true,\n      confirmButtonColor: '#dc3741',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const obj = {\n          strLoginUserId: localStorage.getItem('userId'),\n          fkPaymentId: item.id,\n        };\n        this.customerService.deleteCustomerPayment(obj).subscribe((res) => {\n          if (res.success) this.paymentDetails.removeAt(i);\n        });\n      }\n    });\n  }\n  onTransferChange(val, i) {\n    this.paymentDetails.at(i).patchValue({ transferPercent: val.percentage });\n  }\n\n  addItem() {\n    if (\n      this.f.customerCode.value === '' ||\n      this.f.customerCode.value === null\n    ) {\n      this.toastr.warning('', 'Choose a Customer');\n      return;\n    }\n    this.paymentDetails.push(this.newPaymentDetails());\n  }\n  getCustomer() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: 0,\n      intPageLimit: 1,\n      fkCustomerId: this.customerId,\n      payment_Status: this.type, //or verify\n    };\n\n    this.fetchLoading = true;\n    this.customerService.getAllCustomerPayment(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        this.paymentId = res.data[0]._id;\n        this.patchValue(res.data[0]);\n      } else {\n        this.toastr.error('Error While fetching data');\n      }\n    });\n  }\n\n  patchValue(customer) {\n    this.myForm.patchValue({\n      customerCode:\n        this.userType === 'Customer' ? customer.cust_Code : customer.sup_Code,\n      customerName:\n        this.userType === 'Customer'\n          ? customer.customerName\n          : customer.supplierName,\n      supplierName:\n        this.userType === 'Customer'\n          ? customer.payment_Details[0].supplierName\n          : customer.payment_Details[0].customerName,\n      Total_Amount: customer.Total_Amount,\n      Refund_Amount: customer.Refund_Amount,\n      Service_Credit_Amount: customer.Service_Credit_Amount,\n      Service_Debit_Amount: customer.Service_Debit_Amount,\n      Total_Paid_Amount: customer.Total_Paid_Amount,\n    });\n\n    customer.payment_Details.forEach((item: any, i) => {\n      this.addItem();\n      this.paymentDetails.at(i).patchValue({\n        id: item.payment_id,\n        type:\n          item.mode === 'Credit'\n            ? 'SERVICE'\n            : item.mode === 'Debit'\n            ? 'SERVICE'\n            : item.type === 'PAID'\n            ? 'PAID'\n            : item.type === 'REFUND'\n            ? 'REFUND'\n            : '',\n        typeView:\n          item.mode === 'Credit'\n            ? 'G-Voucher (Credit)'\n            : item.mode === 'Debit'\n            ? 'G-Voucher (Debit)'\n            : item.type === 'PAID'\n            ? 'PAID'\n            : item.type === 'REFUND'\n            ? 'REFUND'\n            : '',\n        payment_Code: item.payment_Code,\n        transferMode: item.transferMode,\n        customerName: item.customerName,\n        transferPercent: item.transferPercent,\n        transferPercentage: item.transferPercentage,\n        mode: item.mode,\n        actualAmount: item.actualAmount,\n        verifyDate: item.verifyDate\n          ? this.type === 'PENDING'\n            ? ''\n            : moment(item.verifyDate).format('DD-MM-YYYY')\n          : '',\n        bank: item.bank,\n        amount: item.amount,\n        date: moment(item.date).format('YYYY-MM-DD'),\n        description: item.description,\n      });\n    });\n  }\n\n  // getAllCustomerAll() {\n  //   const obj = {\n  //     strLoginUserId: localStorage.getItem('userId'),\n  //     fkCustomerId: this.customerId,\n  //     strName: '',\n  //     cust_Code: '',\n  //     fromDate: '',\n  //     endDate: '',\n  //     intSkipCount: '0',\n  //     intPageLimit: '1',\n  //   };\n  //   this.customerService.getAllCustomer(obj).subscribe((res) => {\n  //     if (res.success) {\n  //       this.myForm.patchValue({ customer: res.data[0] });\n  //       this.getCustomer();\n  //     } else {\n  //       this.toastr.error('Error While fetching data');\n  //     }\n  //   });\n  // }\n\n  resetForm() {\n    this.myForm.reset();\n    this.submitted = false;\n  }\n\n  getMetaData() {\n    const obj = {\n      metaType: 'transfermod', // Amentities transfermod\n    };\n\n    this.supplierService.metaData(obj).subscribe((data) => {\n      if (data.success) {\n        this.arrTransferMode = data.data;\n        this.userType === 'Customer' ? this.getCustomer() : this.getSupplier();\n      } else {\n        this.arrTransferMode = [];\n      }\n    });\n  }\n\n  getSupplier() {\n    const obj = {\n      strLoginUserId: localStorage.getItem('userId'),\n      intSkipCount: 0,\n      intPageLimit: 1,\n      fkSupplierId: this.customerId,\n      payment_Status: this.type, //or verify\n    };\n\n    this.fetchLoading = true;\n    this.supplierService.getPaymentSupplier(obj).subscribe((res) => {\n      this.fetchLoading = false;\n      if (res.success) {\n        this.paymentId = res.data[0]._id;\n        this.patchValue(res.data[0]);\n      } else {\n        this.toastr.error('Error While fetching data');\n      }\n    });\n  }\n\n  moveTo(value, i) {\n    const type = this.type === 'PENDING' ? 'Verify' : 'Pending';\n\n    if (this.paymentDetails.at(i).value.verifyDate === '') {\n      this.errorIndex = i;\n      return;\n    }\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: `You are going to ${type} this payment!`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#228B22',\n      reverseButtons: true,\n      confirmButtonText: `Yes, ${type} it!`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const obj = {\n          strLoginUserId: localStorage.getItem('userId'),\n          fkPaymentId: value.id,\n          paymentInteract:\n            this.userType === 'Customer' ? 'CUSTOMER' : 'SUPPLIER', // SUPPLIER\n          paymentStatus: this.type === 'PENDING' ? 'VERIFY' : 'PENDING', //or \"PENDING\"\n          verifyDate: this.paymentDetails.at(i).value.verifyDate,\n        };\n\n        this.customerService.accountsVerification(obj).subscribe((data) => {\n          this.submitted = false;\n          if (data.success) {\n            Swal.fire({\n              title: 'Success',\n              text: 'Successfully Updated Payment Status',\n              icon: 'success',\n            }).then((value) => {\n              if (value) {\n                this.myForm.reset();\n                this.submitted = false;\n                this.router.navigate(['/processing-payment']);\n              }\n            });\n          } else {\n            Swal.fire({\n              title: 'Error',\n              text: data.message,\n              icon: 'error',\n            });\n          }\n        });\n      }\n    });\n  }\n}\n","<!--begin::Col-->\n<div class=\"col-md-12 col-lg-12 md-m-5\">\n  <div class=\"card\">\n    <!-- begin::Header -->\n    <!-- <div class=\"card-header border-0\">\n      <h3 class=\"card-title fw-bold text-dark\">Create Customer Package</h3>\n    </div> -->\n    <!-- end::Header -->\n    <!-- begin::Body -->\n    <div class=\"card-body\">\n      <h3\n        class=\"fw-bold mb-3 {{\n          type === 'VERIFY' ? 'text-green-500' : 'text-orange-500'\n        }}\"\n      >\n        {{ type === \"VERIFY\" ? \"Verified\" : \"Pending\" }} Payments\n      </h3>\n      <!-- begin::Item -->\n      <form [formGroup]=\"myForm\">\n        <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\n          <div>\n            <label for=\"name\">\n              <span class=\"required\"> {{ userType }} Name </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.customerCode.value }} -\n              {{ f.customerName.value }}\n            </div>\n          </div>\n          <div>\n            <label for=\"name\">\n              <span class=\"required\">\n                {{ userType === \"Customer\" ? \"Supplier\" : \"Customer\" }} Name\n              </span>\n            </label>\n            <div class=\"form-control form-control-solid min-h-[43.5px]\">\n              {{ f.supplierName.value }}\n            </div>\n          </div>\n\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> Total Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Total_Amount.value }}\n            </div>\n          </div>\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> Total Paid Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Total_Paid_Amount.value }}\n            </div>\n          </div>\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> Refund Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Refund_Amount.value }}\n            </div>\n          </div>\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> G-Voucher Credit Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Service_Credit_Amount.value }}\n            </div>\n          </div>\n          <div>\n            <label for=\"amount\">\n              <span class=\"\"> G-Voucher Debit Amount </span>\n            </label>\n            <div class=\"form-control form-control-solid\">\n              {{ f.Service_Debit_Amount.value }}\n            </div>\n          </div>\n        </div>\n\n        <!-- <div class=\"col-12 text-right my-3\">\n          <button class=\"btn btn-primary btn-sm\" (click)=\"addItem()\">\n            <i class=\"bi bi-plus\"></i>\n            Add Payment\n          </button>\n        </div> -->\n\n        <div *ngIf=\"paymentDetails.controls.length\" class=\"mt-5\">\n          <div formArrayName=\"paymentDetails\" class=\"divide-y\">\n            <div\n              *ngFor=\"let skill of paymentDetails.controls; let i = index\"\n              [formGroupName]=\"i\"\n              class=\"grid grid-cols-6 max-xl:grid-cols-4 max-lg:grid-cols-4 max-md:grid-cols-2 max-sm:grid-cols-1 gap-3 py-3\"\n            >\n              <!-- class=\"flex gap-3 mb-3 justify-between overflow-scroll\" -->\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Payment Code </span>\n                </label>\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                  {{ paymentDetails.get(i + \".payment_Code\")?.value }}\n                </div>\n              </div>\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Payment Type </span>\n                </label>\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                  {{ paymentDetails.get(i + \".typeView\")?.value }}\n                </div>\n                <div\n                  class=\"text-sm text-gray-700 mt-1\"\n                  *ngIf=\"\n                    paymentDetails.get(i + '.typeView')?.value === 'REFUND'\n                  \"\n                >\n                  Refund to\n                  {{ paymentDetails.get(i + \".customerName\")?.value }}\n                </div>\n                <div\n                  *ngIf=\"paymentDetails.get(i + '.mode')?.value\"\n                  class=\"mt-1 text-{{\n                    paymentDetails.get(i + '.mode')?.value === 'Credit'\n                      ? 'green'\n                      : 'red'\n                  }}-600\"\n                >\n                  {{\n                    paymentDetails.get(i + \".mode\")?.value === \"Credit\"\n                      ? \"Pay from Supplier\"\n                      : paymentDetails.get(i + \".mode\")?.value === \"Debit\"\n                      ? \"Pay to Supplier\"\n                      : \"\"\n                  }}\n                </div>\n                <div\n                  *ngIf=\"submitted && paymentDetails.get(i + '.type')?.errors\"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"paymentDetails.get(i + '.type')?.errors?.required\"\n                    >Payment Type Required\n                  </small>\n                </div>\n              </div>\n\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Transfer Mode </span>\n                </label>\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                  {{ paymentDetails.get(i + \".transferMode\")?.value }}\n                </div>\n\n                <!-- <div\n                  class=\"text-sm text-gray-700 mt-1\"\n                  *ngIf=\"\n                    paymentDetails.get(i + '.transferPercent')?.value > 0\n                  \"\n                >\n                  <span class=\"font-bold\"\n                    >{{\n                      paymentDetails.get(i + \".transferPercentage\")?.value\n                    }}%</span\n                  >\n                  will be deducted\n                </div> -->\n\n                <div\n                  *ngIf=\"\n                    submitted && paymentDetails.get(i + '.transferMode')?.errors\n                  \"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"\n                      paymentDetails.get(i + '.transferMode')?.errors?.required\n                    \"\n                    >Transfer Mode Required\n                  </small>\n                </div>\n              </div>\n\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Bank </span>\n                </label>\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                  {{ paymentDetails.get(i + \".bank\")?.value }}\n                </div>\n\n                <div\n                  *ngIf=\"submitted && paymentDetails.get(i + '.bank')?.errors\"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"paymentDetails.get(i + '.bank')?.errors?.required\"\n                    >Bank Required\n                  </small>\n                </div>\n              </div>\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Amount </span>\n                </label>\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                  {{ paymentDetails.get(i + \".amount\")?.value }}\n                </div>\n\n                <div\n                  class=\"text-sm text-gray-700 mt-1\"\n                  *ngIf=\"paymentDetails.get(i + '.transferPercent')?.value > 0\"\n                >\n                  <!-- <span class=\"font-bold\">\n                    {{\n                      paymentDetails.get(i + \".amount\")?.value *\n                        (paymentDetails.get(i + \".transferPercent\")?.value /\n                          100)\n                    }}\n                  </span>\n                  will be deducted. -->\n                  <!-- Paid amount is\n                  <span class=\"font-bold\">\n                    {{ paymentDetails.get(i + \".actualAmount\")?.value }}</span\n                  > -->\n                </div>\n\n                <div\n                  *ngIf=\"submitted && paymentDetails.get(i + '.amount')?.errors\"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"paymentDetails.get(i + '.amount')?.errors?.required\"\n                    >Amount Required\n                  </small>\n                </div>\n              </div>\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Date </span>\n                </label>\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                  {{\n                    paymentDetails.get(i + \".date\")?.value | date : \"dd/MM/yyyy\"\n                  }}\n                </div>\n                <div\n                  *ngIf=\"submitted && paymentDetails.get(i + '.date')?.errors\"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"paymentDetails.get(i + '.date')?.errors?.required\"\n                    >Date Required\n                  </small>\n                </div>\n              </div>\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Description </span>\n                </label>\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                  {{ paymentDetails.get(i + \".description\")?.value }}\n                </div>\n\n                <div\n                  *ngIf=\"\n                    submitted && paymentDetails.get(i + '.description')?.errors\n                  \"\n                  class=\"text-red-500\"\n                >\n                  <small\n                    *ngIf=\"\n                      paymentDetails.get(i + '.description')?.errors?.required\n                    \"\n                  >\n                    Description Required\n                  </small>\n                </div>\n              </div>\n              <div class=\"min-w-[160px]\">\n                <label for=\"amount\">\n                  <span class=\"\"> Verify Date </span>\n                </label>\n                <input\n                  *ngIf=\"type !== 'VERIFY'\"\n                  type=\"date\"\n                  class=\"form-control form-control-solid\"\n                  placeholder=\"Date\"\n                  formControlName=\"verifyDate\"\n                />\n                <div\n                  *ngIf=\"type === 'VERIFY'\"\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\n                >\n                  {{ paymentDetails.get(i + \".verifyDate\")?.value }}\n                </div>\n                <div\n                  *ngIf=\"\n                    errorIndex === i &&\n                    paymentDetails.get(i + '.verifyDate')?.errors\n                  \"\n                  class=\"text-red-500\"\n                >\n                  <!-- *ngIf=\"\n                  paymentDetails.get(i + '.verifyDate')?.errors?.required\n                \" -->\n                  <small> Verify Date Required </small>\n                </div>\n              </div>\n              <div class=\"min-w-[160px] flex flex-col justify-end\">\n                <label for=\"amount\" *ngIf=\"check2(i)\">\n                  <!-- *ngIf=\"\n                    paymentDetails.get(i + '.type')?.value !== 'REFUND' &&\n                    userType === 'Supplier'\n                  \" -->\n                  <span class=\"\"> ACTION </span>\n                </label>\n                <div>\n                  <a\n                    class=\"btn btn-warning btn-sm\"\n                    *ngIf=\"check(i)\"\n                    (click)=\"moveTo(skill.value, i)\"\n                  >\n                    <!-- (click)=\"removeItem(i, skill.value)\" -->\n                    <!-- <span\n                  [inlineSVG]=\"\n                    './assets/media/icons/duotune/general/gen012.svg'\n                  \"\n                  class=\"svg-icon svg-icon-3 svg-icon-warning\"\n                ></span> -->\n                    Back to Approval\n                  </a>\n                  <a\n                    class=\"btn btn-success btn-sm\"\n                    *ngIf=\"type === 'PENDING'\"\n                    (click)=\"moveTo(skill.value, i)\"\n                  >\n                    <!-- (click)=\"removeItem(i, skill.value)\" -->\n                    <!-- <span\n                  [inlineSVG]=\"\n                    './assets/media/icons/duotune/files/fil025.svg'\n                  \"\n                  class=\"svg-icon svg-icon-3 svg-icon-success\"\n                ></span> -->\n                    Approve\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- <div\n          class=\"table-responsive mb-3 overflow-visible max-h-[50vh]\"\n          [ngClass]=\"{ 'overflow-scroll': paymentDetails.controls.length >= 5 }\"\n          *ngIf=\"paymentDetails.controls.length\"\n        >\n          <table\n            class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\"\n          >\n            <thead>\n              <tr class=\"fw-bold text-muted\">\n                <th class=\"min-w-[200px]\">Payment Code</th>\n                <th class=\"min-w-[200px]\">Payment Type</th>\n                <th class=\"min-w-[200px]\">Transfer Mode</th>\n                <th class=\"min-w-[200px]\">Bank</th>\n                <th class=\"min-w-[120px]\">Amount</th>\n                <th class=\"min-w-[120px]\">Date</th>\n                <th class=\"min-w-[120px]\">Description</th>\n                <th class=\"min-w-[120px]\">Verify Date</th>\n                <th class=\"min-w-[120px]\">ACTION</th>\n              </tr>\n            </thead>\n\n            <tbody formArrayName=\"paymentDetails\">\n              <tr\n                *ngFor=\"let skill of paymentDetails.controls; let i = index\"\n                [formGroupName]=\"i\"\n              >\n                <td>\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                    {{ paymentDetails.get(i + \".payment_Code\")?.value }}\n                  </div>\n                </td>\n                <td>\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                    {{ paymentDetails.get(i + \".typeView\")?.value }}\n                  </div>\n                  <div\n                    class=\"text-sm text-gray-700 mt-1\"\n                    *ngIf=\"\n                      paymentDetails.get(i + '.typeView')?.value === 'REFUND'\n                    \"\n                  >\n                    Refund to\n                    {{ paymentDetails.get(i + \".customerName\")?.value }}\n                  </div>\n                  <div\n                    *ngIf=\"paymentDetails.get(i + '.mode')?.value\"\n                    class=\"mt-1 text-{{\n                      paymentDetails.get(i + '.mode')?.value === 'Credit'\n                        ? 'green'\n                        : 'red'\n                    }}-600\"\n                  >\n                    {{\n                      paymentDetails.get(i + \".mode\")?.value === \"Credit\"\n                        ? \"Pay from Supplier\"\n                        : paymentDetails.get(i + \".mode\")?.value === \"Debit\"\n                        ? \"Pay to Supplier\"\n                        : \"\"\n                    }}\n                  </div>\n                  <div\n                    *ngIf=\"submitted && paymentDetails.get(i + '.type')?.errors\"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"paymentDetails.get(i + '.type')?.errors?.required\"\n                      >Payment Type Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                    {{ paymentDetails.get(i + \".transferMode\")?.value }}\n                  </div>\n\n                  <div\n                    *ngIf=\"\n                      submitted &&\n                      paymentDetails.get(i + '.transferMode')?.errors\n                    \"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"\n                        paymentDetails.get(i + '.transferMode')?.errors\n                          ?.required\n                      \"\n                      >Transfer Mode Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                    {{ paymentDetails.get(i + \".bank\")?.value }}\n                  </div>\n\n                  <div\n                    *ngIf=\"submitted && paymentDetails.get(i + '.bank')?.errors\"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"paymentDetails.get(i + '.bank')?.errors?.required\"\n                      >Bank Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                    {{ paymentDetails.get(i + \".amount\")?.value }}\n                  </div>\n\n                  <div\n                    class=\"text-sm text-gray-700 mt-1\"\n                    *ngIf=\"\n                      paymentDetails.get(i + '.transferPercent')?.value > 0\n                    \"\n                  ></div>\n\n                  <div\n                    *ngIf=\"\n                      submitted && paymentDetails.get(i + '.amount')?.errors\n                    \"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"\n                        paymentDetails.get(i + '.amount')?.errors?.required\n                      \"\n                      >Amount Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                    {{\n                      paymentDetails.get(i + \".date\")?.value\n                        | date : \"dd/MM/yyyy\"\n                    }}\n                  </div>\n                  <div\n                    *ngIf=\"submitted && paymentDetails.get(i + '.date')?.errors\"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"paymentDetails.get(i + '.date')?.errors?.required\"\n                      >Date Required\n                    </small>\n                  </div>\n                </td>\n                <td>\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\n                    {{ paymentDetails.get(i + \".description\")?.value }}\n                  </div>\n\n                  <div\n                    *ngIf=\"\n                      submitted &&\n                      paymentDetails.get(i + '.description')?.errors\n                    \"\n                    class=\"text-red-500\"\n                  >\n                    <small\n                      *ngIf=\"\n                        paymentDetails.get(i + '.description')?.errors?.required\n                      \"\n                    >\n                      Description Required\n                    </small>\n                  </div>\n                </td>\n\n                <td>\n                  <input\n                    *ngIf=\"type !== 'VERIFY'\"\n                    type=\"date\"\n                    class=\"form-control form-control-solid\"\n                    placeholder=\"Date\"\n                    formControlName=\"verifyDate\"\n                  />\n                  <div\n                    *ngIf=\"type === 'VERIFY'\"\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\n                  >\n                    {{ paymentDetails.get(i + \".verifyDate\")?.value }}\n                  </div>\n                  <div\n                    *ngIf=\"\n                      errorIndex === i &&\n                      paymentDetails.get(i + '.verifyDate')?.errors\n                    \"\n                    class=\"text-red-500\"\n                  >\n                    <small> Verify Date Required </small>\n                  </div>\n                </td>\n\n                <td>\n                  <a\n                    class=\"btn btn-warning btn-sm\"\n                    *ngIf=\"type === 'VERIFY'\"\n                    (click)=\"moveTo(skill.value, i)\"\n                  >\n                    Back to Approval\n                  </a>\n                  <a\n                    class=\"btn btn-success btn-sm\"\n                    *ngIf=\"type === 'PENDING'\"\n                    (click)=\"moveTo(skill.value, i)\"\n                  >\n                    Approve\n                  </a>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div> -->\n\n        <!-- <div\n          class=\"grid grid-cols-2 md:grid-cols-6 gap-2 mt-4\"\n          *ngIf=\"paymentDetails.controls.length && type === 'PENDING'\"\n        >\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <button class=\"btn btn-light-primary\" (click)=\"resetForm()\">\n            Clear\n          </button>\n          <button class=\"btn btn-primary\" (click)=\"onSubmit()\">Update</button>\n        </div> -->\n      </form>\n    </div>\n    <!-- end::Body -->\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}