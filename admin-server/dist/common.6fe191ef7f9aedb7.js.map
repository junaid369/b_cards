{"version":3,"file":"common.6fe191ef7f9aedb7.js","mappings":";;;;;;;;;;;;;;;;;;;AAA+D;AAEJ;AAGlB;;;;AAKlC,MAAM,eAAe;IAG1B,YAAoB,IAAgB,EAAU,aAA4B;QAAtD,SAAI,GAAJ,IAAI,CAAY;QAAU,kBAAa,GAAb,aAAa,CAAe;QAFlE,WAAM,GAAW,kFAAwB,CAAC;QAIlD,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,6DAAW,CAAC;gBACvB,aAAa,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;aACzD,CAAC;SACH,CAAC;IAN2E,CAAC;IAQ9E,WAAW,CAAC,GAAQ;QAClB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,uBAAuB,EACrC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,cAAc,CAAC,GAAQ;QACrB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,2BAA2B,EACzC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,cAAc,CAAC,GAAQ;QACrB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,0BAA0B,EACxC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,cAAc,CAAC,GAAQ;QACrB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,0BAA0B,EACxC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,kBAAkB,CAAC,GAAQ;QACzB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,oCAAoC,EAClD,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,qBAAqB,CAAC,GAAQ;QAC5B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,kCAAkC,EAChD,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,qBAAqB,CAAC,GAAQ;QAC5B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,kCAAkC,EAChD,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,qBAAqB,CAAC,GAAQ;QAC5B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,mCAAmC,EACjD,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,oBAAoB,CAAC,GAAQ;QAC3B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,8BAA8B,EAC5C,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;;8EA5FU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;;;;ACR2C;AAEJ;AAGlB;;;;AAKlC,MAAM,aAAa;IAGxB,YAAoB,IAAgB,EAAU,aAA4B;QAAtD,SAAI,GAAJ,IAAI,CAAY;QAAU,kBAAa,GAAb,aAAa,CAAe;QAFlE,WAAM,GAAW,kFAAwB,CAAC;QAIlD,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,6DAAW,CAAC;gBACvB,aAAa,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;aACzD,CAAC;SACH,CAAC;IAN2E,CAAC;IAQ9E,oBAAoB,CAAC,GAAQ;QAC3B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,qBAAqB,EACnC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,uBAAuB,CAAC,GAAQ;QAC9B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,yBAAyB,EACvC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,0BAA0B,CAAC,GAAQ;QACjC,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,wBAAwB,EACtC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,qBAAqB,CAAC,GAAQ;QAC5B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,sBAAsB,EACpC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;;0EA9CU,aAAa;8GAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;;;;ACR2C;AAEJ;AAGlB;;;;AAKlC,MAAM,eAAe;IAG1B,YAAoB,IAAgB,EAAU,aAA4B;QAAtD,SAAI,GAAJ,IAAI,CAAY;QAAU,kBAAa,GAAb,aAAa,CAAe;QAFlE,WAAM,GAAW,kFAAwB,CAAC;QAIlD,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,6DAAW,CAAC;gBACvB,aAAa,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;aACzD,CAAC;SACH,CAAC;IAN2E,CAAC;IAQ9E,WAAW,CAAC,GAAQ;QAClB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,uBAAuB,EACrC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,cAAc,CAAC,GAAQ;QACrB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,2BAA2B,EACzC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,cAAc,CAAC,GAAQ;QACrB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,0BAA0B,EACxC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,cAAc,CAAC,GAAQ;QACrB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,0BAA0B,EACxC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,oBAAoB,CAAC,GAAQ;QAC3B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,8BAA8B,EAC5C,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,qBAAqB,CAAC,GAAQ;QAC5B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,kCAAkC,EAChD,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,qBAAqB,CAAC,GAAQ;QAC5B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,kCAAkC,EAChD,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,kBAAkB,CAAC,GAAQ;QACzB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,mCAAmC,EACjD,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,aAAa,CAAC,GAAQ;QACpB,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,wBAAwB,EACtC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,QAAQ,CAAC,GAAQ;QACf,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,wBAAwB,EACtC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;IACD,mBAAmB,CAAC,GAAQ;QAC1B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,MAAM,GAAG,wBAAwB,EACtC,GAAG,EACH,IAAI,CAAC,WAAW,CACjB;aACA,IAAI,CAAC,2CAAK,CAAC,CAAC,CAAC,EAAE,gDAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IAChE,CAAC;;8EA7GU,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;ACNb,MAAM,wBAAwB;IACnC;;;OAGG;IACH,MAAM,CAAC,aAAa,CAAC,OAAwB;;QAC3C,MAAM,QAAQ,GAAG,aAAO,CAAC,GAAG,CAAC,UAAU,CAAC,0CAAE,KAAK,CAAC;QAChD,MAAM,eAAe,GAAG,aAAO,CAAC,GAAG,CAAC,WAAW,CAAC,0CAAE,KAAK,CAAC;QAExD,IAAI,QAAQ,KAAK,eAAe,EAAE;YAChC,aAAO,CAAC,GAAG,CAAC,WAAW,CAAC,0CAAE,SAAS,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;SAChE;IACH,CAAC;CACF;;;;;;;;;;;;;;;ACfD,4CAA4C;AAC5C,kDAAkD;AAClD,iEAAiE;AAE1D,MAAM,SAAS;IAAtB;QAOE,UAAK,GAAa,EAAE,CAAC;IAsDvB,CAAC;IAfC,OAAO,CAAC,KAAc;QACpB,MAAM,IAAI,GAAG,KAAkB,CAAC;QAChC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,kCAAkC,CAAC;QAC1D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;QAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAC9B,+BAA+B;QAC/B,6CAA6C;IAC/C,CAAC;CACF","sources":["./src/app/core/services/customer/customer.service.ts","./src/app/core/services/report/report.service.ts","./src/app/core/services/supplier/supplier.service.ts","./src/app/modules/auth/components/registration/confirm-password.validator.ts","./src/app/modules/auth/models/user.model.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { CommonService } from '../common/common.service';\nimport { ApiResponse } from '../../model/api-response.models';\nimport { catchError, retry } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerService {\n  private apiURL: string = environment.API_ENDPOINT;\n\n  constructor(private http: HttpClient, private commonService: CommonService) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      Authorization: 'bearer ' + localStorage.getItem('token'),\n    }),\n  };\n\n  addCustomer(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'customer/add_customer',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  getAllCustomer(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'customer/get_all_customer',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  updateCustomer(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'customer/update_customer',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  deleteCustomer(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'customer/delete_customer',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n\n  addCustomerPayment(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'customer/payment_add_from_customer',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  updateCustomerPayment(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'customer/update_customer_payment',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  deleteCustomerPayment(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'customer/delete_customer_payment',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  getAllCustomerPayment(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'customer/get_all_customer_payment',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  accountsVerification(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'payment/verified_by_accounts',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { CommonService } from '../common/common.service';\nimport { ApiResponse } from '../../model/api-response.models';\nimport { catchError, retry } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReportService {\n  private apiURL: string = environment.API_ENDPOINT;\n\n  constructor(private http: HttpClient, private commonService: CommonService) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      Authorization: 'bearer ' + localStorage.getItem('token'),\n    }),\n  };\n\n  getGrossIncomeReport(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'report/gross_income',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  updateGrossIncomeReport(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'customer/profit_release',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  getProcessingChargesReport(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'report/tabi_and_credit',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  getTrailBalanceReport(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'report/trial_balance',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { CommonService } from '../common/common.service';\nimport { ApiResponse } from '../../model/api-response.models';\nimport { catchError, retry } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SupplierService {\n  private apiURL: string = environment.API_ENDPOINT;\n\n  constructor(private http: HttpClient, private commonService: CommonService) {}\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      Authorization: 'bearer ' + localStorage.getItem('token'),\n    }),\n  };\n\n  addSupplier(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'supplier/add_supplier',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  getAllSupplier(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'supplier/get_all_supplier',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  updateSupplier(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'supplier/update_supplier',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  deleteSupplier(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'supplier/delete_supplier',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  addPaymentToSupplier(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'supplier/payment_to_supplier',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  updatePaymentSupplier(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'supplier/update_supplier_payment',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  deletePaymentSupplier(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'supplier/delete_supplier_payment',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  getPaymentSupplier(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'supplier/get_all_supplier_payment',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  createVoucher(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'voucher/create_voucher',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  metaData(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'metadata/get_metadatas',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n  getAllRefundListing(obj: any) {\n    return this.http\n      .post<ApiResponse>(\n        this.apiURL + 'refund/get_refund_list',\n        obj,\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.commonService.handleError));\n  }\n}\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport class ConfirmPasswordValidator {\r\n  /**\r\n   * Check matching password with confirm password\r\n   * @param control AbstractControl\r\n   */\r\n  static MatchPassword(control: AbstractControl): void {\r\n    const password = control.get('password')?.value;\r\n    const confirmPassword = control.get('cPassword')?.value;\r\n\r\n    if (password !== confirmPassword) {\r\n      control.get('cPassword')?.setErrors({ ConfirmPassword: true });\r\n    }\r\n  }\r\n}\r\n","// import { AuthModel } from './auth.model';\r\n// import { AddressModel } from './address.model';\r\n// import { SocialNetworksModel } from './social-networks.model';\r\n\r\nexport class UserModel {\r\n  id: number;\r\n  username: string;\r\n  password: string;\r\n  fullname: string;\r\n  email: string;\r\n  pic: string;\r\n  roles: number[] = [];\r\n  occupation: string;\r\n  companyName: string;\r\n  phone: string;\r\n  // address?: AddressModel;\r\n  // socialNetworks?: SocialNetworksModel;\r\n  // personal information\r\n  firstname: string;\r\n  lastname: string;\r\n  website: string;\r\n  // account information\r\n  language: string;\r\n  timeZone: string;\r\n  communication: {\r\n    email: boolean;\r\n    sms: boolean;\r\n    phone: boolean;\r\n  };\r\n  // email settings\r\n  emailSettings?: {\r\n    emailNotification: boolean;\r\n    sendCopyToPersonalEmail: boolean;\r\n    activityRelatesEmail: {\r\n      youHaveNewNotifications: boolean;\r\n      youAreSentADirectMessage: boolean;\r\n      someoneAddsYouAsAsAConnection: boolean;\r\n      uponNewOrder: boolean;\r\n      newMembershipApproval: boolean;\r\n      memberRegistration: boolean;\r\n    };\r\n    updatesFromKeenthemes: {\r\n      newsAboutKeenthemesProductsAndFeatureUpdates: boolean;\r\n      tipsOnGettingMoreOutOfKeen: boolean;\r\n      thingsYouMissedSindeYouLastLoggedIntoKeen: boolean;\r\n      newsAboutMetronicOnPartnerProductsAndOtherServices: boolean;\r\n      tipsOnMetronicBusinessProducts: boolean;\r\n    };\r\n  };\r\n\r\n  setUser(_user: unknown) {\r\n    const user = _user as UserModel;\r\n    this.id = user.id;\r\n    this.username = user.username || '';\r\n    this.password = user.password || '';\r\n    this.fullname = user.fullname || '';\r\n    this.email = user.email || '';\r\n    this.pic = user.pic || './assets/media/avatars/blank.png';\r\n    this.roles = user.roles || [];\r\n    this.occupation = user.occupation || '';\r\n    this.companyName = user.companyName || '';\r\n    this.phone = user.phone || '';\r\n    // this.address = user.address;\r\n    // this.socialNetworks = user.socialNetworks;\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}