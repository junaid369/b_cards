{"version":3,"file":"src_app_pages_processing-payment_processing-payment_module_ts.4448e2def9c953e2.js","mappings":"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","sources":["./src/app/pages/processing-payment/manage-processing-payment/manage-processing-payment.component.ts","./src/app/pages/processing-payment/manage-processing-payment/manage-processing-payment.component.html","./src/app/pages/processing-payment/processing-payment.module.ts","./src/app/pages/processing-payment/update-processing-payment/update-processing-payment.component.ts","./src/app/pages/processing-payment/update-processing-payment/update-processing-payment.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport * as moment from 'moment';\r\nimport { ExportToExcelService } from 'src/app/core/services/common/export-to-excel.service';\r\nimport { CustomerService } from 'src/app/core/services/customer/customer.service';\r\nimport { PagerService } from 'src/app/core/services/pagination/pager.service';\r\nimport { SupplierService } from 'src/app/core/services/supplier/supplier.service';\r\n\r\n@Component({\r\n  selector: 'app-manage-processing-payment',\r\n  templateUrl: './manage-processing-payment.component.html',\r\n  styleUrls: ['./manage-processing-payment.component.scss'],\r\n})\r\nexport class ManageProcessingPaymentComponent implements OnInit {\r\n  arrCustomer: any = [];\r\n  arrAllCustomers: any = [];\r\n  arrAllSuppliers: any = [];\r\n  userType = 'Customer';\r\n  // pagination\r\n  pager: any = {};\r\n  intTotalCount = 0;\r\n  intPageLimit = 50;\r\n  intSkipCount = 0;\r\n  fetchLoading = false;\r\n\r\n  arrUserType = [\r\n    {\r\n      user: 'Customer',\r\n    },\r\n    {\r\n      user: 'Supplier',\r\n    },\r\n  ];\r\n\r\n  myForm: FormGroup;\r\n\r\n  constructor(\r\n    private customerService: CustomerService,\r\n    private supplierService: SupplierService,\r\n    private formBuilder: FormBuilder,\r\n    private exportToExcelService: ExportToExcelService,\r\n    private pageServiceObj: PagerService\r\n  ) {\r\n    const pType = localStorage.getItem('processingPaymentType') || 'Customer';\r\n\r\n    this.myForm = this.formBuilder.group({\r\n      userType: [pType],\r\n      customer: [null],\r\n      supplier: [''],\r\n      supplierCode: [''],\r\n      phone: [''],\r\n      paymentStatus: ['PENDING'],\r\n    });\r\n  }\r\n\r\n  get f() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchPayments();\r\n    // this.getAllSupplierAll();\r\n    this.getAllCustomerAll();\r\n  }\r\n\r\n  setPage(page) {\r\n    if (page < 1 || page > this.pager.totalPages) {\r\n      return;\r\n    }\r\n    this.pager = this.pageServiceObj.getPager(\r\n      this.intTotalCount,\r\n      page,\r\n      this.intPageLimit\r\n    );\r\n    this.searchPayments();\r\n  }\r\n  onCustomerChange() {\r\n    const supplier = this.arrAllCustomers.find((e) => {\r\n      return e.cust_Code === this.myForm.value.customer;\r\n    });\r\n\r\n    this.myForm.patchValue({\r\n      supplier: supplier.supplier_Name,\r\n      supplierCode: supplier.sup_Code,\r\n    });\r\n  }\r\n\r\n  getAllCustomerAll() {\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      fkCustomerId: '',\r\n      strName: '',\r\n      cust_Code: '',\r\n      fromDate: '',\r\n      endDate: '',\r\n      intSkipCount: '0',\r\n      intPageLimit: '1000000',\r\n    };\r\n    this.customerService.getAllCustomer(obj).subscribe((res) => {\r\n      this.fetchLoading = false;\r\n      if (res.success) {\r\n        this.arrAllCustomers = res.data.map((d) => {\r\n          return {\r\n            ...d,\r\n            displayName: d.cust_Code + ' - ' + d.strName,\r\n          };\r\n        });\r\n      } else {\r\n        this.arrAllCustomers = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  searchPayments() {\r\n    localStorage.setItem('processingPaymentType', this.myForm.value.userType);\r\n\r\n    if (this.myForm.value.userType === 'Customer') {\r\n      this.userType = 'Customer';\r\n      this.getCustomerPayments();\r\n    } else {\r\n      this.userType = 'Supplier';\r\n      this.getSupplierPayments();\r\n    }\r\n  }\r\n\r\n  // getAllSupplierAll() {\r\n  //   const obj = {\r\n  //     strLoginUserId: localStorage.getItem('userId'),\r\n  //     fkSupplierId: '',\r\n  //     strName: '',\r\n  //     cust_Code: '',\r\n  //     fromDate: '',\r\n  //     endDate: '',\r\n  //     intSkipCount: '0',\r\n  //     intPageLimit: '1000000',\r\n  //   };\r\n  //   this.supplierService.getAllSupplier(obj).subscribe((res) => {\r\n  //     if (res.success) {\r\n  //       this.arrAllSuppliers = res.data.map((d) => {\r\n  //         return {\r\n  //           ...d,\r\n  //           displayName: d.sup_Code + ' - ' + d.strName,\r\n  //         };\r\n  //       });\r\n  //     } else {\r\n  //       this.arrAllSuppliers = [];\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  getFromCount() {\r\n    return this.intPageLimit * (this.pager.currentPage - 1) + 1;\r\n  }\r\n\r\n  getToCount() {\r\n    return (\r\n      this.intPageLimit * (this.pager.currentPage - 1) + this.arrCustomer.length\r\n    );\r\n  }\r\n  getCustomerPayments() {\r\n    let skipCount = this.intSkipCount;\r\n    if (this.pager.intSkipCount) {\r\n      skipCount = this.pager.intSkipCount;\r\n    }\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      intSkipCount: skipCount,\r\n      intPageLimit: this.intPageLimit,\r\n      fkCustomerId: '',\r\n      cust_Code: this.myForm.value.customer,\r\n      sup_Code: this.myForm.value.supplierCode,\r\n      strPhone: this.myForm.value.phone,\r\n      strName: '',\r\n      payment_Status: this.myForm.value.paymentStatus,\r\n      strCountry: '',\r\n    };\r\n\r\n    this.fetchLoading = true;\r\n    this.customerService.getAllCustomerPayment(obj).subscribe((res) => {\r\n      this.fetchLoading = false;\r\n      if (res.success) {\r\n        this.arrCustomer = res.data;\r\n\r\n        this.intTotalCount = res.count;\r\n\r\n        this.pager = this.pageServiceObj.getPager(\r\n          this.intTotalCount,\r\n          this.pager.currentPage,\r\n          this.intPageLimit\r\n        );\r\n      } else {\r\n        this.arrCustomer = [];\r\n        // alert(res.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  getSupplierPayments() {\r\n    let skipCount = this.intSkipCount;\r\n    if (this.pager.intSkipCount) {\r\n      skipCount = this.pager.intSkipCount;\r\n    }\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      intSkipCount: skipCount,\r\n      intPageLimit: this.intPageLimit,\r\n      fkSupplierId: '',\r\n      sup_Code: this.myForm.value.supplierCode,\r\n      cust_Code: this.myForm.value.customer,\r\n      strPhone: this.myForm.value.phone,\r\n      strName: '',\r\n      payment_Status: this.myForm.value.paymentStatus,\r\n      strCountry: '',\r\n    };\r\n\r\n    this.fetchLoading = true;\r\n    this.supplierService.getPaymentSupplier(obj).subscribe((res) => {\r\n      this.fetchLoading = false;\r\n      if (res.success) {\r\n        this.arrCustomer = res.data;\r\n\r\n        this.intTotalCount = res.count;\r\n\r\n        this.pager = this.pageServiceObj.getPager(\r\n          this.intTotalCount,\r\n          this.pager.currentPage,\r\n          this.intPageLimit\r\n        );\r\n      } else {\r\n        this.arrCustomer = [];\r\n        // alert(res.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  downloadExcel() {\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      intSkipCount: 0,\r\n      intPageLimit: 1000000,\r\n      fkCustomerId: '',\r\n      cust_Code: this.myForm.value.customer,\r\n      strPhone: this.myForm.value.phone,\r\n      strName: '',\r\n      payment_Status: this.myForm.value.paymentStatus,\r\n      strCountry: '',\r\n    };\r\n\r\n    this.fetchLoading = true;\r\n    this.customerService.getAllCustomerPayment(obj).subscribe((res) => {\r\n      this.fetchLoading = false;\r\n      if (res.success) {\r\n        let jsonData: any = [];\r\n\r\n        res.data.forEach((e) => {\r\n          e.paymentDetails.forEach((payment, i) => {\r\n            let obj: any = {};\r\n            if (i === 0)\r\n              obj = {\r\n                'Customer Code': e.cust_Code,\r\n                'Customer Name': e.customerName,\r\n                Phone: e.customerPhone,\r\n                Country: e.customerCountry,\r\n                Refund: e.Refund_Amount,\r\n                'Paid Amount': e.Total_Paid_Amount,\r\n                'G-Voucher Credit': e.Service_Credit_Amount,\r\n                'G-Voucher Debit': e.Service_Debit_Amount,\r\n                'Total Amount': e.Total_Amount,\r\n                Balance: e.Total_Amount - e.Total_Paid_Amount,\r\n              };\r\n            else\r\n              obj = {\r\n                'Customer Code': '',\r\n                'Customer Name': '',\r\n                Phone: '',\r\n                Country: '',\r\n                Refund: '',\r\n                'Paid Amount': '',\r\n                'G-Voucher Credit': '',\r\n                'G-Voucher Debit': '',\r\n                'Total Amount': '',\r\n                Balance: '',\r\n              };\r\n            obj['Payment Type'] = payment.type;\r\n            obj['Transfer Mode'] = payment.transferMode;\r\n            obj['Bank'] = payment.bank;\r\n            obj['Amount'] = payment.amount;\r\n            obj['Status'] = this.myForm.value.paymentStatus;\r\n            obj['Date'] = moment(payment.date).format('DD-MM-YYYY');\r\n            obj['Description'] = payment.description;\r\n            jsonData.push(obj);\r\n          });\r\n        });\r\n\r\n        // console.log('jsonData', jsonData);\r\n        this.exportToExcelService.exportAsExcelFile(\r\n          jsonData,\r\n          'Processing Payments '\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!-- <div class=\"text-right mb-3\">\r\n  <button class=\"btn btn-primary btn-sm\" routerLink=\"/customer-payment/create\">\r\n    Create Payment\r\n  </button>\r\n</div> -->\r\n\r\n<div class=\"card mb-3\">\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"myForm\">\r\n      <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\r\n        <div>\r\n          <label for=\"type\">\r\n            <span class=\"\"> User Type </span>\r\n          </label>\r\n          <select name=\"type\" class=\"form-select form-select-solid\" formControlName=\"userType\" id=\"type\">\r\n            <option *ngFor=\"let item of arrUserType\" [value]=\"item.user\">\r\n              {{ item.user }}\r\n            </option>\r\n          </select>\r\n          <!-- <ng-select\r\n            [items]=\"arrUserType\"\r\n            bindLabel=\"user\"\r\n            bindValue=\"user\"\r\n            formControlName=\"userType\"\r\n            placeholder=\"Start Typing...\"\r\n          >\r\n          </ng-select> -->\r\n        </div>\r\n\r\n        <!-- <div *ngIf=\"f.userType.value === 'Supplier'\">\r\n          <label for=\"Supplier\">\r\n            <span class=\"\"> Supplier </span>\r\n          </label>\r\n          <ng-select\r\n            [items]=\"arrAllSuppliers\"\r\n            bindLabel=\"displayName\"\r\n            bindValue=\"sup_Code\"\r\n            formControlName=\"supplier\"\r\n            placeholder=\"Start Typing...\"\r\n          >\r\n          </ng-select>\r\n        </div> -->\r\n\r\n        <div>\r\n          <label for=\"Customer\">\r\n            <span class=\"\"> Customer </span>\r\n          </label>\r\n          <ng-select [items]=\"arrAllCustomers\" bindLabel=\"displayName\" (change)=\"onCustomerChange()\"\r\n            bindValue=\"cust_Code\" formControlName=\"customer\" placeholder=\"Start Typing...\">\r\n          </ng-select>\r\n        </div>\r\n        <div>\r\n          <label for=\"customer\">\r\n            <span class=\"\"> Supplier </span>\r\n          </label>\r\n          <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n            {{ myForm.value.supplier }}\r\n          </div>\r\n        </div>\r\n        <!-- <div>\r\n          <label for=\"phone\">\r\n            <span class=\"\"> Phone Number </span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"phone\"\r\n            placeholder=\"Phone Number\"\r\n            formControlName=\"phone\"\r\n            class=\"form-control form-control-solid\"\r\n          />\r\n        </div> -->\r\n        <div>\r\n          <label for=\"status\">\r\n            <span class=\"\"> Payment Status </span>\r\n          </label>\r\n          <div class=\"flex gap-3 py-3\">\r\n            <div class=\"form-check form-check-custom form-check-warning form-check-solid\">\r\n              <input class=\"form-check-input\" type=\"radio\" value=\"PENDING\" formControlName=\"paymentStatus\" id=\"pending\"\r\n                checked=\"checked\" />\r\n              <label class=\"form-check-label\" for=\"pending\"> Pending </label>\r\n            </div>\r\n            <div class=\"form-check form-check-custom form-check-success form-check-solid\">\r\n              <input class=\"form-check-input\" type=\"radio\" value=\"VERIFY\" formControlName=\"paymentStatus\"\r\n                id=\"verified\" />\r\n              <label class=\"form-check-label\" for=\"verified\"> Verified </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <div class=\"text-right\">\r\n      <button class=\"btn btn-primary btn-sm\" (click)=\"searchPayments()\">\r\n        <i class=\"bi bi-search\"></i>\r\n        Search\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"text-right mb-3\">\r\n  <button class=\"btn btn-secondary btn-sm\" (click)=\"downloadExcel()\">\r\n    <i class=\"bi bi-cloud-download\"></i>\r\n    Download\r\n  </button>\r\n</div>\r\n<!--begin::Row-->\r\n<div class=\"row g-5 g-xl-10\">\r\n  <div class=\"col-md-12 col-lg-12 md-m-5\">\r\n    <div class=\"card\">\r\n      <!-- begin::Body -->\r\n      <div class=\"card-body\">\r\n        <!-- begin::Table container -->\r\n\r\n        <div class=\"table-responsive\" *ngIf=\"arrCustomer.length > 0; else noDataTemplate\">\r\n          <!-- begin::Table -->\r\n          <table class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\">\r\n            <!-- begin::Table head -->\r\n            <thead>\r\n              <tr class=\"fw-bold text-muted\">\r\n                <th class=\"min-w-130px\">\r\n                  {{ this.userType === \"Supplier\" ? \"Supplier\" : \"Customer\" }}\r\n                  ID\r\n                </th>\r\n                <th class=\"min-w-130px text-left\">\r\n                  {{ this.userType === \"Supplier\" ? \"Supplier\" : \"Customer\" }}\r\n                  Name\r\n                </th>\r\n                <th class=\"min-w-130px text-left\">\r\n                  {{ this.userType === \"Supplier\" ? \"Customer\" : \"Supplier\" }}\r\n                  Name\r\n                </th>\r\n                <th class=\"min-w-130px\" *ngIf=\"this.userType === 'Customer'\">\r\n                  Phone\r\n                </th>\r\n                <th class=\"min-w-130px\" *ngIf=\"this.userType === 'Customer'\">\r\n                  Country\r\n                </th>\r\n                <th class=\"min-w-130px\">Refund</th>\r\n                <th class=\"min-w-130px\">G-Voucher Credit</th>\r\n                <th class=\"min-w-130px\">G-Voucher Debit</th>\r\n                <th class=\"min-w-130px\">Paid Amount</th>\r\n                <th class=\"min-w-130px\">Total Amount</th>\r\n                <th class=\"min-w-130px\">Balance</th>\r\n                <th class=\"min-w-130px\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <!-- end::Table head -->\r\n            <!-- begin::Table body -->\r\n            <tbody>\r\n              <tr *ngFor=\"let customer of arrCustomer\">\r\n                <td>\r\n                  {{\r\n                    this.userType === \"Supplier\"\r\n                      ? customer.sup_Code\r\n                      : customer.cust_Code\r\n                  }}\r\n                </td>\r\n                <td class=\"text-left\">\r\n                  <p class=\"m-0 text-base font-bold\">\r\n                    {{\r\n                      this.userType === \"Supplier\"\r\n                        ? customer.supplierName\r\n                        : customer.customerName\r\n                    }}\r\n                  </p>\r\n                </td>\r\n                <td class=\"text-left\">\r\n                  <p class=\"m-0 text-base font-bold\">\r\n                    {{\r\n                      this.userType === \"Supplier\"\r\n                        ? customer.customerName\r\n                        : customer.supplierName\r\n                    }}\r\n                  </p>\r\n                </td>\r\n                <td *ngIf=\"this.userType === 'Customer'\">\r\n                  {{ customer.customerPhone }}\r\n                </td>\r\n                <td *ngIf=\"this.userType === 'Customer'\">\r\n                  {{ customer.customerCountry }}\r\n                </td>\r\n                <td>\r\n                  {{ customer.Refund_Amount }}\r\n                </td>\r\n                <td>\r\n                  {{ customer.Service_Credit_Amount }}\r\n                </td>\r\n                <td>\r\n                  {{ customer.Service_Debit_Amount }}\r\n                </td>\r\n                <td>\r\n                  {{ customer.Total_Paid_Amount }}\r\n                </td>\r\n                <td>\r\n                  {{ customer.Total_Amount }}\r\n                </td>\r\n                <td>\r\n                  {{ customer.Total_Amount - customer.Total_Paid_Amount }}\r\n                </td>\r\n                <td>\r\n                  <div class=\"d-flex justify-content-start flex-shrink-0\">\r\n                    <a class=\"btn btn-icon bg-light-primary btn-active-color-primary btn-sm me-1\" [routerLink]=\"[\r\n                        '/processing-payment/update',\r\n                        this.userType === 'Customer'\r\n                          ? customer.fkCustomerId\r\n                          : customer.fkSupplierId,\r\n                        myForm.value.paymentStatus,\r\n                        this.userType\r\n                      ]\">\r\n                      <span [inlineSVG]=\"\r\n                          './assets/media/icons/duotune/general/gen008.svg'\r\n                        \" class=\"svg-icon svg-icon-3 svg-icon-primary\"></span>\r\n                    </a>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <!-- end::Table body -->\r\n          </table>\r\n          <!-- end::Table -->\r\n        </div>\r\n        <!-- end::Table container -->\r\n\r\n        <!-- begin::Empty -->\r\n        <ng-template #noDataTemplate>\r\n          <ng-container *ngIf=\"fetchLoading; else elseTemplate\">\r\n            <div class=\"d-flex flex-column align-items-center\">\r\n              <!-- begin::Illustration -->\r\n              <div class=\"text-center px-4\">\r\n                <img src=\"./assets/media/illustrations/dozzy-1/5.png\" class=\"mw-100 mh-300px animate-pulse\" alt=\"\" />\r\n              </div>\r\n              <!-- end::Illustration -->\r\n\r\n              <!-- begin::Message -->\r\n              <div class=\"fw-bold text-xl text-gray-600 text-center pt-15\">\r\n                <span class=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\r\n                Loading Data...\r\n              </div>\r\n              <!-- end::Message -->\r\n            </div>\r\n          </ng-container>\r\n          <ng-template #elseTemplate>\r\n            <div class=\"d-flex flex-column align-items-center\">\r\n              <!-- begin::Illustration -->\r\n              <div class=\"text-center px-4\">\r\n                <img src=\"./assets/media/illustrations/sketchy-1/5.png\" class=\"mw-100 mh-300px\" alt=\"\" />\r\n              </div>\r\n              <!-- end::Illustration -->\r\n\r\n              <!-- begin::Message -->\r\n              <div class=\"fw-bold fs-6 text-gray-600 text-center pt-15\">\r\n                No Data Found\r\n              </div>\r\n              <!-- end::Message -->\r\n            </div>\r\n          </ng-template>\r\n        </ng-template>\r\n        <!-- end::Empty -->\r\n        <!-- begin::Body -->\r\n      </div>\r\n      <!-- end::Card -->\r\n\r\n      <div class=\"flex justify-center md:justify-between flex-col md:flex-row p-5\" *ngIf=\"arrCustomer.length > 0\">\r\n        <div class=\"fs-6 fw-bold text-gray-700 mb-3 md:mb-0 text-center\">\r\n          Showing {{ getFromCount() }} to {{ getToCount() }} of\r\n          {{ intTotalCount }}\r\n          entries\r\n        </div>\r\n\r\n        <ul class=\"pagination\" *ngIf=\"pager.pages && pager.pages.length\">\r\n          <li class=\"page-item previous\" [ngClass]=\"{ disabled: pager.currentPage === 1 }\">\r\n            <a class=\"page-link cursor-pointer\" (click)=\"setPage(pager.currentPage - 1)\">\r\n              <i class=\"previous\"></i>\r\n            </a>\r\n          </li>\r\n\r\n          <li class=\"page-item\" *ngFor=\"let page of pager.pages\" [ngClass]=\"{ active: pager.currentPage === page }\">\r\n            <a class=\"page-link cursor-pointer\" (click)=\"setPage(page)\">\r\n              {{ page }}\r\n            </a>\r\n          </li>\r\n\r\n          <li class=\"page-item next\" [ngClass]=\"{\r\n              disabled: pager.currentPage === pager.totalPages\r\n            }\">\r\n            <a class=\"page-link cursor-pointer\" (click)=\"setPage(pager.currentPage + 1)\">\r\n              <i class=\"next\"></i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <!--end::Col-->\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { InlineSVGModule } from 'ng-inline-svg-2';\r\nimport { WidgetsModule } from 'src/app/theme/partials';\r\nimport { ManageProcessingPaymentComponent } from './manage-processing-payment/manage-processing-payment.component';\r\nimport { UpdateProcessingPaymentComponent } from './update-processing-payment/update-processing-payment.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ManageProcessingPaymentComponent,\r\n    UpdateProcessingPaymentComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgbTooltipModule,\r\n    FormsModule,\r\n    NgSelectModule,\r\n    InlineSVGModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: ManageProcessingPaymentComponent,\r\n      },\r\n      // {\r\n      //   path: 'create',\r\n      //   component: CreateSupplierComponent,\r\n      // },\r\n      {\r\n        path: 'update/:id/:type/:user',\r\n        component: UpdateProcessingPaymentComponent,\r\n      },\r\n    ]),\r\n    WidgetsModule,\r\n  ],\r\n})\r\nexport class ProcessingPaymentModule {}\r\n","import { Component } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as moment from 'moment';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CustomerService } from 'src/app/core/services/customer/customer.service';\r\nimport { SupplierService } from 'src/app/core/services/supplier/supplier.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-update-processing-payment',\r\n  templateUrl: './update-processing-payment.component.html',\r\n  styleUrls: ['./update-processing-payment.component.scss'],\r\n})\r\nexport class UpdateProcessingPaymentComponent {\r\n  customerId = '';\r\n  paymentId = '';\r\n  type = '';\r\n  userType = '';\r\n  fetchLoading = false;\r\n  arrAllCustomers: any = [];\r\n  arrTransferMode: any = [];\r\n  errorIndex: any = '';\r\n  arrPaymentType: any = [\r\n    {\r\n      type: 'G-Voucher (Credit)',\r\n      sentType: 'SERVICE',\r\n      mode: 'Credit',\r\n    },\r\n    {\r\n      type: 'G-Voucher (Debit)',\r\n      sentType: 'SERVICE',\r\n      mode: 'Debit',\r\n    },\r\n    {\r\n      type: 'PAID',\r\n      sentType: 'PAID',\r\n      mode: '',\r\n    },\r\n    {\r\n      type: 'REFUND',\r\n      sentType: 'REFUND',\r\n      mode: 'REFUND',\r\n    },\r\n  ];\r\n  myForm: FormGroup;\r\n  submitted: boolean = false;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private customerService: CustomerService,\r\n    private supplierService: SupplierService,\r\n    private toastr: ToastrService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n    activatedRoute.params.subscribe((params) => {\r\n      this.customerId = params.id;\r\n      this.type = params.type;\r\n      this.userType = params.user;\r\n    });\r\n    this.myForm = this.formBuilder.group({\r\n      customerCode: [null, Validators.required],\r\n      customerName: [null, Validators.required],\r\n      supplierName: [null, Validators.required],\r\n      Total_Amount: ['0', Validators.required],\r\n      Refund_Amount: ['0', Validators.required],\r\n      Total_Paid_Amount: ['0', Validators.required],\r\n      Service_Credit_Amount: ['0', Validators.required],\r\n      Service_Debit_Amount: ['0', Validators.required],\r\n      paymentDetails: this.formBuilder.array([]),\r\n    });\r\n\r\n    // this.getAllCustomerAll();\r\n    this.getMetaData();\r\n  }\r\n\r\n  check(i) {\r\n    console.log(\r\n      'this.paymentDetails',\r\n      this.paymentDetails.get(i + '.type')?.value\r\n    );\r\n    console.log('userType', this.userType);\r\n    console.log('type', this.type);\r\n    const a =\r\n      this.type === 'VERIFY' &&\r\n      (this.paymentDetails.get(i + '.type')?.value !== 'REFUND' ||\r\n        this.userType !== 'Customer');\r\n    console.log('a', a);\r\n    return a;\r\n  }\r\n\r\n  get f() {\r\n    return this.myForm.controls;\r\n  }\r\n\r\n  get paymentDetails(): FormArray {\r\n    return this.myForm.get('paymentDetails') as FormArray;\r\n  }\r\n\r\n  newPaymentDetails(): FormGroup {\r\n    return this.formBuilder.group({\r\n      id: [''],\r\n      type: [null, Validators.required],\r\n      typeView: [null, Validators.required],\r\n      payment_Code: [''],\r\n      transferMode: [null, Validators.required],\r\n      transferPercent: ['0'],\r\n      transferPercentage: [''],\r\n      customerName: [''],\r\n      actualAmount: [''],\r\n      mode: [''],\r\n      bank: [null],\r\n      amount: ['', Validators.required],\r\n      date: ['', Validators.required],\r\n      verifyDate: ['', Validators.required],\r\n      description: [''],\r\n    });\r\n  }\r\n\r\n  removeItem(i: number, item: any) {\r\n    Swal.fire({\r\n      title: 'Do you want to remove?',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Delete',\r\n      reverseButtons: true,\r\n      confirmButtonColor: '#dc3741',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const obj = {\r\n          strLoginUserId: localStorage.getItem('userId'),\r\n          fkPaymentId: item.id,\r\n        };\r\n        this.customerService.deleteCustomerPayment(obj).subscribe((res) => {\r\n          if (res.success) this.paymentDetails.removeAt(i);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  onTransferChange(val, i) {\r\n    this.paymentDetails.at(i).patchValue({ transferPercent: val.percentage });\r\n  }\r\n\r\n  addItem() {\r\n    if (\r\n      this.f.customerCode.value === '' ||\r\n      this.f.customerCode.value === null\r\n    ) {\r\n      this.toastr.warning('', 'Choose a Customer');\r\n      return;\r\n    }\r\n    this.paymentDetails.push(this.newPaymentDetails());\r\n  }\r\n  getCustomer() {\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      intSkipCount: 0,\r\n      intPageLimit: 1,\r\n      fkCustomerId: this.customerId,\r\n      payment_Status: this.type, //or verify\r\n    };\r\n\r\n    this.fetchLoading = true;\r\n    this.customerService.getAllCustomerPayment(obj).subscribe((res) => {\r\n      this.fetchLoading = false;\r\n      if (res.success) {\r\n        this.paymentId = res.data[0]._id;\r\n        this.patchValue(res.data[0]);\r\n      } else {\r\n        this.toastr.error('Error While fetching data');\r\n      }\r\n    });\r\n  }\r\n\r\n  patchValue(customer) {\r\n    this.myForm.patchValue({\r\n      customerCode:\r\n        this.userType === 'Customer' ? customer.cust_Code : customer.sup_Code,\r\n      customerName:\r\n        this.userType === 'Customer'\r\n          ? customer.customerName\r\n          : customer.supplierName,\r\n      supplierName:\r\n        this.userType === 'Customer'\r\n          ? customer.payment_Details[0].supplierName\r\n          : customer.payment_Details[0].customerName,\r\n      Total_Amount: customer.Total_Amount,\r\n      Refund_Amount: customer.Refund_Amount,\r\n      Service_Credit_Amount: customer.Service_Credit_Amount,\r\n      Service_Debit_Amount: customer.Service_Debit_Amount,\r\n      Total_Paid_Amount: customer.Total_Paid_Amount,\r\n    });\r\n\r\n    customer.payment_Details.forEach((item: any, i) => {\r\n      this.addItem();\r\n      this.paymentDetails.at(i).patchValue({\r\n        id: item.payment_id,\r\n        type:\r\n          item.mode === 'Credit'\r\n            ? 'SERVICE'\r\n            : item.mode === 'Debit'\r\n            ? 'SERVICE'\r\n            : item.type === 'PAID'\r\n            ? 'PAID'\r\n            : item.type === 'REFUND'\r\n            ? 'REFUND'\r\n            : '',\r\n        typeView:\r\n          item.mode === 'Credit'\r\n            ? 'G-Voucher (Credit)'\r\n            : item.mode === 'Debit'\r\n            ? 'G-Voucher (Debit)'\r\n            : item.type === 'PAID'\r\n            ? 'PAID'\r\n            : item.type === 'REFUND'\r\n            ? 'REFUND'\r\n            : '',\r\n        payment_Code: item.payment_Code,\r\n        transferMode: item.transferMode,\r\n        customerName: item.customerName,\r\n        transferPercent: item.transferPercent,\r\n        transferPercentage: item.transferPercentage,\r\n        mode: item.mode,\r\n        actualAmount: item.actualAmount,\r\n        verifyDate: item.verifyDate\r\n          ? this.type === 'PENDING'\r\n            ? ''\r\n            : moment(item.verifyDate).format('DD-MM-YYYY')\r\n          : '',\r\n        bank: item.bank,\r\n        amount: item.amount,\r\n        date: moment(item.date).format('YYYY-MM-DD'),\r\n        description: item.description,\r\n      });\r\n    });\r\n  }\r\n\r\n  // getAllCustomerAll() {\r\n  //   const obj = {\r\n  //     strLoginUserId: localStorage.getItem('userId'),\r\n  //     fkCustomerId: this.customerId,\r\n  //     strName: '',\r\n  //     cust_Code: '',\r\n  //     fromDate: '',\r\n  //     endDate: '',\r\n  //     intSkipCount: '0',\r\n  //     intPageLimit: '1',\r\n  //   };\r\n  //   this.customerService.getAllCustomer(obj).subscribe((res) => {\r\n  //     if (res.success) {\r\n  //       this.myForm.patchValue({ customer: res.data[0] });\r\n  //       this.getCustomer();\r\n  //     } else {\r\n  //       this.toastr.error('Error While fetching data');\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  resetForm() {\r\n    this.myForm.reset();\r\n    this.submitted = false;\r\n  }\r\n\r\n  getMetaData() {\r\n    const obj = {\r\n      metaType: 'transfermod', // Amentities transfermod\r\n    };\r\n\r\n    this.supplierService.metaData(obj).subscribe((data) => {\r\n      if (data.success) {\r\n        this.arrTransferMode = data.data;\r\n        this.userType === 'Customer' ? this.getCustomer() : this.getSupplier();\r\n      } else {\r\n        this.arrTransferMode = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  getSupplier() {\r\n    const obj = {\r\n      strLoginUserId: localStorage.getItem('userId'),\r\n      intSkipCount: 0,\r\n      intPageLimit: 1,\r\n      fkSupplierId: this.customerId,\r\n      payment_Status: this.type, //or verify\r\n    };\r\n\r\n    this.fetchLoading = true;\r\n    this.supplierService.getPaymentSupplier(obj).subscribe((res) => {\r\n      this.fetchLoading = false;\r\n      if (res.success) {\r\n        this.paymentId = res.data[0]._id;\r\n        this.patchValue(res.data[0]);\r\n      } else {\r\n        this.toastr.error('Error While fetching data');\r\n      }\r\n    });\r\n  }\r\n\r\n  moveTo(value, i) {\r\n    const type = this.type === 'PENDING' ? 'Verify' : 'Pending';\r\n\r\n    if (this.paymentDetails.at(i).value.verifyDate === '') {\r\n      this.errorIndex = i;\r\n      return;\r\n    }\r\n\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: `You are going to ${type} this payment!`,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#228B22',\r\n      reverseButtons: true,\r\n      confirmButtonText: `Yes, ${type} it!`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        const obj = {\r\n          strLoginUserId: localStorage.getItem('userId'),\r\n          fkPaymentId: value.id,\r\n          paymentInteract:\r\n            this.userType === 'Customer' ? 'CUSTOMER' : 'SUPPLIER', // SUPPLIER\r\n          paymentStatus: this.type === 'PENDING' ? 'VERIFY' : 'PENDING', //or \"PENDING\"\r\n          verifyDate: this.paymentDetails.at(i).value.verifyDate,\r\n        };\r\n\r\n        this.customerService.accountsVerification(obj).subscribe((data) => {\r\n          this.submitted = false;\r\n          if (data.success) {\r\n            Swal.fire({\r\n              title: 'Success',\r\n              text: 'Successfully Updated Payment Status',\r\n              icon: 'success',\r\n            }).then((value) => {\r\n              if (value) {\r\n                this.myForm.reset();\r\n                this.submitted = false;\r\n                this.router.navigate(['/processing-payment']);\r\n              }\r\n            });\r\n          } else {\r\n            Swal.fire({\r\n              title: 'Error',\r\n              text: data.message,\r\n              icon: 'error',\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!--begin::Col-->\r\n<div class=\"col-md-12 col-lg-12 md-m-5\">\r\n  <div class=\"card\">\r\n    <!-- begin::Header -->\r\n    <!-- <div class=\"card-header border-0\">\r\n      <h3 class=\"card-title fw-bold text-dark\">Create Customer Package</h3>\r\n    </div> -->\r\n    <!-- end::Header -->\r\n    <!-- begin::Body -->\r\n    <div class=\"card-body\">\r\n      <h3\r\n        class=\"fw-bold mb-3 {{\r\n          type === 'VERIFY' ? 'text-green-500' : 'text-orange-500'\r\n        }}\"\r\n      >\r\n        {{ type === \"VERIFY\" ? \"Verified\" : \"Pending\" }} Payments\r\n      </h3>\r\n      <!-- begin::Item -->\r\n      <form [formGroup]=\"myForm\">\r\n        <div class=\"grid grid-cols-1 gap-4 lg:grid-cols-4 md:grid-cols-3\">\r\n          <div>\r\n            <label for=\"name\">\r\n              <span class=\"required\"> {{ userType }} Name </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.customerCode.value }} -\r\n              {{ f.customerName.value }}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"name\">\r\n              <span class=\"required\">\r\n                {{ userType === \"Customer\" ? \"Supplier\" : \"Customer\" }} Name\r\n              </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n              {{ f.supplierName.value }}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> Total Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.Total_Amount.value }}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> Total Paid Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.Total_Paid_Amount.value }}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> Refund Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.Refund_Amount.value }}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> G-Voucher Credit Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.Service_Credit_Amount.value }}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label for=\"amount\">\r\n              <span class=\"\"> G-Voucher Debit Amount </span>\r\n            </label>\r\n            <div class=\"form-control form-control-solid\">\r\n              {{ f.Service_Debit_Amount.value }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- <div class=\"col-12 text-right my-3\">\r\n          <button class=\"btn btn-primary btn-sm\" (click)=\"addItem()\">\r\n            <i class=\"bi bi-plus\"></i>\r\n            Add Payment\r\n          </button>\r\n        </div> -->\r\n\r\n        <div *ngIf=\"paymentDetails.controls.length\" class=\"mt-5\">\r\n          <div formArrayName=\"paymentDetails\" class=\"divide-y\">\r\n            <div\r\n              *ngFor=\"let skill of paymentDetails.controls; let i = index\"\r\n              [formGroupName]=\"i\"\r\n              class=\"grid grid-cols-6 max-xl:grid-cols-4 max-lg:grid-cols-4 max-md:grid-cols-2 max-sm:grid-cols-1 gap-3 py-3\"\r\n            >\r\n              <!-- class=\"flex gap-3 mb-3 justify-between overflow-scroll\" -->\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Payment Code </span>\r\n                </label>\r\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                  {{ paymentDetails.get(i + \".payment_Code\")?.value }}\r\n                </div>\r\n              </div>\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Payment Type </span>\r\n                </label>\r\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                  {{ paymentDetails.get(i + \".typeView\")?.value }}\r\n                </div>\r\n                <div\r\n                  class=\"text-sm text-gray-700 mt-1\"\r\n                  *ngIf=\"\r\n                    paymentDetails.get(i + '.typeView')?.value === 'REFUND'\r\n                  \"\r\n                >\r\n                  Refund to\r\n                  {{ paymentDetails.get(i + \".customerName\")?.value }}\r\n                </div>\r\n                <div\r\n                  *ngIf=\"paymentDetails.get(i + '.mode')?.value\"\r\n                  class=\"mt-1 text-{{\r\n                    paymentDetails.get(i + '.mode')?.value === 'Credit'\r\n                      ? 'green'\r\n                      : 'red'\r\n                  }}-600\"\r\n                >\r\n                  {{\r\n                    paymentDetails.get(i + \".mode\")?.value === \"Credit\"\r\n                      ? \"Pay from Supplier\"\r\n                      : paymentDetails.get(i + \".mode\")?.value === \"Debit\"\r\n                      ? \"Pay to Supplier\"\r\n                      : \"\"\r\n                  }}\r\n                </div>\r\n                <div\r\n                  *ngIf=\"submitted && paymentDetails.get(i + '.type')?.errors\"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"paymentDetails.get(i + '.type')?.errors?.required\"\r\n                    >Payment Type Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Transfer Mode </span>\r\n                </label>\r\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                  {{ paymentDetails.get(i + \".transferMode\")?.value }}\r\n                </div>\r\n\r\n                <!-- <div\r\n                  class=\"text-sm text-gray-700 mt-1\"\r\n                  *ngIf=\"\r\n                    paymentDetails.get(i + '.transferPercent')?.value > 0\r\n                  \"\r\n                >\r\n                  <span class=\"font-bold\"\r\n                    >{{\r\n                      paymentDetails.get(i + \".transferPercentage\")?.value\r\n                    }}%</span\r\n                  >\r\n                  will be deducted\r\n                </div> -->\r\n\r\n                <div\r\n                  *ngIf=\"\r\n                    submitted && paymentDetails.get(i + '.transferMode')?.errors\r\n                  \"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"\r\n                      paymentDetails.get(i + '.transferMode')?.errors?.required\r\n                    \"\r\n                    >Transfer Mode Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Bank </span>\r\n                </label>\r\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                  {{ paymentDetails.get(i + \".bank\")?.value }}\r\n                </div>\r\n\r\n                <div\r\n                  *ngIf=\"submitted && paymentDetails.get(i + '.bank')?.errors\"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"paymentDetails.get(i + '.bank')?.errors?.required\"\r\n                    >Bank Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Amount </span>\r\n                </label>\r\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                  {{ paymentDetails.get(i + \".amount\")?.value }}\r\n                </div>\r\n\r\n                <div\r\n                  class=\"text-sm text-gray-700 mt-1\"\r\n                  *ngIf=\"paymentDetails.get(i + '.transferPercent')?.value > 0\"\r\n                >\r\n                  <!-- <span class=\"font-bold\">\r\n                    {{\r\n                      paymentDetails.get(i + \".amount\")?.value *\r\n                        (paymentDetails.get(i + \".transferPercent\")?.value /\r\n                          100)\r\n                    }}\r\n                  </span>\r\n                  will be deducted. -->\r\n                  <!-- Paid amount is\r\n                  <span class=\"font-bold\">\r\n                    {{ paymentDetails.get(i + \".actualAmount\")?.value }}</span\r\n                  > -->\r\n                </div>\r\n\r\n                <div\r\n                  *ngIf=\"submitted && paymentDetails.get(i + '.amount')?.errors\"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"paymentDetails.get(i + '.amount')?.errors?.required\"\r\n                    >Amount Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Date </span>\r\n                </label>\r\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                  {{\r\n                    paymentDetails.get(i + \".date\")?.value | date : \"dd/MM/yyyy\"\r\n                  }}\r\n                </div>\r\n                <div\r\n                  *ngIf=\"submitted && paymentDetails.get(i + '.date')?.errors\"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"paymentDetails.get(i + '.date')?.errors?.required\"\r\n                    >Date Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Description </span>\r\n                </label>\r\n                <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                  {{ paymentDetails.get(i + \".description\")?.value }}\r\n                </div>\r\n\r\n                <div\r\n                  *ngIf=\"\r\n                    submitted && paymentDetails.get(i + '.description')?.errors\r\n                  \"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"\r\n                      paymentDetails.get(i + '.description')?.errors?.required\r\n                    \"\r\n                  >\r\n                    Description Required\r\n                  </small>\r\n                </div>\r\n              </div>\r\n              <div class=\"min-w-[160px]\">\r\n                <label for=\"amount\">\r\n                  <span class=\"\"> Verify Date </span>\r\n                </label>\r\n                <input\r\n                  *ngIf=\"type !== 'VERIFY'\"\r\n                  type=\"date\"\r\n                  class=\"form-control form-control-solid\"\r\n                  placeholder=\"Date\"\r\n                  formControlName=\"verifyDate\"\r\n                />\r\n                <div\r\n                  *ngIf=\"type === 'VERIFY'\"\r\n                  class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                >\r\n                  {{ paymentDetails.get(i + \".verifyDate\")?.value }}\r\n                </div>\r\n                <div\r\n                  *ngIf=\"\r\n                    errorIndex === i &&\r\n                    paymentDetails.get(i + '.verifyDate')?.errors\r\n                  \"\r\n                  class=\"text-red-500\"\r\n                >\r\n                  <!-- *ngIf=\"\r\n                  paymentDetails.get(i + '.verifyDate')?.errors?.required\r\n                \" -->\r\n                  <small> Verify Date Required </small>\r\n                </div>\r\n              </div>\r\n              <div class=\"min-w-[160px]\">\r\n                <label\r\n                  for=\"amount\"\r\n                  *ngIf=\"\r\n                    paymentDetails.get(i + '.type')?.value !== 'REFUND' ||\r\n                    userType !== 'Customer'\r\n                  \"\r\n                >\r\n                  <span class=\"\"> ACTION </span>\r\n                </label>\r\n                <div>\r\n                  <a\r\n                    class=\"btn btn-warning btn-sm\"\r\n                    *ngIf=\"check(i)\"\r\n                    (click)=\"moveTo(skill.value, i)\"\r\n                  >\r\n                    <!-- (click)=\"removeItem(i, skill.value)\" -->\r\n                    <!-- <span\r\n                  [inlineSVG]=\"\r\n                    './assets/media/icons/duotune/general/gen012.svg'\r\n                  \"\r\n                  class=\"svg-icon svg-icon-3 svg-icon-warning\"\r\n                ></span> -->\r\n                    Back to Approval\r\n                  </a>\r\n                  <a\r\n                    class=\"btn btn-success btn-sm\"\r\n                    *ngIf=\"type === 'PENDING'\"\r\n                    (click)=\"moveTo(skill.value, i)\"\r\n                  >\r\n                    <!-- (click)=\"removeItem(i, skill.value)\" -->\r\n                    <!-- <span\r\n                  [inlineSVG]=\"\r\n                    './assets/media/icons/duotune/files/fil025.svg'\r\n                  \"\r\n                  class=\"svg-icon svg-icon-3 svg-icon-success\"\r\n                ></span> -->\r\n                    Approve\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div\r\n          class=\"table-responsive mb-3 overflow-visible max-h-[50vh]\"\r\n          [ngClass]=\"{ 'overflow-scroll': paymentDetails.controls.length >= 5 }\"\r\n          *ngIf=\"paymentDetails.controls.length\"\r\n        >\r\n          <table\r\n            class=\"table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4 w-full\"\r\n          >\r\n            <thead>\r\n              <tr class=\"fw-bold text-muted\">\r\n                <th class=\"min-w-[200px]\">Payment Code</th>\r\n                <th class=\"min-w-[200px]\">Payment Type</th>\r\n                <th class=\"min-w-[200px]\">Transfer Mode</th>\r\n                <th class=\"min-w-[200px]\">Bank</th>\r\n                <th class=\"min-w-[120px]\">Amount</th>\r\n                <th class=\"min-w-[120px]\">Date</th>\r\n                <th class=\"min-w-[120px]\">Description</th>\r\n                <th class=\"min-w-[120px]\">Verify Date</th>\r\n                <th class=\"min-w-[120px]\">ACTION</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody formArrayName=\"paymentDetails\">\r\n              <tr\r\n                *ngFor=\"let skill of paymentDetails.controls; let i = index\"\r\n                [formGroupName]=\"i\"\r\n              >\r\n                <td>\r\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                    {{ paymentDetails.get(i + \".payment_Code\")?.value }}\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                    {{ paymentDetails.get(i + \".typeView\")?.value }}\r\n                  </div>\r\n                  <div\r\n                    class=\"text-sm text-gray-700 mt-1\"\r\n                    *ngIf=\"\r\n                      paymentDetails.get(i + '.typeView')?.value === 'REFUND'\r\n                    \"\r\n                  >\r\n                    Refund to\r\n                    {{ paymentDetails.get(i + \".customerName\")?.value }}\r\n                  </div>\r\n                  <div\r\n                    *ngIf=\"paymentDetails.get(i + '.mode')?.value\"\r\n                    class=\"mt-1 text-{{\r\n                      paymentDetails.get(i + '.mode')?.value === 'Credit'\r\n                        ? 'green'\r\n                        : 'red'\r\n                    }}-600\"\r\n                  >\r\n                    {{\r\n                      paymentDetails.get(i + \".mode\")?.value === \"Credit\"\r\n                        ? \"Pay from Supplier\"\r\n                        : paymentDetails.get(i + \".mode\")?.value === \"Debit\"\r\n                        ? \"Pay to Supplier\"\r\n                        : \"\"\r\n                    }}\r\n                  </div>\r\n                  <div\r\n                    *ngIf=\"submitted && paymentDetails.get(i + '.type')?.errors\"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"paymentDetails.get(i + '.type')?.errors?.required\"\r\n                      >Payment Type Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                    {{ paymentDetails.get(i + \".transferMode\")?.value }}\r\n                  </div>\r\n\r\n                  <div\r\n                    *ngIf=\"\r\n                      submitted &&\r\n                      paymentDetails.get(i + '.transferMode')?.errors\r\n                    \"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"\r\n                        paymentDetails.get(i + '.transferMode')?.errors\r\n                          ?.required\r\n                      \"\r\n                      >Transfer Mode Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                    {{ paymentDetails.get(i + \".bank\")?.value }}\r\n                  </div>\r\n\r\n                  <div\r\n                    *ngIf=\"submitted && paymentDetails.get(i + '.bank')?.errors\"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"paymentDetails.get(i + '.bank')?.errors?.required\"\r\n                      >Bank Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                    {{ paymentDetails.get(i + \".amount\")?.value }}\r\n                  </div>\r\n\r\n                  <div\r\n                    class=\"text-sm text-gray-700 mt-1\"\r\n                    *ngIf=\"\r\n                      paymentDetails.get(i + '.transferPercent')?.value > 0\r\n                    \"\r\n                  ></div>\r\n\r\n                  <div\r\n                    *ngIf=\"\r\n                      submitted && paymentDetails.get(i + '.amount')?.errors\r\n                    \"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"\r\n                        paymentDetails.get(i + '.amount')?.errors?.required\r\n                      \"\r\n                      >Amount Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                    {{\r\n                      paymentDetails.get(i + \".date\")?.value\r\n                        | date : \"dd/MM/yyyy\"\r\n                    }}\r\n                  </div>\r\n                  <div\r\n                    *ngIf=\"submitted && paymentDetails.get(i + '.date')?.errors\"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"paymentDetails.get(i + '.date')?.errors?.required\"\r\n                      >Date Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div class=\"form-control form-control-solid min-h-[43.5px]\">\r\n                    {{ paymentDetails.get(i + \".description\")?.value }}\r\n                  </div>\r\n\r\n                  <div\r\n                    *ngIf=\"\r\n                      submitted &&\r\n                      paymentDetails.get(i + '.description')?.errors\r\n                    \"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small\r\n                      *ngIf=\"\r\n                        paymentDetails.get(i + '.description')?.errors?.required\r\n                      \"\r\n                    >\r\n                      Description Required\r\n                    </small>\r\n                  </div>\r\n                </td>\r\n\r\n                <td>\r\n                  <input\r\n                    *ngIf=\"type !== 'VERIFY'\"\r\n                    type=\"date\"\r\n                    class=\"form-control form-control-solid\"\r\n                    placeholder=\"Date\"\r\n                    formControlName=\"verifyDate\"\r\n                  />\r\n                  <div\r\n                    *ngIf=\"type === 'VERIFY'\"\r\n                    class=\"form-control form-control-solid min-h-[43.5px]\"\r\n                  >\r\n                    {{ paymentDetails.get(i + \".verifyDate\")?.value }}\r\n                  </div>\r\n                  <div\r\n                    *ngIf=\"\r\n                      errorIndex === i &&\r\n                      paymentDetails.get(i + '.verifyDate')?.errors\r\n                    \"\r\n                    class=\"text-red-500\"\r\n                  >\r\n                    <small> Verify Date Required </small>\r\n                  </div>\r\n                </td>\r\n\r\n                <td>\r\n                  <a\r\n                    class=\"btn btn-warning btn-sm\"\r\n                    *ngIf=\"type === 'VERIFY'\"\r\n                    (click)=\"moveTo(skill.value, i)\"\r\n                  >\r\n                    Back to Approval\r\n                  </a>\r\n                  <a\r\n                    class=\"btn btn-success btn-sm\"\r\n                    *ngIf=\"type === 'PENDING'\"\r\n                    (click)=\"moveTo(skill.value, i)\"\r\n                  >\r\n                    Approve\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div> -->\r\n\r\n        <!-- <div\r\n          class=\"grid grid-cols-2 md:grid-cols-6 gap-2 mt-4\"\r\n          *ngIf=\"paymentDetails.controls.length && type === 'PENDING'\"\r\n        >\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <button class=\"btn btn-light-primary\" (click)=\"resetForm()\">\r\n            Clear\r\n          </button>\r\n          <button class=\"btn btn-primary\" (click)=\"onSubmit()\">Update</button>\r\n        </div> -->\r\n      </form>\r\n    </div>\r\n    <!-- end::Body -->\r\n  </div>\r\n</div>\r\n"],"names":[],"sourceRoot":"webpack:///"}